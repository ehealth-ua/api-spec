FORMAT: 1A
HOST: https://api.ehealth.gov.ua

# eHealth MIS API

Version: MA 9.5.2 v.2

Environment: **PROD**

This is a **MIS-related consumers  part** of API documentation for Ukrainian Health Services government institution back-end, that should provide:

* Master Patients Index (MPI)
* Global Medical Institutions and Doctors Registries
* Partnership Relation Management (PRM) module that describes business relations between this 3 entities.

This API design in based on [Nebo #15 API Design Manifest](http://docs.apimanifest.apiary.io/).

## Context Switching for end-users

Since Doctor may have multiple work-places, you MUST fetch list of possible work-contexts and apply `legal_entity_id` filter on each request, where this parameter is available.

Thus you will make sure that end-user understand from which context entities are managed.

If our API returns only one work context, you are free to hide context picker.

## Submitting Issues

# Group Public. Medical Service Provider Integration Layer
the below table reflects actual API endpoints for all the ehealth environments
Env     | Host
--------|-----
DEMO    | https://api-demo.ehealth.gov.ua
PREPROD | https://api-preprod.ehealth.gov.ua
PROD    | https://api.ehealth.gov.ua

##oAuth [/api/oauth]

1. Client UI: redirects user to Login UI with `client_id`, `redirect_uri` and `response_type=code` query params;
2. Login UI: completes [Session]() auth flow with `apps:create` scope;
3. Login UI: renders page with Approval (which lists requested scopes);
4. User: approves scopes;
5. Login UI: sends `POST /apps` request and redirects user to location returned in `Location` header;
6. Client: exchanges `code` from query parameters to an `access_token` by sending `POST /tokens` request with `grant_type=authorization_code`.
7. Client Back-End: stores `refresh_token` (in back-end!) and sends `access_token` to Client UI;
8. Client UI: stores `access_token` (in local storage, cookie, etc.) and makes all future requests with `Auhtorization: Bearer <access_token>` header.

**Notes:**
- If User already has approval with insufficient scopes, all steps are required, but Login UI MAY render page that shows only newly added scopes.
- When `access_token` expires, Client repeats steps 6-8 but via `grant_type=refresh_token`.

**API-key:**
- For identifiers MIS clients (as a brocker) we use term API-key. MIS must be **mandatory** send API-key when called e-Health API.
- API-key its a `mis_client_secret` - Medical Information System secret key issued upon integration request.
- API-key dispatched in Request HEADER as a `API-key` attribute. Example:
```
HEADERS
Content-Type:application/json
Authorization:Bearer c2778f3064753ea70de870a53795f5c9
API-key:uXhEczJ56adsfh3Ri9SUkc4en
```
- If MIS don't send API-key in Request HEADER, API return 401 error wih message "API-KEY header required".


**Sequence Diagram**

![oAuth Sequence](https://www.websequencediagrams.com/cgi-bin/cdraw?lz=dGl0bGUgb0F1dGggRmxvdwoKQ2xpZW50IC0-IExvZ2luIFVJOiByZWRpcmVjdCB0bwANCSB3aXRoIGBjACoFX2lkYCwgYAAgCF91cmlgIGFuZCBgcmVzcG9uc2VfdHlwZT1jb2RlYCBxdWVyeSBwYXJhbXMKAEcJAGUNY29tcGxldGUgU2Vzc2lvbiBhdXRoIGZsb3cAJA1Vc2VyOiByZW5kZXIgcGFnZQCBEAZBcHByb3ZhbCAod2hpY2ggbGlzdHMgcmVxdWVzdGVkIHNjb3BlcykKVXNlcgCBXA5hADUFZQAbBwCBEA0Agh8FU2VydmVyOiBzZW5kIGBQT1NUIC9hcHBzYABWCAoAHAsAgjcOSFRUUCAyMDEsAIEVCmFuZCBMb2NhdGlvbiBoZWFkZXIAggMNAIMGBgCCdQt1c2VyIHRvIHVybCByZXR1cm5lZCBpbiBgAD4IYAA_CACDPQoAgSYSAIExBnRva2Vucz9ncmFudACDGAZhdXRob3JpegCBCwVfY29kZSAtIGV4Y2hhbmdlIGAAgzcGZnJvbQCDNgxldGVycyB0byBhbiBgYWNjZXNzXwBWBWAAgXsQAIIzDnRvcmUgcmVmcmVzaCAAgQcFAIIrEACBdggAJQZgACUHAFYHIChpbiBiYWNrLWVuZCEpAIRoBQCDDwYAdw0gdG8Agj8HIFVJCm5vdGUgb3ZlcgBMEAAmDihpbiBsb2NhbACBIQVhZ2UsIGNvb2tpZSwgZXRjLgBnBm1ha2VzIGFsbCBmdXR1AIFHBQCEWgVzAIYSB0F1aHQAgkQJOiBCZWFyZXIgPACCFgw-AIMlCQo&s=modern-blue)

### Login [GET /sign-in{?client_id,redirect_uri,scope,email,user_data}]

**Attention!**
Use following HOSTs for oAuth 2.0 Authentication

Env     | Host
--------|-----
DEMO    | https://api-demo.ehealth.gov.ua
PREPROD | https://auth-preprod.ehealth.gov.ua
PROD    | https://auth.ehealth.gov.ua

You MUST redirect your users to this URL to obtain oAuth Code Grant (which is later exchanged to Access Token).

User will see rendered login page, which structure differ by a list of requested scopes and security measures applied by DevOps team.

For security purposes, we will set `X-Frame-Options: deny` header that will disallow opening this page in an iframe.

+ Parameters
    + `client_id`: `6498d88e-97fb-47e2-85a5-99e884f888aa` (string, required) - Medical Service provider ID issued after legal_entity registration. Used to identify the context of the MSP/Pharmacy.
    + `redirect_uri`: https://example.com/ (string, required) - URL where user will be redirected after authentification. This url will receive `code` and `state` parameters in query string.
    + scope: `capitation_contracts:view capitation_contracts:create patients:view patients:create` (string, required) - List of scopes that is required in application business logic, separated by space. Different login forms will be shown based on scopes that you requested.
    + email: email@example.com
    + `user_data`: `base64_string` - Auth request signed on client side

+ Response 200 (text/html; charset=UTF-8)

    + Headers

            X-CSRF-Token: my-csrf-token

### Logout [POST /auth/logout]

This endpoint is used to terminate users authenticated session based on a valid access token.

Refresh token from authenticated session will also be expired.

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response_OK`)

### Get Nonce [GET /oauth/nonce]
This WS allows to get nonce (one time JWT) for active client of the system.
Field `client_secret` must be passed if client type = TRUSTED_PIS.
Nonce payload example:
```
{
  "aud": "mithril-login",
  "exp": 1523439201,
  "iat": 1523438301,
  "iss": "EHealth",
  "jti": "efe1f08e-d4b4-4cef-a02c-78ea4a1dda25",
  "nbf": 1523438300,
  "nonce": 123,
  "sub": 123,
  "typ": "access"
}
```
+ Request (application/json)

    + Attributes (object)
        + `client_id`: `30074b6e-fbab-4dc1-9d37-88c21dab1847` (string, required)
        + `client_secret`: `c2778f3064753ea70de870a53795f5c9` (string, optional)


+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (object)
           + token: 'eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJtaXRocmlsLWxvZ2luIiwiZXhwIjoxNTIzNDM5MjAxLCJpYXQiOjE1MjM0MzgzMDEsImlzcyI6IkVIZWFsdGgiLCJqdGkiOiJlZmUxZjA4ZS1kNGI0LTRjZWYtYTAyYy03OGVhNGExZGRhMjUiLCJuYmYiOjE1MjM0MzgzMDAsIm5vbmNlIjoxMjMsInN1YiI6MTIzLCJ0eXAiOiJhY2Nlc3MifQ.UZ6S92h3nAG-GKY_XUE1Rc6uR_BuqR8ufUJfMhhKtNmt7DkkQlU49qPXjL0LFddVz1E2DXi2a-BQ0FG-DHsTHA' (string, required)

### Authorize an Approval [POST /oauth/apps/authorize]
This endpoint should be reachable only by the eHealth authorization front-end application.
It will update or create Approval. It's idempotent.

After creating Approval user should be redirected to `redirect_url` with `code` query parameter.

+ Request (application/json)
    + Headers

            Authorization: Bearer 432fsdfg543252345tfgdsgdft2345 - access_token with the `app:authorize` scope

    + Attributes
        + app (required)
            + client_id: `client-1380df72-275a-11e7-93ae-92361f002671` (string, required) - ID of client that is granted with access to user's resources.
            + scope: `notebooks:read notebooks:create patients:read` (string, required) - List of scopes that are granted to the client on the user's behalf.
            + `redirect_uri`: `http://example.com/my_success_login_page` (string, required) - URL of client where user will be redirected on Approval creation.

+ Response 201 (application/json)
    + Headers

            Location: http://example.com/my_success_login_page?code=authorization_code-cTdHUE9jN29yWHo0VTAwL3lwSVRoUT09

    + Attributes (`Response_OK`)
        + meta (`Response__Meta`)
            + code: 201 (number)
        + data (`Approval_Response_v2`)
        + urgent
            + `redirect_uri`: `http://example.com/my_success_login_page?code=authorization_code-cTdHUE9jN29yWHo0VTAwL3lwSVRoUT09`

+ Response 200 (application/json)
    + Headers

            Location: http://example.com/my_success_login_page?code=authorization_code-cTdHUE9jN29yWHo0VTAwL3lwSVRoUT09

    + Attributes (`Response_OK`)
        + data (`Approval_Response`)

### Exchange oAuth Code Grant to Access Token [POST /oauth/tokens]

After obtaining oAuth Code Grant, it should be exchanged to an `access_token` **on your back-end**.

General recommendations:

- Never expose `client_secret` to your front-end.
- Also we recommend to avoid pushing it to the application source code, to limit number of developers that have access to it.

Exposed client credentials may be blocked for a security reasons, you will need to contact administrator to receive a new credentials.

+ Request (application/json)

    + Headers

            X-CSRF-Token: my-csrf-token

    + Attributes (object)
        + token (object)
            + `client_id`: `6498d88e-97fb-47e2-85a5-99e884f888aa` (string, required) - Medical Service provider ID issued after legal_entity registration. Used to identify the context of the MSP/Pharmacy.
            + client_secret: `msp-001-secret-key` (string, required) - Medical Information System secret key issued upon integration request. Used to identify application developer.
            + code: 299383828 (string, required) - oAuth code grant.
            + `grant_type`: authorization_code (string, fixed, required) - oAuth Grant Type. Currently only `authorization_code` is supported.
            + redirect_uri: https://example.com/ (string, required) - URL where user will be redirected after authentification. This url will receive `code` and `state` parameters in query string.
            + scope: `capitation_contracts:view capitation_contracts:create patients:view patients:create` (string, required) - List of scopes that is required in application business logic, separated by space. Different login forms will be shown based on scopes that you requested.

+ Response 201 (application/json)
    + Attributes (`Response_OK`)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (`Access_Token`)

### Use Refresh Token for Access Token extension [POST /oauth/tokens]

Currently `access_token` and `refresh_token` are configured to have same lifetime, so we don't expect you to refresh it.

In future, you will be able to refresh access tokens to extend `access_token` lifetime.

+ Request (application/json)

    + Attributes (object)
        + token (object)
            + `client_id`: `6498d88e-97fb-47e2-85a5-99e884f888aa` (string, required) - Medical Service provider ID issued after legal_entity registration. Used to identify the context of the MSP/Pharmacy.
            + client_secret: `msp-001-secret-key` (string, required) - Medical Service provider secret key issued upon integration request. Used to identify MSP.
            + refresh_token: `my-oauth-refresh-token` (string, required) - oAuth refresh token.
            + `grant_type`: refresh_token (string, fixed) - oAuth Grant Type. Currently only `authorization_code` is supported.

+ Response 201 (application/json)
    + Attributes (`Response_OK`)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (`Access_Token_1`)


## Dictionaries [/api/dictionaries]

Methods is used to retreive eHealth dictionaries

Response **$.data** object contains a list of all dictionaries.

### Get dictionaries [GET]
Each dictionary is an object that contains *{key}*:*{value}* pairs where:
* ***{key}*** is a dictionary record
* ***{value}*** is a dictionary record description

+ Parameters
    + `name`: `eHealth/LOINC/observation_codes` (string, optional) - dictionary name
    + `is_active`: true (boolean, optional) - dictionary status

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (array[`Dictionary`])


### Get dictionaries v2 [GET /api/v2/dictionaries{?name,is_active,value_code,value_description,value_is_active}]
Each dictionary is an object that contains not only a code and description of a value, but also a status of the value. In addition, it can represent hierarchical dictionaries with subordinate (child) values

+ Parameters
    + `name`: `eHealth/ICF/classifiers` (string, optional) - dictionary name
    + `is_active`: true (boolean, optional) - dictionary status
    + `value_code`: `b1142` (string, optional) - code of the dictionary value
    + `value_description`: `Орієнтація в особі` (string, optional) - description of the dictionary value
    + `value_is_active`: true (string, optional) - status of the dictionary value

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (array[`Dictionary_v2`])
            + (object)
                + include `Dictionary_v2`
                + name: `eHealth/ICPC2/condition_codes` (string, required) - Unique dictionary name
                + description: `Коди станів за ICPC2` (string, required) - dictionary description for a user
                + values (array, required)
                    + (Dictionary_value)
                        + code: `D88` (string, required) - code of the dictionary value
                        + description: `Апендицит` (string, required) - description of the code

## OTP Verification [/api/verifications]

Method is used to verify that provided in declarartion request phone number is valid and is in service

### Initialize OTP Verification [POST]

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

    + Attributes (object)
        + `phone_number`: `+380508887700` (string, required)

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + data (`OTP`)

### Complete OTP Verification [PATCH /api/verifications/{phone_number}/actions/complete]

+ Parameters
    + `phone_number`: `+380508887700` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

    + Attributes (object)
        + code: 3782 (number)

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + data (`OTP`)

### Find Verifications by Phone Number [GET /api/verifications/{phone_number}]

+ Parameters
    + `phone_number`: `+380508887700` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Response_verification_by_phone`)

### Verify phone number [POST /api/sms_verifications]

This endpoint is used to verify submitted phone number as a part of person registration process. 

In case number needs verification - generate and send OTP, in case phone does not need verification - return OK.

+ Request (application/json)

    + Headers
            Authorization: Bearer eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJjYWJpbmV0LXJlZ2lzdHJhdGlvbiIsImVtYWlsIjoiYXByb2tvcHBoYXJtZGlyNEB1a3IubmV0IiwiZXhwIjoxNjgyNjkzNTc3LCJpYXQiOjE2ODI2NjQ3NzcsImlzcyI6IkVIZWFsdGgiLCJqdGkiOiIxOTAyYTkyYS00MDcyLTQ3MWEtYmU4NS1iZWU0MzQzNmNlYjEiLCJuYmYiOjE2ODI2NjQ3NzYsInN1YiI6ImFwcm9rb3BwaGFybWRpcjRAdWtyLm5ldCIsInR5cCI6ImFjY2VzcyJ9.EXTuYRQenjqzsjNAJ5agmEbSHcg_XRKwc3VOGAtSjfMOy4uIJ_BBMUeUWSVzy4_OezPjEIiVcnaLTN4pZbtgow

    + Attributes (object)
        + `factor`: `+380501112233` (string, required) - phone number that needs to be verified.
        + `type`: SMS (enum, required) - verification type.
            - SMS
        + `content_hash`: `76dea970d89477ed03dc5289f297443c` (string, optional) - MD5 hash of content with phone number that needs to be verified.

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + meta (`Response__Meta`)
            + code: 200 (number)
        + data (object, required)
            + `result`: `OTP sent` (enum, required) - phone verification result.
                - `OTP sent`
                - `Verified`
        + urgent (object, required)
            + `next_step`: `REQUEST_OTP` (string, optional) - next step that needs to be taken in phone verification process.

## Person Requests [/api/person_requests]
[Person Request]() is a life-cycle entity that is used to create person WITHOUT [Declarations]().


### Create/Update Person Request [POST /api/person_requests]

This method will be deprecated. Use **Create/Update Person Request v2**.

This method is used to create Person Request (as part of Person creation w/o declaration process).
Upon successful completion of the whole process, a person is created in MPI.


**NOTE:** Also this method allows you to update the person’s data according to his id, which was previously found.

A block with information about authentication methods must be transferred when the person is created. But it is prohibited to transfer it when updating the person.

This table shows which fields can be set for specific action:

Actions   | person.id     | person.authentication_methods
----------|---------------|--------------------
**Create**    |      -        | required    
**Update**    | required      |     -       

      

There are three methods of authentication - OTP, OFFLINE and the THIRD_PERSON. A person > 14 years can have OTP or OFFLINE.
A person < 14 years can only have authentication method = THIRD PERSON.

More detailed information - https://e-health-ua.atlassian.net/wiki/x/KoAfIw

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            api-key: uXhEczJ56adsfh3Ri9SUkc4en

    + Attributes (object)
        + person (required)
            + id: `13001c60-45a0-4b5a-b425-9505e1de18bd`(string, optional) - MPI id of the person
            + include (`Person_info_Public`, required)
        + patient_signed: false (boolean, required) - Факт подписания заявки на збереження/створення персоны.
        + `process_disclosure_data_consent`: true (boolean, required) - Согласие на раскрытие персональных данных
        + authorize_with: `cc949559-5dfe-420f-ac05-065e443b2cc6` (string, optional)- identifier of person's auth method

+ Response 201 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + status: SIGNED (enum, optional)
                - NEW
                - APPROVED
                - SIGNED
                - CANCELLED
                - REJECTED
            + id: `eeebb86d-5cba-43c9-885b-6482ecaf826b` (string, required)
            + person (required)
                + id: `13001c60-45a0-4b5a-b425-9505e1de18bd`(string, optional) - MPI id of the person
                + include (`Person_info_Public`, required)
            + patient_signed: false (boolean, required) - Факт подписания заявки на декларацию.
            + `process_disclosure_data_consent`: true (boolean, required) - Согласие на раскрытие персональных данных
            + channel: `MIS` (enum, required) - channel that invoke person request create service
            + authorize_with: `cc949559-5dfe-420f-ac05-065e443b2cc6` (string, optional)- identifier of person's auth method
        + urgent (object, required)
            + `authentication_method_current` (array[`Authentication_Method`], required)
            <!--+ `authentication_methods` (array [`Authentication_Methods_Patient_Response`], required)-->
            + documents (array[`media_content`], optional)

+ Response 422 (application/json)
    + Attributes (`Response_Error`)
        + meta (Response__Meta)
            + code: 422
        + error
            + type: unverified (string, required)
            + message: `Unverified phone number` (string, required)


### Create/Update Person Request v2 [POST /api/v2/person_requests]

This method is used to create Person Request (as part of Person creation w/o declaration process).
Upon successful completion of the whole process, a person is created in MPI.


**NOTE:** Also this method allows you to update the person’s data according to his id, which was previously found.

A block with information about authentication methods must be transferred when the person is created. But it is prohibited to transfer it when updating the person.

A block with information about confidant person can be transferred when the person is created. But it is prohibited to transfer it when updating the person.

This table shows which fields can be set for specific action:

Actions   | person.id     | person.authentication_methods| person.confidant_person
----------|---------------|--------------------|--------------------
**Create**    |      -        | required    | optional
**Update**    | required      |     -       |     -

      

There are three methods of authentication - OTP, OFFLINE and the THIRD_PERSON. A person > 14 years can have OTP or OFFLINE.
A person < 14 years can only have authentication method = THIRD PERSON.

Link to THIRD PERSON (`authentication_methods.value`) must be equal to confidant_person_id

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            api-key: uXhEczJ56adsfh3Ri9SUkc4en

    + Attributes (object)
        + person (required)
            + id: `13001c60-45a0-4b5a-b425-9505e1de18bd`(string, optional) - MPI id of the person
            + include (`Person_info_Public_request_v2_with_new_confidant_data`, required)
        + patient_signed: false (boolean, required) - Факт подписания заявки на збереження/створення персоны.
        + `process_disclosure_data_consent`: true (boolean, required) - Согласие на раскрытие персональных данных
        + authorize_with: `cc949559-5dfe-420f-ac05-065e443b2cc6` (string, optional)- identifier of person's auth method

+ Response 201 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + status: SIGNED (enum, optional)
                - NEW
                - APPROVED
                - SIGNED
                - CANCELLED
                - REJECTED
            + id: `eeebb86d-5cba-43c9-885b-6482ecaf826b` (string, required)
            + person (required)
                + id: `13001c60-45a0-4b5a-b425-9505e1de18bd`(string, optional) - MPI id of the person
                + include (`Person_info_Public_response_v2_with_new_confidant_data`, required)
            + patient_signed: false (boolean, required) - Факт подписания заявки на декларацию.
            + `process_disclosure_data_consent`: true (boolean, required) - Согласие на раскрытие персональных данных
            + channel: `MIS` (enum, required) - channel that invoke person request create service
            + authorize_with: `cc949559-5dfe-420f-ac05-065e443b2cc6` (string, optional)- identifier of person's auth method
        + urgent (object, required)
            + `authentication_method_current` (array[`Authentication_Method`], required)
            <!--+ `authentication_methods` (array [`Authentication_Methods_Patient_Response`], required)-->
            + documents (array[`media_content`], optional)

+ Response 422 (application/json)
    + Attributes (`Response_Error`)
        + meta (Response__Meta)
            + code: 422
        + error
            + type: unverified (string, required)
            + message: `Unverified phone number` (string, required)



### Approve Person Request [PATCH /api/person_requests/{id}/actions/approve]

This method will be deprecated. Use **Approve Person Request v2**.

Use this method to approve previously created Person Request.

In case if authentication_method is OTP or THIRD_PERSON, request example:
```
{
  "verification_code": 6598
}
```

In case if authentication_method is OFFLINE or N/A, request body should be empty.
Before approve patient's scanned documents should be uploaded to the ([Signed URL's](https://cloud.google.com/storage/docs/access-control/create-signed-urls-program)).
All links are generated for one one-page document in jpeg format. Document should be no more than 10MB.
Clients can use signed URL's to directly access [s3 storage](https://storage.ehealth.gov.ua/) and upload files via API.

More detailed information - https://e-health-ua.atlassian.net/wiki/x/QgAjIw

+ Parameters
    + id: `eeebb86d-5cba-43c9-885b-6482ecaf826b` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            api-key: uXhEczJ56adsfh3Ri9SUkc4en

    + Attributes (object)
        + `verification_code`: 6598 (number, optional) - required if authentication_method is OTP

+ Response 201 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + status: SIGNED (enum, optional)
                - NEW
                - APPROVED
                - SIGNED
                - CANCELLED
                - REJECTED
            + id: `eeebb86d-5cba-43c9-885b-6482ecaf826b` (string, required)
            + person (required)
                + id: `13001c60-45a0-4b5a-b425-9505e1de18bd`(string, optional) - MPI id of the person
                + include (`Person_info_Public`, required)
            + patient_signed: false (boolean, required) - Факт подписания заявки на декларацию.
            + `process_disclosure_data_consent`: true (boolean, required) - Согласие на раскрытие персональных данных
            + content: `Person content` (string, required) - HTML document that MUST be shown to a  - Should be defined on the client side.end-user and signed by hes key.
            + channel: `MIS` (enum, required) - channel that invoke patient create service
            + authorize_with: `cc949559-5dfe-420f-ac05-065e443b2cc6` (string, optional)- identifier of person's auth method

+ Response 422 (application/json)
    + Attributes (`Response_Error`)
        + meta (Response__Meta)
            + code: 422
        + error
            + type: forbidden (string, required)
            + message: `Invalid verification code` (string, required)

  
### Approve Person Request v2 [PATCH /api/v2/person_requests/{id}/actions/approve]

Use this method to approve previously created Person Request.

In case if authentication_method is OTP or THIRD_PERSON, request example:
```
{
  "verification_code": 6598
}
```

In case if authentication_method is OFFLINE or N/A, request body should be empty.
Before approve patient's scanned documents should be uploaded to the ([Signed URL's](https://cloud.google.com/storage/docs/access-control/create-signed-urls-program)).
All links are generated for one one-page document in jpeg format. Document should be no more than 10MB.
Clients can use signed URL's to directly access [s3 storage](https://storage.ehealth.gov.ua/) and upload files via API.

+ Parameters
    + id: `eeebb86d-5cba-43c9-885b-6482ecaf826b` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            api-key: uXhEczJ56adsfh3Ri9SUkc4en

    + Attributes (object)
        + `verification_code`: 6598 (number, optional) - required if authentication_method is OTP

+ Response 201 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + status: SIGNED (enum, optional)
                - NEW
                - APPROVED
                - SIGNED
                - CANCELLED
                - REJECTED
            + id: `eeebb86d-5cba-43c9-885b-6482ecaf826b` (string, required)
            + person (required)
                + id: `13001c60-45a0-4b5a-b425-9505e1de18bd`(string, optional) - MPI id of the person
                + include (`Person_info_Public_response_v2_with_new_confidant_data`, required)
            + patient_signed: false (boolean, required) - Факт подписания заявки на декларацию.
            + `process_disclosure_data_consent`: true (boolean, required) - Согласие на раскрытие персональных данных
            + content: `Person content` (string, required) - HTML document that MUST be shown to a  - Should be defined on the client side.end-user and signed by hes key.
            + channel: `MIS` (enum, required) - channel that invoke patient create service
            + authorize_with: `cc949559-5dfe-420f-ac05-065e443b2cc6` (string, optional)- identifier of person's auth method

+ Response 422 (application/json)
    + Attributes (`Response_Error`)
        + meta (Response__Meta)
            + code: 422
        + error
            + type: forbidden (string, required)
            + message: `Invalid verification code` (string, required)

### Reject Person Request [PATCH /api/person_requests/{id}/actions/reject]

This method will be deprecated. Use **Reject Person Request v2**.

Use this method to reject previously created Person Request.

More detailed information - https://e-health-ua.atlassian.net/wiki/x/MYDAIw

+ Parameters
    + id: `eeebb86d-5cba-43c9-885b-6482ecaf826b` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            api-key: uXhEczJ56adsfh3Ri9SUkc4en

+ Response 201 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (object)
            + status: SIGNED (enum, optional)
                - NEW
                - APPROVED
                - SIGNED
                - CANCELLED
                - REJECTED
            + id: `eeebb86d-5cba-43c9-885b-6482ecaf826b` (string, required
            + person (required)
                + id: `13001c60-45a0-4b5a-b425-9505e1de18bd`(string, optional) - MPI id of the person
                + include (`Person_info_Public`, required)
            + patient_signed: false (boolean, required) - Факт подписания заявки на декларацию.
            + `process_disclosure_data_consent`: true (boolean, required) - Согласие на раскрытие персональных данных
            + content: `Person content` (string, optional) - HTML document that MUST be shown to a  - Should be defined on the client side.end-user and signed by hes key.
            + channel: `MIS` (enum, required) - channel that invoke patient create service
            + authorize_with: `cc949559-5dfe-420f-ac05-065e443b2cc6` (string, optional)- identifier of person's auth method


### Reject Person Request v2 [PATCH /api/v2/person_requests/{id}/actions/reject]

Use this method to reject previously created Person Request.

+ Parameters
    + id: `eeebb86d-5cba-43c9-885b-6482ecaf826b` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            api-key: uXhEczJ56adsfh3Ri9SUkc4en

+ Response 201 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (object)
            + status: SIGNED (enum, optional)
                - NEW
                - APPROVED
                - SIGNED
                - CANCELLED
                - REJECTED
            + id: `eeebb86d-5cba-43c9-885b-6482ecaf826b` (string, required)
            + person (required)
                + id: `13001c60-45a0-4b5a-b425-9505e1de18bd`(string, optional) - MPI id of the person
                + include (`Person_info_Public_response_v2_with_new_confidant_data`, required)
            + patient_signed: false (boolean, required) - Факт подписания заявки на декларацию.
            + `process_disclosure_data_consent`: true (boolean, required) - Согласие на раскрытие персональных данных
            + content: `Person content` (string, optional) - HTML document that MUST be shown to a  - Should be defined on the client side.end-user and signed by hes key.
            + channel: `MIS` (enum, required) - channel that invoke patient create service
            + authorize_with: `cc949559-5dfe-420f-ac05-065e443b2cc6` (string, optional)- identifier of person's auth method


### Sign Person Request [PATCH /api/person_requests/{id}/actions/sign]

This method will be depricated.

This method is used to sign Person Request. Method receives signed message (pkcs7) including signed content, digital signature and signer public key in `signed_content` property.
All signature fields will be validated (including signer certificate authority).

This service will store signed copy of Person Request in Media Content Storage, created or update MPI records  if signature is all checks is passed.

Signed content MUST consists of JSON object with Person Request data and printout template. Object that need to be signed is returned by `Get Person request by ID` or `Approve Person request` response, `JSON.Path: $.data`.
Person must re-read and sign person request print form and after that `patient_signed` should be changed to TRUE.

Person request can be signed either by doctor or admin (user with scope `person_request:write`) from legal entity as in person request.

More detailed information - https://e-health-ua.atlassian.net/wiki/x/QQAiIw

Look at [**Dummy Sign Person Request**](https://uaehealthapi.docs.apiary.io/#reference/dummy-methods/dummy-for-person-request/sign-person-request) for more details.

+ Parameters
    + id: `eeebb86d-5cba-43c9-885b-6482ecaf826b` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            api-key: uXhEczJ56adsfh3Ri9SUkc4en
            mds_drfo: 2534157686

    + Attributes (object)
        + `signed_content`: `ewogICJzdGF0dXMiOiAiQVBQUk9WRUQiLAogICJpZCI6ICJlZWViYjg2ZC01Y2JhLTQzYzktODg1Yi02NDgyZWNhZjgyNmIiLAogICJwZXJzb24iOiB7CiAgICAiaWQiOiAiMTMwMDFjNjAtNDVhMC00YjVhLWI0MjUtOTUwNWUxZGUxOGJkIiwKICAgICJmaXJzdF9uYW1lIjogItCf0LXRgtGA0L4iLAogICAgImxhc3RfbmFtZSI6ICLQhtCy0LDQvdC+0LIiLAogICAgInNlY29uZF9uYW1lIjogItCc0LjQutC+0LvQsNC50L7QstC40YciLAogICAgImJpcnRoX2RhdGUiOiAiMjAwOS0wNy0wNSIsCiAgICAiYmlydGhfY291bnRyeSI6ICLQo9C60YDQsNGX0L3QsCIsCiAgICAiYmlydGhfc2V0dGxlbWVudCI6ICLQktGW0L3QvdC40YbRjyIsCiAgICAiZ2VuZGVyIjogIk1BTEUiLAogICAgImVtYWlsIjogImVtYWlsQGV4YW1wbGUuY29tIiwKICAgICJub190YXhfaWQiOiBmYWxzZSwKICAgICJ0YXhfaWQiOiAiMzk5OTg2OTM5NCIsCiAgICAic2VjcmV0IjogInNlY3JldCIsCiAgICAiZG9jdW1lbnRzIjogWwogICAgICB7CiAgICAgICAgInR5cGUiOiAiQklSVEhfQ0VSVElGSUNBVEUiLAogICAgICAgICJudW1iZXIiOiAi0JDQkDEyMDUxOCIsCiAgICAgICAgImlzc3VlZF9ieSI6ICLQoNC+0LrQuNGC0L3Rj9C90YHRjNC60LjQvCDQoNCSINCT0KMg0JzQktChINCa0LjRl9Cy0YHRjNC60L7RlyDQvtCx0LvQsNGB0YLRliIsCiAgICAgICAgImlzc3VlZF9hdCI6ICIyMDE3LTAyLTI4IiwKICAgICAgICAiZXhwaXJhdGlvbl9kYXRlIjogIjIwMjctMDItMjgiCiAgICAgIH0KICAgIF0sCiAgICAiYWRkcmVzc2VzIjogWwogICAgICB7CiAgICAgICAgInR5cGUiOiAiUkVTSURFTkNFIiwKICAgICAgICAiY291bnRyeSI6ICJVQSIsCiAgICAgICAgImFyZWEiOiAi0JbQuNGC0L7QvNC40YDRgdGM0LrQsCIsCiAgICAgICAgInJlZ2lvbiI6ICLQkdC10YDQtNC40YfRltCy0YHRjNC60LjQuSIsCiAgICAgICAgInNldHRsZW1lbnQiOiAi0JrQuNGX0LIiLAogICAgICAgICJzZXR0bGVtZW50X3R5cGUiOiAiQ0lUWSIsCiAgICAgICAgInNldHRsZW1lbnRfaWQiOiAiYjA3NWYxNDgiLAogICAgICAgICJzdHJlZXRfdHlwZSI6ICJTVFJFRVQiLAogICAgICAgICJzdHJlZXQiOiAi0LLRg9C7LiDQndGW0LbQuNC90YHRjNC60LAiLAogICAgICAgICJidWlsZGluZyI6ICIxNSIsCiAgICAgICAgImFwYXJ0bWVudCI6ICIyMyIsCiAgICAgICAgInppcCI6ICIwMjA5MCIKICAgICAgfQogICAgXSwKICAgICJwaG9uZXMiOiBbCiAgICAgIHsKICAgICAgICAidHlwZSI6ICJNT0JJTEUiLAogICAgICAgICJudW1iZXIiOiAiKzM4MDUwMzQxMDg3MCIKICAgICAgfQogICAgXSwKICAgICJhdXRoZW50aWNhdGlvbl9tZXRob2RzIjogWwogICAgICB7CiAgICAgICAgInR5cGUiOiAiVEhJUkRfUEVSU09OIiwKICAgICAgICAidmFsdWUiOiAiKzM4MDUwODg4NzcwMCIsCiAgICAgICAgImFsaWFzIjogImh1c2JhbmQiCiAgICAgIH0KICAgIF0sCiAgICAidW56ciI6ICIyMDA5MDcwNS0wMDAxMSIsCiAgICAiZW1lcmdlbmN5X2NvbnRhY3QiOiB7CiAgICAgICJmaXJzdF9uYW1lIjogItCf0LXRgtGA0L4iLAogICAgICAibGFzdF9uYW1lIjogItCG0LLQsNC90L7QsiIsCiAgICAgICJzZWNvbmRfbmFtZSI6ICLQnNC40LrQvtC70LDQudC+0LLQuNGHIiwKICAgICAgInBob25lcyI6IFsKICAgICAgICB7CiAgICAgICAgICAidHlwZSI6ICJNT0JJTEUiLAogICAgICAgICAgIm51bWJlciI6ICIrMzgwNTAzNDEwODcwIgogICAgICAgIH0KICAgICAgXQogICAgfSwKICAgICJjb25maWRhbnRfcGVyc29uIjogWwogICAgICB7CiAgICAgICAgInJlbGF0aW9uX3R5cGUiOiAiUFJJTUFSWSIsCiAgICAgICAgImZpcnN0X25hbWUiOiAi0J/QtdGC0YDQviIsCiAgICAgICAgImxhc3RfbmFtZSI6ICLQhtCy0LDQvdC+0LIiLAogICAgICAgICJzZWNvbmRfbmFtZSI6ICLQnNC40LrQvtC70LDQudC+0LLQuNGHIiwKICAgICAgICAiYmlydGhfZGF0ZSI6ICIxOTcyLTEwLTI2IiwKICAgICAgICAiYmlydGhfY291bnRyeSI6ICLQo9C60YDQsNGX0L3QsCIsCiAgICAgICAgImJpcnRoX3NldHRsZW1lbnQiOiAi0JLRltC90L3QuNGG0Y8iLAogICAgICAgICJnZW5kZXIiOiAiTUFMRSIsCiAgICAgICAgInRheF9pZCI6ICIyNjU5NzE5MzUwIiwKICAgICAgICAic2VjcmV0IjogInNlY3JldCIsCiAgICAgICAgImRvY3VtZW50c19wZXJzb24iOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0eXBlIjogIlBBU1NQT1JUIiwKICAgICAgICAgICAgIm51bWJlciI6ICLQkNCQMTIwNTE4IiwKICAgICAgICAgICAgImlzc3VlZF9ieSI6ICLQoNC+0LrQuNGC0L3Rj9C90YHRjNC60LjQvCDQoNCSINCT0KMg0JzQktChINCa0LjRl9Cy0YHRjNC60L7RlyDQvtCx0LvQsNGB0YLRliIsCiAgICAgICAgICAgICJpc3N1ZWRfYXQiOiAiMjAxNy0wMi0yOCIKICAgICAgICAgIH0KICAgICAgICBdLAogICAgICAgICJkb2N1bWVudHNfcmVsYXRpb25zaGlwIjogWwogICAgICAgICAgewogICAgICAgICAgICAidHlwZSI6ICJQQVNTUE9SVCIsCiAgICAgICAgICAgICJudW1iZXIiOiAi0JDQkDEyMDUxOCIsCiAgICAgICAgICAgICJpc3N1ZWRfYnkiOiAi0KDQvtC60LjRgtC90Y/QvdGB0YzQutC40Lwg0KDQkiDQk9CjINCc0JLQoSDQmtC40ZfQstGB0YzQutC+0Zcg0L7QsdC70LDRgdGC0ZYiLAogICAgICAgICAgICAiaXNzdWVkX2F0IjogIjIwMTctMDItMjgiCiAgICAgICAgICB9CiAgICAgICAgXSwKICAgICAgICAicGhvbmVzIjogWwogICAgICAgICAgewogICAgICAgICAgICAidHlwZSI6ICJNT0JJTEUiLAogICAgICAgICAgICAibnVtYmVyIjogIiszODA1MDM0MTA4NzAiCiAgICAgICAgICB9CiAgICAgICAgXSwKICAgICAgICAiZW1haWwiOiAiZW1haWxsQGV4YW1wbGUuY29tIgogICAgICB9CiAgICBdLAogICAgInByZWZlcnJlZF93YXlfY29tbXVuaWNhdGlvbiI6ICJlbWFpbCIKICB9LAogICJwYXRpZW50X3NpZ25lZCI6IHRydWUsCiAgInByb2Nlc3NfZGlzY2xvc3VyZV9kYXRhX2NvbnNlbnQiOiB0cnVlLAogICJjb250ZW50IjogIjxodG1sPjxib2R5PjxwPnNpZ25lZCBwZXJzb24gZGF0YTwvcD48L2JvZHk+PC9odG1sPiIsCiAgImNoYW5uZWwiOiAiTUlTIgp9` (string, required)

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + data (`Patient_short`)
        

### Sign Person Request v2 [PATCH /api/v2/person_requests/{id}/actions/sign]

This method is used to sign Person Request. Method receives signed message (pkcs7) including signed content, digital signature and signer public key in `signed_content` property.
All signature fields will be validated (including signer certificate authority).

This service will store signed copy of Person Request in Media Content Storage, created or update MPI records  if signature is all checks is passed.

Signed content MUST consists of JSON object with Person Request data and printout template. Object that need to be signed is returned by `Get Person request by ID v2` or `Approve Person request v2` response, `JSON.Path: $.data`.
Person must re-read and sign person request print form and after that `patient_signed` should be changed to TRUE.

Person request can be signed either by doctor or admin (user with scope `person_request:write`) from legal entity as in person request.


Look at [**Dummy Sign Person Request**](https://uaehealthapi.docs.apiary.io/#reference/dummy-methods/dummy-for-person-request/sign-person-request) for more details.

+ Parameters
    + id: `eeebb86d-5cba-43c9-885b-6482ecaf826b` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            api-key: uXhEczJ56adsfh3Ri9SUkc4en
            mds_drfo: 2534157686

    + Attributes (object)
        + `signed_content`: `ewogICJzdGF0dXMiOiAiQVBQUk9WRUQiLAogICJpZCI6ICJlZWViYjg2ZC01Y2JhLTQzYzktODg1Yi02NDgyZWNhZjgyNmIiLAogICJwZXJzb24iOiB7CiAgICAiaWQiOiAiMTMwMDFjNjAtNDVhMC00YjVhLWI0MjUtOTUwNWUxZGUxOGJkIiwKICAgICJmaXJzdF9uYW1lIjogItCf0LXRgtGA0L4iLAogICAgImxhc3RfbmFtZSI6ICLQhtCy0LDQvdC+0LIiLAogICAgInNlY29uZF9uYW1lIjogItCc0LjQutC+0LvQsNC50L7QstC40YciLAogICAgImJpcnRoX2RhdGUiOiAiMjAwOS0wNy0wNSIsCiAgICAiYmlydGhfY291bnRyeSI6ICLQo9C60YDQsNGX0L3QsCIsCiAgICAiYmlydGhfc2V0dGxlbWVudCI6ICLQktGW0L3QvdC40YbRjyIsCiAgICAiZ2VuZGVyIjogIk1BTEUiLAogICAgImVtYWlsIjogImVtYWlsQGV4YW1wbGUuY29tIiwKICAgICJub190YXhfaWQiOiBmYWxzZSwKICAgICJ0YXhfaWQiOiAiMzk5OTg2OTM5NCIsCiAgICAic2VjcmV0IjogInNlY3JldCIsCiAgICAiZG9jdW1lbnRzIjogWwogICAgICB7CiAgICAgICAgInR5cGUiOiAiQklSVEhfQ0VSVElGSUNBVEUiLAogICAgICAgICJudW1iZXIiOiAi0JDQkDEyMDUxOCIsCiAgICAgICAgImlzc3VlZF9ieSI6ICLQoNC+0LrQuNGC0L3Rj9C90YHRjNC60LjQvCDQoNCSINCT0KMg0JzQktChINCa0LjRl9Cy0YHRjNC60L7RlyDQvtCx0LvQsNGB0YLRliIsCiAgICAgICAgImlzc3VlZF9hdCI6ICIyMDE3LTAyLTI4IiwKICAgICAgICAiZXhwaXJhdGlvbl9kYXRlIjogIjIwMjctMDItMjgiCiAgICAgIH0KICAgIF0sCiAgICAiYWRkcmVzc2VzIjogWwogICAgICB7CiAgICAgICAgInR5cGUiOiAiUkVTSURFTkNFIiwKICAgICAgICAiY291bnRyeSI6ICJVQSIsCiAgICAgICAgImFyZWEiOiAi0JbQuNGC0L7QvNC40YDRgdGM0LrQsCIsCiAgICAgICAgInJlZ2lvbiI6ICLQkdC10YDQtNC40YfRltCy0YHRjNC60LjQuSIsCiAgICAgICAgInNldHRsZW1lbnQiOiAi0JrQuNGX0LIiLAogICAgICAgICJzZXR0bGVtZW50X3R5cGUiOiAiQ0lUWSIsCiAgICAgICAgInNldHRsZW1lbnRfaWQiOiAiYjA3NWYxNDgiLAogICAgICAgICJzdHJlZXRfdHlwZSI6ICJTVFJFRVQiLAogICAgICAgICJzdHJlZXQiOiAi0LLRg9C7LiDQndGW0LbQuNC90YHRjNC60LAiLAogICAgICAgICJidWlsZGluZyI6ICIxNSIsCiAgICAgICAgImFwYXJ0bWVudCI6ICIyMyIsCiAgICAgICAgInppcCI6ICIwMjA5MCIKICAgICAgfQogICAgXSwKICAgICJwaG9uZXMiOiBbCiAgICAgIHsKICAgICAgICAidHlwZSI6ICJNT0JJTEUiLAogICAgICAgICJudW1iZXIiOiAiKzM4MDUwMzQxMDg3MCIKICAgICAgfQogICAgXSwKICAgICJhdXRoZW50aWNhdGlvbl9tZXRob2RzIjogWwogICAgICB7CiAgICAgICAgInR5cGUiOiAiVEhJUkRfUEVSU09OIiwKICAgICAgICAidmFsdWUiOiAiKzM4MDUwODg4NzcwMCIsCiAgICAgICAgImFsaWFzIjogImh1c2JhbmQiCiAgICAgIH0KICAgIF0sCiAgICAidW56ciI6ICIyMDA5MDcwNS0wMDAxMSIsCiAgICAiZW1lcmdlbmN5X2NvbnRhY3QiOiB7CiAgICAgICJmaXJzdF9uYW1lIjogItCf0LXRgtGA0L4iLAogICAgICAibGFzdF9uYW1lIjogItCG0LLQsNC90L7QsiIsCiAgICAgICJzZWNvbmRfbmFtZSI6ICLQnNC40LrQvtC70LDQudC+0LLQuNGHIiwKICAgICAgInBob25lcyI6IFsKICAgICAgICB7CiAgICAgICAgICAidHlwZSI6ICJNT0JJTEUiLAogICAgICAgICAgIm51bWJlciI6ICIrMzgwNTAzNDEwODcwIgogICAgICAgIH0KICAgICAgXQogICAgfSwKICAgICJjb25maWRhbnRfcGVyc29uIjogWwogICAgICB7CiAgICAgICAgInJlbGF0aW9uX3R5cGUiOiAiUFJJTUFSWSIsCiAgICAgICAgImZpcnN0X25hbWUiOiAi0J/QtdGC0YDQviIsCiAgICAgICAgImxhc3RfbmFtZSI6ICLQhtCy0LDQvdC+0LIiLAogICAgICAgICJzZWNvbmRfbmFtZSI6ICLQnNC40LrQvtC70LDQudC+0LLQuNGHIiwKICAgICAgICAiYmlydGhfZGF0ZSI6ICIxOTcyLTEwLTI2IiwKICAgICAgICAiYmlydGhfY291bnRyeSI6ICLQo9C60YDQsNGX0L3QsCIsCiAgICAgICAgImJpcnRoX3NldHRsZW1lbnQiOiAi0JLRltC90L3QuNGG0Y8iLAogICAgICAgICJnZW5kZXIiOiAiTUFMRSIsCiAgICAgICAgInRheF9pZCI6ICIyNjU5NzE5MzUwIiwKICAgICAgICAic2VjcmV0IjogInNlY3JldCIsCiAgICAgICAgImRvY3VtZW50c19wZXJzb24iOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgICJ0eXBlIjogIlBBU1NQT1JUIiwKICAgICAgICAgICAgIm51bWJlciI6ICLQkNCQMTIwNTE4IiwKICAgICAgICAgICAgImlzc3VlZF9ieSI6ICLQoNC+0LrQuNGC0L3Rj9C90YHRjNC60LjQvCDQoNCSINCT0KMg0JzQktChINCa0LjRl9Cy0YHRjNC60L7RlyDQvtCx0LvQsNGB0YLRliIsCiAgICAgICAgICAgICJpc3N1ZWRfYXQiOiAiMjAxNy0wMi0yOCIKICAgICAgICAgIH0KICAgICAgICBdLAogICAgICAgICJkb2N1bWVudHNfcmVsYXRpb25zaGlwIjogWwogICAgICAgICAgewogICAgICAgICAgICAidHlwZSI6ICJQQVNTUE9SVCIsCiAgICAgICAgICAgICJudW1iZXIiOiAi0JDQkDEyMDUxOCIsCiAgICAgICAgICAgICJpc3N1ZWRfYnkiOiAi0KDQvtC60LjRgtC90Y/QvdGB0YzQutC40Lwg0KDQkiDQk9CjINCc0JLQoSDQmtC40ZfQstGB0YzQutC+0Zcg0L7QsdC70LDRgdGC0ZYiLAogICAgICAgICAgICAiaXNzdWVkX2F0IjogIjIwMTctMDItMjgiCiAgICAgICAgICB9CiAgICAgICAgXSwKICAgICAgICAicGhvbmVzIjogWwogICAgICAgICAgewogICAgICAgICAgICAidHlwZSI6ICJNT0JJTEUiLAogICAgICAgICAgICAibnVtYmVyIjogIiszODA1MDM0MTA4NzAiCiAgICAgICAgICB9CiAgICAgICAgXSwKICAgICAgICAiZW1haWwiOiAiZW1haWxsQGV4YW1wbGUuY29tIgogICAgICB9CiAgICBdLAogICAgInByZWZlcnJlZF93YXlfY29tbXVuaWNhdGlvbiI6ICJlbWFpbCIKICB9LAogICJwYXRpZW50X3NpZ25lZCI6IHRydWUsCiAgInByb2Nlc3NfZGlzY2xvc3VyZV9kYXRhX2NvbnNlbnQiOiB0cnVlLAogICJjb250ZW50IjogIjxodG1sPjxib2R5PjxwPnNpZ25lZCBwZXJzb24gZGF0YTwvcD48L2JvZHk+PC9odG1sPiIsCiAgImNoYW5uZWwiOiAiTUlTIgp9` (string, required)

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + data (`Patient_short`)
        

### Get Person Request by ID [GET /api/person_requests/{id}]

This method will be depricated. Use **Get Person Request by ID v2** instead.

+ Parameters
    + id: `eeebb86d-5cba-43c9-885b-6482ecaf826b` (string, required) - request identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            api-key: uXhEczJ56adsfh3Ri9SUkc4en

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + status: SIGNED (enum, optional)
                - NEW
                - APPROVED
                - SIGNED
                - CANCELLED
                - REJECTED
            + id: `eeebb86d-5cba-43c9-885b-6482ecaf826b` (string, required)
            + person (required)
                + id: `13001c60-45a0-4b5a-b425-9505e1de18bd`(string, optional) - MPI id of the person
                + include (`Person_info_Public`, required)
            + patient_signed: false (boolean, required) - Факт подписания заявки на декларацию.
            + `process_disclosure_data_consent`: true (boolean, required) - Согласие на раскрытие персональных данных
            + content: `Person content` (string, optional) - HTML document that MUST be shown to a  - Should be defined on the client side.end-user and signed by hes key.
            + channel: `MIS` (enum, required) - channel that invoke person request create service
                - MIS
            + authorize_with: `cc949559-5dfe-420f-ac05-065e443b2cc6` (string, optional)- identifier of person's auth method
        + urgent (object, required)
            + `authentication_method_current` (array[`Authentication_Method`], required)
            <!--+ `authentication_methods` (array [`Authentication_Methods_Patient_Response`], required)-->
            + documents (array[`media_content`], optional)


### Get Person Request by ID v2 [GET /api/v2/person_requests/{id}]

Use this method to obtain Person Request details.

+ Parameters
    + id: `eeebb86d-5cba-43c9-885b-6482ecaf826b` (string, required) - request identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            api-key: uXhEczJ56adsfh3Ri9SUkc4en

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + status: SIGNED (enum, optional)
                - NEW
                - APPROVED
                - SIGNED
                - CANCELLED
                - REJECTED
            + id: `eeebb86d-5cba-43c9-885b-6482ecaf826b` (string, required)
            + person (required)
                + id: `13001c60-45a0-4b5a-b425-9505e1de18bd`(string, optional) - MPI id of the person
                + include (`Person_info_Public_response_v2_with_new_confidant_data`, required)
            + patient_signed: false (boolean, required) - Факт подписания заявки на декларацию.
            + `process_disclosure_data_consent`: true (boolean, required) - Согласие на раскрытие персональных данных
            + content: `Person content` (string, optional) - HTML document that MUST be shown to a  - Should be defined on the client side.end-user and signed by hes key.
            + channel: `MIS` (enum, required) - channel that invoke person request create service
                - MIS
            + authorize_with: `cc949559-5dfe-420f-ac05-065e443b2cc6` (string, optional)- identifier of person's auth method
        + urgent (object, required)
            + `authentication_method_current` (array[`Authentication_Method`], required)
            <!--+ `authentication_methods` (array [`Authentication_Methods_Patient_Response`], required)-->
            + documents (array[`media_content`], optional)

### Get Person Requests List [GET /api/person_requests{?legal_entity_id,status,page,page_size}]

Use this method to obtain list of Person Requests. 
If you want to reduce amount of data that is going trough your application, use `status` filter and show only requests that Doctor or Admin is interested in current UIfeat: section.

Service returns only person request related to the same legal entity as the user.

Method returns shortened details, to obtain full information - get Person Request it by it's ID.

More detailed information - https://e-health-ua.atlassian.net/wiki/x/BADDIw

+ Parameters
    + status: APPROVED (enum, optional)
        - NEW
        - APPROVED
        - SIGNED
        - REJECTED
        - CANCELLED
    + page: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 300. Default: 50


+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            api-key: uXhEczJ56adsfh3Ri9SUkc4en

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array[`Patient_Request_Short`])


### Resend Authorization OTP on Person Request [POST /api/person_requests/{id}/actions/resend_otp]

This method is used when you need to re-send SMS to a person who approve creating or updating data about himself.


More detailed information - https://e-health-ua.atlassian.net/wiki/x/N4DrJ

+ Parameters
    + id: `eeebb86d-5cba-43c9-885b-6482ecaf826b` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            api-key: uXhEczJ56adsfh3Ri9SUkc4en
    
    <!--+ Attributes (object)
        + type: `THIRD_PERSON` (enum, optional)
            - OTP
            - OFFLINE
            - THIRD_PERSON
        + alias: `husband` (string, optional)-->

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + data (`OTP`)

## Declaration Requests [/api/declaration_requests]

[Declaration Request]() is a life-cycle entity that is used to perform operations on [Declarations]().

After declaration request is signed and/or verified (depends on verification logic) it will be automatically moved to [Declarations]().

### Create Declaration Request V3 [POST /api/v3/declaration_requests]

This method is used to create Declaration Request (as part of Declaration creation process) via new api. 

This method method allows you to create a declaration only for an existing person.

To create declaration request based on active declaration in reorganized legal entity, `parent_declaration_id` must be passed in request.

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            api-key: uXhEczJ56adsfh3Ri9SUkc4en

    + Attributes (object)
        + include `Declaration_Request_Online`
        + authorize_with: `cc949559-5dfe-420f-ac05-065e443b2cc6` (string, optional)- identifier of person's auth method
        + parent_declaration_id: `8c7753fc-a647-435f-8e43-4ff4546431f6` (string, optional) - identifier of parent declaration in reorganized legal entity

+ Response 201 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + start_date: `2017-03-02` (string, required) - Should be defined on the client side.
            + end_date: `2017-03-02` (string, required) - Will be defined on eHealth side if it's not set.
            + `person_id`: `4d0d790c-cbf1-44f5-ab21-ba8db67da161` (string, required) - Person ID
            + `employee_id`: `1a8b10ea-ba09-40f2-8f9e-55608e9208c6` (string, required) - Employee ID with `type=DOCTOR` selected from available Employees as a third contract party.
            + `division_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
            + declaration_number: `0000-12H4-245D` (string, required) - unique number of declaration.
            + declaration_id: `8311ab82-e341-4da0-8a95-235ec9885e23` (string, required) - presetted id for future declaration
            + parent_declaration_id: `8c7753fc-a647-435f-8e43-4ff4546431f6` (string, optional) - identifier of parent declaration
            + status: `NEW` (string, required)
            + `status_reason`: `not relevant` (string, optional) - `Dictionary DECLARATION_REQUEST_STATUS_REASON`
            + `system_declaration_limit`: 900 (number, optional) - Current doctor's limit based on speciality_officio
            + `current_declaration_count`: 675 (number, optional) - Number of declarations assigned to doctor
            + channel: `MIS` (enum, required) - channel that invoke declaration create service
            + authorize_with: `cc949559-5dfe-420f-ac05-065e443b2cc6` (string, optional)- identifier of person's auth method
            
        + urgent (object, required)
            + `authentication_method_current` (object, required)
                + type: `OTP` (enum, required)
                    - OTP
                    - OFFLINE
                    - NA
                + number: `+38093*****74` (string, required)
            + documents (array[`media_content`], optional)

+ Response 422 (application/json)
    + Attributes (`Response_Error`)
        + meta (Response__Meta)
            + code: 422
        + error
            + type: unverified (string, required)
            + message: `Person not found` (string, required)

### Approve Declaration Request V3 [PATCH /api/v3/declaration_requests/{id}/actions/approve]

Use this method to approve previously created Declaration Request.

In case if authentication_method is OTP, request example:
```
{
  "verification_code": 3748
}
```
In case if authentication_method is OFFLINE or N/A, request body should be empty.
Before approve patient's scanned documents should be uploaded to the ([Signed URL's](https://cloud.google.com/storage/docs/access-control/create-signed-urls-program)).
All links are generated for one one-page document in jpeg format. Document should be no more than 10MB.
If make declaration request via cabinet then nothing must be uploaded to URL.
Clients can use signed URL's to directly access [s3 storage](https://storage.ehealth.gov.ua/) and upload files via API.

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

    + Attributes (object)
        + `verification_code`: 2836 (number, optional) - required if authentication_method is OTP

+ Response 201 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + start_date: `2017-03-02` (string, required) - Should be defined on the client side.
            + end_date: `2017-03-02` (string, required) - Will be defined on eHealth side if it's not set.
            + `person_id`: `4d0d790c-cbf1-44f5-ab21-ba8db67da161` (string, required) - Person ID
            + `employee_id`: `1a8b10ea-ba09-40f2-8f9e-55608e9208c6` (string, required) - Employee ID with `type=DOCTOR` selected from available Employees as a third contract party.
            + `division_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
            + declaration_number: `0000-12H4-245D` (string, required) - unique number of declaration.
            + declaration_id: `8311ab82-e341-4da0-8a95-235ec9885e23` (string, required) - presetted id for future declaration
            + parent_declaration_id: `8c7753fc-a647-435f-8e43-4ff4546431f6` (string, optional) - identifier of parent declaration
            + status: `NEW` (string, required)
            + `status_reason`: `not relevant` (string, optional) - `Dictionary DECLARATION_REQUEST_STATUS_REASON`
            + `system_declaration_limit`: 900 (number, optional) - Current doctor's limit based on speciality_officio
            + `current_declaration_count`: 675 (number, optional) - Number of declarations assigned to doctor
            + channel: `MIS` (enum, required) - channel that invoke declaration create service
            + authorize_with: `cc949559-5dfe-420f-ac05-065e443b2cc6` (string, optional)- identifier of person's auth method
            + `data_to_be_signed` (`Decl_req_data_to_be_signed`, required)

+ Response 422 (application/json)
    + Attributes (`Response_Error`)
        + meta (Response__Meta)
            + code: 422
        + error
            + type: request_malformed (string, required)
            + message: `This doctor has X declarations and could not sign more` (string, required)

### Reject Declaration Request V3 [PATCH /api/v3/declaration_requests/{id}/actions/reject]

Use this method to reject previously created Declaration Request.

+ Parameters
    + id: b075f148-7f93-4fc2-b2ec-2d81b19a9b7b (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 201 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (object)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + start_date: `2017-03-02` (string, required) - Should be defined on the client side.
            + end_date: `2017-03-02` (string, required) - Will be defined on eHealth side if it's not set.
            + `person_id`: `4d0d790c-cbf1-44f5-ab21-ba8db67da161` (string, required) - Person ID
            + `employee_id`: `1a8b10ea-ba09-40f2-8f9e-55608e9208c6` (string, required) - Employee ID with `type=DOCTOR` selected from available Employees as a third contract party.
            + `division_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
            + declaration_number: `0000-12H4-245D` (string, required) - unique number of declaration.
            + declaration_id: `8311ab82-e341-4da0-8a95-235ec9885e23` (string, required) - presetted id for future declaration
            + parent_declaration_id: `8c7753fc-a647-435f-8e43-4ff4546431f6` (string, optional) - identifier of parent declaration
            + status: `NEW` (string, required)
            + `status_reason`: `not relevant` (string, optional) - `Dictionary DECLARATION_REQUEST_STATUS_REASON`
            + `system_declaration_limit`: 900 (number, optional) - Current doctor's limit based on speciality_officio
            + `current_declaration_count`: 675 (number, optional) - Number of declarations assigned to doctor
            + channel: `MIS` (enum, required) - channel that invoke declaration create service
            + authorize_with: `cc949559-5dfe-420f-ac05-065e443b2cc6` (string, optional)- identifier of person's auth method
            + `data_to_be_signed` (`Decl_req_data_to_be_signed`, optional)

### Sign Declaration Request V3 [PATCH /api/v3/declaration_requests/{id}/actions/sign]

This method is used to sign Declaration Request. Method receives signed message (pkcs7) including signed content, digital signature and signer public key in `signed_content` property.
All signature fields will be validated (including signer certificate authority).

This service will store signed copy of Declaration Request in Media Content Storage, create declaration if signature is all checks is passed.

Signed content MUST consists of JSON object with Declaration Request data from field `data_to_be_signed`. Object that need to be signed is returned by `Get Declaration request by ID` or `Approve declaration request` response, `JSON.Path: $.data.data_to_be_signed`.
Patient must re-read and sign declaration print form and after that `patient_signed` should be changed to TRUE.

Declaration request can be signed either by doctor or admin (user with scope `declaration_request:sign`) from legal entity as in declaration request.

**Important**
Invoke Get Declaration Request by ID to obtain seed - Hash of previous block in declarations chain or other random component that should be signed with declaration.

There is a [**dummy method**](https://uaehealthapi.docs.apiary.io/#reference/dummy-methods/dummy-for-declaration-request/sign-declaration-request) that describes the signed date example.

+ Parameters
    + id: b075f148-7f93-4fc2-b2ec-2d81b19a9b7b (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

    + Attributes (object)
        + `signed_declaration_request`: `` (string, required)

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + data (`Declaration_short_v3`)
        
        

### Get Declaration Request by ID V3 [GET /api/v3/declaration_requests/{id}]

This endpoint returns declaration requests that were created through V2 and V3. Fields `person_id` and `data_to_be_signed` will be empty if declaration request is created by V2.

+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - request identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + start_date: `2017-03-02` (string, required) - Should be defined on the client side.
            + end_date: `2017-03-02` (string, required) - Will be defined on eHealth side if it's not set.
            + `person_id`: `4d0d790c-cbf1-44f5-ab21-ba8db67da161` (optional, required) - Person ID
            + `employee_id`: `1a8b10ea-ba09-40f2-8f9e-55608e9208c6` (string, required) - Employee ID with `type=DOCTOR` selected from available Employees as a third contract party.
            + `division_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
            + `legal_entity_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - MSP ID.
            + declaration_number: `0000-12H4-245D` (string, required) - unique number of declaration.
            + declaration_id: `8311ab82-e341-4da0-8a95-235ec9885e23` (string, required) - presetted id for future declaration
            + parent_declaration_id: `8c7753fc-a647-435f-8e43-4ff4546431f6` (string, optional) - identifier of parent declaration  
            + status: SIGNED (enum, required)
                - NEW
                - APPROVED
                - SIGNED
                - CANCELLED
            + `status_reason`: `not relevant` (string, optional) - `Dictionary DECLARATION_REQUEST_STATUS_REASON`
            + `system_declaration_limit`: 900 (number, optional) - Current doctor's limit based on speciality_officio
            + `current_declaration_count`: 675 (number, optional) - Number of declarations assigned to doctor
            + channel: `MIS` (enum, required) - channel that invoke declaration create service
            + authorize_with: `cc949559-5dfe-420f-ac05-065e443b2cc6` (string, optional)- identifier of person's auth method
            + `data_to_be_signed` (`Decl_req_data_to_be_signed`, optional)
        + urgent (object, required)
            + `authentication_method_current` (object, required)
                + type: `OTP` (enum, required)
                    - OTP
                    - OFFLINE
                    - NA
                + number: `+38093*****85` (string, required)
            + documents (array[`media_content`], optional)

### Get Declaration Requests List V3 [GET /api/v3/declaration_requests{?employee_id,legal_entity_id,status,channel,page,page_size}]

Use this method to obtain list of Declaration Requests for an `empolee_id`. If you want to reduce amount of data that is going trough your application, use `status` filter and show only requests that Doctor or Admin is interested in current UI section.


Also we suggest use `employee_id` and `legal_entity_id` to make sure that end-user understands context of actions that he or she will perform.

Method returns shortened details, to obtain full information - get Declaration Request it by it's ID.

**Important**

This endpoint shows the declaration requests which are created by V2 and V3. Due to the fact that structure of declaration request V3 is different from the structure of decl request V2 , so not all fields of declaration request v2 can be displayed.
If declaration request is created by v2, the field `person_id` will be empty

+ Parameters
    + `employee_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - user_id of a doctor.
    + `legal_entity_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - MSP ID.
    + status: active (enum, optional)
        - NEW
        - APPROVED
        - SIGNED
        - REJECTED
        - CANCELLED
    + channel: MIS (enum, optional)
        - MIS
        - PIS
        - CABINET
    + page: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 300. Default: 50


+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array[`Declaration_Response_Short_v3`])
        
        

### Resend Authorization OTP on Declaration Request [POST /api/v3/declaration_requests/{id}/actions/resend_otp]

Use this method to resend sms on previously created Declaration Request V3.

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + data (`OTP`)


## Declarations [/api/declarations]

### Get Declarations List [GET /api/declarations{?employee_id,legal_entity_id,status,declaration_number,page,page_size,reason}]

Use this method to obtain list of Declarations for an `empolee_id` and legal_entity_id. If you want to reduce amount of data that is going trough your application, use `status` filter and show only requests that Doctor is interested in current UI section.

**Scopes required:** `declaration:read`

Method returns shortened details, to obtain full information - get Declaration Details by it's ID.

+ Parameters
    + `employee_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - `user_id` of a Doctor.
    + `legal_entity_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - MSP ID.
    + `declaration_number`: `0000-12H4-245D` (string, optional) - unique human redable number of declaration.
    + status: active (string, optional)
        + Default: active
    + reason: offline (string, optional) - filter declaration by reason
    + page: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 300. Default: 50

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array[`nhs_declaration_list_Public`])

### Get Declaration by ID [GET /api/declarations/{id}]
This method allows to receive detailed information about person Declaration by declaration ID.

**Scopes required:** `declaration:read`

+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - request identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (object)
            + include `Declaration_Details`
        + urgent (object, required)
            + `authentication_method_current` (object, required)
                + type: `OTP` (enum, required)
                    - OTP
                    - OFFLINE
                    - NA
                + number: `+38093*****85` (string, required)

### Verify declaration  [PATCH /api/declarations/{id}/actions/approve]

This method is used by NHS_admin to verify declarations that has been created with the offline authorization.
declaration status will be changed to `active`

+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

    + Attributes (`crud_Declaration_patch`)

+ Response 200 (application/json)
    + Attributes (`Response_OK`)

### Reject declaration  [PATCH /declarations/{id}/reject]

This method is used by NHS_admin to reject declarations that has been created with the offline authorization.
In case if the verification result is not acceptable.
declaration status will be changed to `closed`

+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

    + Attributes (`crud_Declaration_patch`)

+ Response 200 (application/json)
    + Attributes (`Response_OK`)

## Employees [/api/employees]

The set of the end-points may be used to manage `Doctors`, `HR's` and `Accountants` that
are employed by legal entity (such as Medical Service Provider).

According to the strong binding of the Employees to the Employer (legal entity)
all GET-endpoints returning Employee info are mounted through the
`/legal_entities/{legal_entity_id}` path.

### Get Employees list [GET /api/employees{?no_tax_id,tax_id,party_id,verification_status,edrpou,legal_entity_id,division_id,status,employee_type,page,page_size}]

Use this end-point to obtain all Employees of the legal entity.
Method returns shortened data structure. Use [**Get Employee details**](https://uaehealthapi.docs.apiary.io/#reference/public.-medical-service-provider-integration-layer/employees/get-employee-details) to get detailed information.

**Scopes required:** `employee:read`

+ Parameters
    + no_tax_id: true (boolean, optional) - filer employees with or w/o tax_id
    + tax_id: 3015492561 (string, optional)
    + party_id: `d290f1ee-6c54-4b01-90e6-d701748f0152` (string, optional)
    + edrpou: 38782323 (string, optional) - filter employees by legal_entity edrpou
    + `legal_entity_id`: `d290f1ee-6c54-4b01-90e6-d701748f0152` (string, optional) - filter employees by legal_entity id
    + division_id: `d290f1ee-6c54-4b01-90e6-d701748f0152` (string, optional)
    + status: APPROVED (enum, optional) - filet employees by status
        - APPROVED
        - DISMISSED
        - REORGANIZED
    + employee_type: DOCTOR (string, optional)
    + page: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 300. Default: 50

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array[`Employee_Short`])

### Get Employee details [GET /api/employees/{employee_id}]

Use this end-point to obtain detailed information about employee.
Response structure differs depending on employee type:

**For HR, ACCOUNTANT, OWNER or PHARMACY_OWNER:**
* Person info
* Employee info
* User Info

**For DOCTOR, SPECIALIST, ASSISTANT, PHARMACIST, MED_ADMIN, LABORANT or MED_COORDINATOR:**
* Person info
* Employee info
* User Info
* Employee info

**Scopes required:** `employee:details`

+ Parameters
    + employee_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)

+ Request (application/json)

    + Headers
    
            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Employee_Response`)
            + division (Division_Short)
            + `legal_entity` (`Legal_Entity_Short`)
                + `legal_form`: 140 (string, required) - `Business form of legal entity received from edr - Use dictionary LEGAL_FORM to show the name`
                + `owner_property_type`: STATE (string, required) - `Dictionary OWNER_PROPERTY_TYPE`
                + `mis_verified`: VERIFIED, NOT_VERIFIED (enum, required)


### Deactivate Employee [PATCH /api/employees/{id}/actions/deactivate]

Use this method to deactivate employee. OWNER and PHARMACY_OWNER can't be deactivated using this method.
(the 409 error with message 'Owner can't be deactivated').
OWNER and PHARMACY_OWNER deactivates when corresponding legal_entity deactivates.
Employee deactivation:
1. Revoke role from user

2. Deactivate declarations

3. Update employee parameters:
 - change status=DISMISSED and end_date=now

+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Employee_Response`)
            + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
            + division (Division_Short)
                + `legal_entity` (`Legal_Entity_Short`)

### Get Party verification details [GET /api/parties/{id}/verification]
This method returns current party's verification status and another information about it.

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Party identifier
    
    
+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            api-key: uXhEczJ56adsfh3Ri9SUkc4en

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
        + data (object)
            + include `Party_Verification_Details`
                    

### Update Party verification status [PATCH /api/parties/{id}/verification]
Use this method to update party's verification status. Now updating of DRACS death verification status is allowed.

**Scopes required:** `party_verification:write`

+ Parameters
    + `id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - Party identifier
    
+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

    + Attributes (object)
       + `dracs_death` (object)
           + `verification_status`: `VERIFIED` (string, required) - Party DRACS death verification status according to `PARTY_VERIFICATION_STATUSES` dictionary. `VERIFIED` only is allowed.
           + `verification_reason`: `MANUAL_COMFIRMED` (string, required) - Verification reason according to `PARTY_VERIFICATION_STATUS_REASONS` dictionary. `MANUAL_CONFIRMED` OR `MANUAL_NOT_CONFIRMED` are allowed.
           + `verification_comment`: `Смерть співробітника підтверджено` (string) - Verification comment

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + meta (Response__Meta)
        + data (object)
            + include `Party_Verification_Details`


## Employee Requests [/api/employee_requests]

### Create Employee Request v2 [POST /api/v2/employee_requests]

Employee_Request consist of the three mandatory parts:
* Person info
* Employee info
    * the specialties block should contain all the specialties of the employee
* User Info

**MED_ADMIN, MED_COORDINATOR:**
* Employee could have zero or one record with `speciality_officio=true` value

**For DOCTOR or PHARMACIST:**
* Doctor ot Pharmacist info

Additionally to register/update Physician the `Doctor info` for Doctors and `Pharmacist info` for Pharmacist should be passed.

When the `Employee_Request` will be posted the Invitation e-mail with a request
secret token will be sent to the User specified in the request.

In case the employee doesn't have tax_id no_tax_id must be true and in fields tax_id input passport number (serial number in cyrillic without spaces)

It can be also used to update employee data. In this case `employee_id` should be passed in the payload.

User may accept or decline Invitation.

For changes to take effect employee must confirm the changes.
Method receives signed message (pkcs7) including signed content, digital signature and signer public key.
All signature fields will be validated (including signer certificate authority).
Signed content MUST consists of JSON object with the `employee_request` block of [data](https://uaehealthapi.docs.apiary.io/#reference/dummy-methods/dummy-for-employee-request/create-employee-request-v2):

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

    + Attributes (object)
        + `signed_content`: `...` (string, required)
        + `signed_content_encoding`: base64 (string, required)


+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (`Employee_Request_Details`)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + inserted_at: `2017-05-05T14:09:59.232112` (string, required)
            + updated_at: `2017-05-05T14:09:59.232112` (string, required)

### Get Employee Requests List [GET /api/employee_requests{?id,edrpou,legal_entity_name,no_tax_id,status,page,page_size}]

+ Parameters
    + `id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional)
    + `edrpou`: `341086` (string, optional)
    + `legal_entity_name`: `Лимич Медікал` (string, optional)
    + `no_tax_id`: true (boolean, optional)
    + `status`: NEW (enum, optional)
        - NEW
        - REJECTED
        - APPROVED
        + Default: NEW
    + page: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 300. Default: 50

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array[`Employee_Request_Short`])

### Get Employee Request by ID [GET /api/employee_requests/{id}]

This service should be used with `access_token` authetification method.

+ Parameters

    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)

+ Request

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9 (string, optional)

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + data (`Employee_Request_Details`)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + inserted_at: `2017-05-05T14:09:59.232112` (string, optional)
            + updated_at: `2017-05-05T14:09:59.232112` (string, optional)
        + urgent (object, optional)
            + user_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)

### Get Employee ID by Employee Request ID [GET /api/mis/employee_requests/{id}]

This service should be used with mis `access_token` authetification method and used to get employee id and employee request status by employee request id.
**Scopes required:** `event:read`

+ Parameters

    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)

+ Request

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9 (string, optional)   

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + data
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + employee_id: `836c4753-ece4-44ba-b63c-0f92900535bf` (string, optional)
            + status: `APPROVED` (string, required)
            + updated_at: `2017-05-05T14:09:59.232112` (string, optional)

## Persons [/api/persons]

### Search for a Person [GET /api/persons{?first_name,last_name,second_name,birth_date,tax_id,phone_number,birth_place,birth_certificate,page,page_size}]

This method allows to search for a Person (MPI) without disclosing personal data.

Method returns only **requested** parameters, birth place and second name in addition for manual identification on MSP side.

Block `merged_persons` will be deprecated from response and endpoint `Search Person's merged persons` has information abount all merged persons which are related to this person

+ Parameters
    + first_name: Петро (string, required)
    + last_name: Іванов (string, required)
    + second_name: Миколайович (string, optional)
    + birth_date: `1991-08-19` (string, required) - Complete date format
    + tax_id: 3126509816 (string, optional)
    + phone_number: `+380508887700` (string, optional)
    + `birth_certificate`: 123456 (string, optional) - birth_certificate is optional parameter for search
+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + data (array)
            + (object)
                + include (`Person_Short`)
                + merged_persons (array, required)
                    + (object)
                        + id: `57e30ea3-16f1-4f8e-adcd-1a05e99e2d22` (string, optional) - identifier of the relation of persons who are compared during the deduplication process
                        + inserted_at: `2019-05-08T15:34:00Z` (string, optional)
                        + merge_person_id: `bdadc2a7-7283-4f24-bc99-8d8d9808af80` (string, optional) - identifier of a person who is recognized as a duplicate and subsequently deactivated
                        + person_id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, optional) - identifier of the person who as a result of the deduplication is recognized as true and subsequently left active
                        + updated_at: `2019-05-08T15:34:00Z` (string, optional)


+ Response 403 (application/json)
    + Attributes (`Response_Error`)
        + meta (Response__Meta, fixed-type)
            + code: 403 (number)
        + error (Response__Error, fixed-type)
            + type: `too_many_results`
            + message: `This API method returns only exact match results, please retry with more specific search result` (string)
            

### Search Person's merged persons [GET /api/persons/{id}/merged_persons]

This method allows to find all persons, which were merged with this person. Also this endpoint shows all the persons who enter the whole chain of merges to this person.
This information was in response of Get `Search for a Person` before.

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            api-key: uXhEczJ56adsfh3Ri9SUkc4en


+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + data (array)
            + (object)
                + id: `57e30ea3-16f1-4f8e-adcd-1a05e99e2d22` (string, optional) - identifier of the relation of persons who are compared during the deduplication process
                + inserted_at: `2019-05-08T15:34:00Z` (string, optional)
                + merge_person_id: `bdadc2a7-7283-4f24-bc99-8d8d9808af80` (string, optional) - identifier of a person who is recognized as a duplicate and subsequently deactivated
                + master_person_id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, optional) - identifier of the person who as a result of the deduplication is recognized as true and subsequently left active
                + updated_at: `2019-05-08T15:34:00Z` (string, optional)
            + (object)
                + id: `a4181621-681f-4e46-b0ba-7fa4e59859ef` (string, optional) - identifier of the relation of persons who are compared during the deduplication process
                + inserted_at: `2019-01-08T15:34:00Z` (string, optional)
                + merge_person_id: `1a356e56-a991-4ceb-a475-3edfd9930265` (string, optional) - identifier of a person who is recognized as a duplicate and subsequently deactivated
                + master_person_id: `bdadc2a7-7283-4f24-bc99-8d8d9808af80` (string, optional) - identifier of the person who as a result of the deduplication is recognized as true and subsequently left active
                + updated_at: `2019-01-08T15:34:00Z` (string, optional)


+ Response 404 (application/json)
    + Attributes (`Response_Error`)
        + meta (Response__Meta, fixed-type)
            + code: 404 (number)
        + error (Response__Error, fixed-type)
            + type: `forbidden`
            + message: `Such person not found` (string)
 

### Create Person [POST /api/persons/create]
**[Not implemented]** This WS is designed to create person in offline method by legal_entity employee. Employee need scope person:write to create person.
Method receives signed message (pkcs7) including signed content, digital signature and signer public key. All signature fields will be validated (including signer certificate authority).

Entity data:
{
    "first_name": "Петро",
    "last_name": "Іванов",
    "second_name": "Миколайович",
    "birth_date": "1991-08-19",
    "birth_country": "Україна",
    "birth_settlement": "Вінниця",
    "gender": "MALE",
    "email": "email@example.com",
    "tax_id": "3126509816",
    "secret": "secret",
    "documents": [
      {
        "type": "PASSPORT",
        "number": "120518",
        "issued_by": "Рокитнянським РВ ГУ МВС Київської області",
        "issued_at": "2017-02-28"
      }
    ],
    "addresses": [
      {
        "type": "RESIDENCE",
        "country": "UA",
        "area": "Житомирська",
        "region": "Бердичівський",
        "settlement": "Київ",
        "settlement_type": "CITY",
        "settlement_id": "b075f148-7f93-4fc2-b2ec-2d81b19a9b7b",
        "street_type": "STREET",
        "street": "вул. Ніжинська",
        "building": "15",
        "apartment": "23",
        "zip": "02090"
      }
    ],
    "phones": [
      {
        "type": "MOBILE",
        "number": "+380503410870"
      }
    ],
    "authentication_methods": [
      {
        "type": "OTP",
        "phone_number": "+380508887700"
      }
    ],
    "preferred_way_communication": "email",
    "emergency_contact": {
      "first_name": "Петро",
      "last_name": "Іванов",
      "second_name": "Миколайович",
      "phones": [
        {
          "type": "MOBILE",
          "number": "+380503410870"
        }
      ]
    },
    "process_disclosure_data_consent": true
  }
}

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

    + Attributes (object)
        + `signed_request`: `MIIUKAYJKoZIhvcNAQcCoIIUGTCCFBUCAQExDjAMBgoqhiQCAQEBAQIBMIIGRgYJKoZIhvcNAQcBoIIGNwSCBjN7CiAgICAiZmlyc3RfbmFtZSI6ICLQn9C10YLRgNC+IiwKICAgICJsYXN0X25hbWUiOiAi0IbQstCw0L3QvtCyIiwKICAgICJzZWNvbmRfbmFtZSI6ICLQnNC40LrQvtC70LDQudC+0LLQuNGHIiwKICAgICJiaXJ0aF9kYXRlIjogIjE5OTEtMDgtMTkiLAogICAgImJpcnRoX2NvdW50cnkiOiAi0KPQutGA0LDRl9C90LAiLAogICAgImJpcnRoX3NldHRsZW1lbnQiOiAi0JLRltC90L3QuNGG0Y8iLAogICAgImdlbmRlciI6ICJNQUxFIiwKICAgICJlbWFpbCI6ICJlbWFpbEBleGFtcGxlLmNvbSIsCiAgICAidGF4X2lkIjogIjMxMjY1MDk4MTYiLAogICAgInNlY3JldCI6ICJzZWNyZXQiLAogICAgImRvY3VtZW50cyI6IFsKICAgICAgewogICAgICAgICJ0eXBlIjogIlBBU1NQT1JUIiwKICAgICAgICAibnVtYmVyIjogIjEyMDUxOCIsCiAgICAgICAgImlzc3VlZF9ieSI6ICLQoNC+0LrQuNGC0L3Rj9C90YHRjNC60LjQvCDQoNCSINCT0KMg0JzQktChINCa0LjRl9Cy0YHRjNC60L7RlyDQvtCx0LvQsNGB0YLRliIsCiAgICAgICAgImlzc3VlZF9hdCI6ICIyMDE3LTAyLTI4IgogICAgICB9CiAgICBdLAogICAgImFkZHJlc3NlcyI6IFsKICAgICAgewogICAgICAgICJ0eXBlIjogIlJFU0lERU5DRSIsCiAgICAgICAgImNvdW50cnkiOiAiVUEiLAogICAgICAgICJhcmVhIjogItCW0LjRgtC+0LzQuNGA0YHRjNC60LAiLAogICAgICAgICJyZWdpb24iOiAi0JHQtdGA0LTQuNGH0ZbQstGB0YzQutC40LkiLAogICAgICAgICJzZXR0bGVtZW50IjogItCa0LjRl9CyIiwKICAgICAgICAic2V0dGxlbWVudF90eXBlIjogIkNJVFkiLAogICAgICAgICJzZXR0bGVtZW50X2lkIjogIjQzNDMyNDMyIiwKICAgICAgICAic3RyZWV0X3R5cGUiOiAiU1RSRUVUIiwKICAgICAgICAic3RyZWV0IjogItCy0YPQuy4g0J3RltC20LjQvdGB0YzQutCwIiwKICAgICAgICAiYnVpbGRpbmciOiAiMTUiLAogICAgICAgICJhcGFydG1lbnQiOiAiMjMiLAogICAgICAgICJ6aXAiOiAiMDIwOTAiCiAgICAgIH0KICAgIF0sCiAgICAicGhvbmVzIjogWwogICAgICB7CiAgICAgICAgInR5cGUiOiAiTU9CSUxFIiwKICAgICAgICAibnVtYmVyIjogIiszODA1MDM0MTA4NzAiCiAgICAgIH0KICAgIF0sCiAgICAiYXV0aGVudGljYXRpb25fbWV0aG9kcyI6IFsKICAgICAgewogICAgICAgICJ0eXBlIjogIk9UUCIsCiAgICAgICAgInBob25lX251bWJlciI6ICIrMzgwNTA4ODg3NzAwIgogICAgICB9CiAgICBdLAogICAgInByZWZlcnJlZF93YXlfY29tbXVuaWNhdGlvbiI6ICJlbWFpbCIsCiAgICAiZW1lcmdlbmN5X2NvbnRhY3QiOiB7CiAgICAgICJmaXJzdF9uYW1lIjogItCf0LXRgtGA0L4iLAogICAgICAibGFzdF9uYW1lIjogItCG0LLQsNC90L7QsiIsCiAgICAgICJzZWNvbmRfbmFtZSI6ICLQnNC40LrQvtC70LDQudC+0LLQuNGHIiwKICAgICAgInBob25lcyI6IFsKICAgICAgICB7CiAgICAgICAgICAidHlwZSI6ICJNT0JJTEUiLAogICAgICAgICAgIm51bWJlciI6ICIrMzgwNTAzNDEwODcwIgogICAgICAgIH0KICAgICAgXQogICAgfSwKICAgICJwcm9jZXNzX2Rpc2Nsb3N1cmVfZGF0YV9jb25zZW50IjogdHJ1ZQogIH0KfQqgggW5MIIFtTCCBV2gAwIBAgIUDYTtobuTgegEAAAAXrQiAL+zdAAwDQYLKoYkAgEBAQEDAQEwggFCMXwwegYDVQQKDHPQn9Cj0JHQm9CG0KfQndCVINCQ0JrQptCG0J7QndCV0KDQndCVINCi0J7QktCQ0KDQmNCh0KLQktCeINCa0J7QnNCV0KDQptCG0JnQndCY0Jkg0JHQkNCd0JogwqvQn9Cg0JjQktCQ0KLQkdCQ0J3QmsK7MREwDwYDVQQLDAjQkNCm0KHQmjE2MDQGA1UEAwwt0JDQptCh0Jog0J/QkNCiINCa0JEgwqvQn9Cg0JjQktCQ0KLQkdCQ0J3QmsK7MRYwFAYDVQQFDA1VQS0xNDM2MDU3MC0xMQswCQYDVQQGEwJVQTEnMCUGA1UEBwwe0JTQvdGW0L/RgNC+0L/QtdGC0YDQvtCy0YHRjNC6MSkwJwYDVQQIDCDQlNC90ZbQv9GA0L7Qv9C10YLRgNC+0LLRgdGM0LrQsDAeFw0xODAxMjMxNDUzMzRaFw0xOTAxMjMyMTU5NTlaMIIBEzEiMCAGA1UECgwZ0KTQhtCX0JjQp9Cd0JAg0J7QodCe0JHQkDE5MDcGA1UEAwww0J/QmNCg0J7Qk9Ce0JIg0ITQktCT0JXQnSDQktCQ0JvQldCg0IbQmdCe0JLQmNCnMRcwFQYDVQQEDA7Qn9CY0KDQntCT0J7QkjEqMCgGA1UEKgwh0ITQktCT0JXQnSDQktCQ0JvQldCg0IbQmdCe0JLQmNCnMRAwDgYDVQQFDAcyMjc0Mzk4MQswCQYDVQQGEwJVQTEnMCUGA1UEBwwe0JwuINCa0KDQntCf0JjQktCd0JjQptCs0JrQmNCZMSUwIwYDVQQIDBzQmtCG0KDQntCS0J7Qk9Cg0JDQlNCh0KzQmtCQMEYwHgYLKoYkAgEBAQEDAQEwDwYNKoYkAgEBAQEDAQECBgMkAAQhjRmoLlqV3cgZNe9gmcZLlspx7ehgFCJhmSPWRSaeqDABo4ICajCCAmYwKQYDVR0OBCIEIM7Y1MGL3FCwFqfxcjkFATaRcfR7MlofZYImNtZy82BJMCsGA1UdIwQkMCKAII2E7aG7k4HowxGQqKyShT/E2MeExkoBuDcRV9hdGFVXMC8GA1UdEAQoMCagERgPMjAxODAxMjMxNDUzMzRaoREYDzIwMTkwMTIzMjE1OTU5WjAOBgNVHQ8BAf8EBAMCBsAwGQYDVR0gAQH/BA8wDTALBgkqhiQCAQEBAgIwDAYDVR0TAQH/BAIwADAeBggrBgEFBQcBAwEB/wQPMA0wCwYJKoYkAgEBAQIBMDgGA1UdHwQxMC8wLaAroCmGJ2h0dHA6Ly9hY3NrLnByaXZhdGJhbmsudWEvY3JsL1BCLVM5LmNybDBDBgNVHS4EPDA6MDigNqA0hjJodHRwOi8vYWNzay5wcml2YXRiYW5rLnVhL2NybGRlbHRhL1BCLURlbHRhLVM5LmNybDCBlAYIKwYBBQUHAQEEgYcwgYQwNAYIKwYBBQUHMAGGKGh0dHA6Ly9hY3NrLnByaXZhdGJhbmsudWEvc2VydmljZXMvb2NzcC8wTAYIKwYBBQUHMAKGQGh0dHA6Ly9hY3NrLnByaXZhdGJhbmsudWEvZG93bmxvYWQvY2VydGlmaWNhdGVzL2NlcnRpZmljYXRlcy5wN2IwQwYIKwYBBQUHAQsENzA1MDMGCCsGAQUFBzADhidodHRwOi8vYWNzay5wcml2YXRiYW5rLnVhL3NlcnZpY2VzL3RzcC8wJwYDVR0JBCAwHjAcBgwqhiQCAQEBCwEEAQExDBMKMzIyODUxMjU5NzANBgsqhiQCAQEBAQMBAQNDAARA1d1/0YSD9Ey1HLl3NXCCr9NWdZjj5zYaHQTNbFSssSY4vx45IGKbePPhHsNOX1sLhbPS8ra7sUSdehO5i+xtTzGCB/cwggfzAgEBMIIBXDCCAUIxfDB6BgNVBAoMc9Cf0KPQkdCb0IbQp9Cd0JUg0JDQmtCm0IbQntCd0JXQoNCd0JUg0KLQntCS0JDQoNCY0KHQotCS0J4g0JrQntCc0JXQoNCm0IbQmdCd0JjQmSDQkdCQ0J3QmiDCq9Cf0KDQmNCS0JDQotCR0JDQndCawrsxETAPBgNVBAsMCNCQ0KbQodCaMTYwNAYDVQQDDC3QkNCm0KHQmiDQn9CQ0KIg0JrQkSDCq9Cf0KDQmNCS0JDQotCR0JDQndCawrsxFjAUBgNVBAUMDVVBLTE0MzYwNTcwLTExCzAJBgNVBAYTAlVBMScwJQYDVQQHDB7QlNC90ZbQv9GA0L7Qv9C10YLRgNC+0LLRgdGM0LoxKTAnBgNVBAgMINCU0L3RltC/0YDQvtC/0LXRgtGA0L7QstGB0YzQutCwAhQNhO2hu5OB6AQAAABetCIAv7N0ADAMBgoqhiQCAQEBAQIBoIIGLTAYBgkqhkiG9w0BCQMxCwYJKoZIhvcNAQcBMBwGCSqGSIb3DQEJBTEPFw0xODAzMDYxNTA0NDVaMC8GCSqGSIb3DQEJBDEiBCDbHFDhBEQW1QRz8HjgTlCCbFY0v+HqsFVhNFUu5u2T4TCCAbUGCyqGSIb3DQEJEAIvMYIBpDCCAaAwggGcMIIBmDAMBgoqhiQCAQEBAQIBBCAO8oJo2fLbnwbziqmVvvs+Fu0ybvTJsmBixu4EP0TAjjCCAWQwggFKpIIBRjCCAUIxfDB6BgNVBAoMc9Cf0KPQkdCb0IbQp9Cd0JUg0JDQmtCm0IbQntCd0JXQoNCd0JUg0KLQntCS0JDQoNCY0KHQotCS0J4g0JrQntCc0JXQoNCm0IbQmdCd0JjQmSDQkdCQ0J3QmiDCq9Cf0KDQmNCS0JDQotCR0JDQndCawrsxETAPBgNVBAsMCNCQ0KbQodCaMTYwNAYDVQQDDC3QkNCm0KHQmiDQn9CQ0KIg0JrQkSDCq9Cf0KDQmNCS0JDQotCR0JDQndCawrsxFjAUBgNVBAUMDVVBLTE0MzYwNTcwLTExCzAJBgNVBAYTAlVBMScwJQYDVQQHDB7QlNC90ZbQv9GA0L7Qv9C10YLRgNC+0LLRgdGM0LoxKTAnBgNVBAgMINCU0L3RltC/0YDQvtC/0LXRgtGA0L7QstGB0YzQutCwAhQNhO2hu5OB6AQAAABetCIAv7N0ADCCBAcGCyqGSIb3DQEJEAIUMYID9jCCA/IGCSqGSIb3DQEHAqCCA+MwggPfAgEDMQ4wDAYKKoYkAgEBAQECATBrBgsqhkiG9w0BCRABBKBcBFowWAIBAQYKKoYkAgEBAQIDATAwMAwGCiqGJAIBAQEBAgEEINscUOEERBbVBHPweOBOUIJsVjS/4eqwVWE0VS7m7ZPhAgQMlPn1GA8yMDE4MDMwNjE1MDU1NloxggNbMIIDVwIBATCCARMwgfoxPzA9BgNVBAoMNtCc0ZbQvdGW0YHRgtC10YDRgdGC0LLQviDRjtGB0YLQuNGG0ZbRlyDQo9C60YDQsNGX0L3QuDExMC8GA1UECwwo0JDQtNC80ZbQvdGW0YHRgtGA0LDRgtC+0YAg0IbQotChINCm0JfQnjFJMEcGA1UEAwxA0KbQtdC90YLRgNCw0LvRjNC90LjQuSDQt9Cw0YHQstGW0LTRh9GD0LLQsNC70YzQvdC40Lkg0L7RgNCz0LDQvTEZMBcGA1UEBQwQVUEtMDAwMTU2MjItMjAxMjELMAkGA1UEBhMCVUExETAPBgNVBAcMCNCa0LjRl9CyAhQwBHUd7yx4rgIAAAABAAAASgAAADAMBgoqhiQCAQEBAQIBoIIB2jAaBgkqhkiG9w0BCQMxDQYLKoZIhvcNAQkQAQQwHAYJKoZIhvcNAQkFMQ8XDTE4MDMwNjE1MDU1NlowLwYJKoZIhvcNAQkEMSIEIADeo7Z5IE5isRNQ+3NN/zTYUZbjIWCxJdPw63H4cEM3MIIBawYLKoZIhvcNAQkQAi8xggFaMIIBVjCCAVIwggFOMAwGCiqGJAIBAQEBAgEEINkNprZIU8Mtv5e49uVczWrFeVID4phEuuPJ1lYbZ7zqMIIBGjCCAQCkgf0wgfoxPzA9BgNVBAoMNtCc0ZbQvdGW0YHRgtC10YDRgdGC0LLQviDRjtGB0YLQuNGG0ZbRlyDQo9C60YDQsNGX0L3QuDExMC8GA1UECwwo0JDQtNC80ZbQvdGW0YHRgtGA0LDRgtC+0YAg0IbQotChINCm0JfQnjFJMEcGA1UEAwxA0KbQtdC90YLRgNCw0LvRjNC90LjQuSDQt9Cw0YHQstGW0LTRh9GD0LLQsNC70YzQvdC40Lkg0L7RgNCz0LDQvTEZMBcGA1UEBQwQVUEtMDAwMTU2MjItMjAxMjELMAkGA1UEBhMCVUExETAPBgNVBAcMCNCa0LjRl9CyAhQwBHUd7yx4rgIAAAABAAAASgAAADANBgsqhiQCAQEBAQMBAQRAHzpSvoXA50haDgvvHvYN/umJ1WUaZgVtKsTJ2AfICAaQlVPrO+v1nIeX6/KpgtOAu2SN4AWe6dzCfB/09aedYDANBgsqhiQCAQEBAQMBAQRAA4cSEkGh+nTfIz27J2BxCNTO+Jm44SVy+plack1vXjlgGCqYNFu6NVMglvkClreOes6+yEojxb/xaOkX6AgfQQ==
` (string, required)

+ Response 201 (application/json)
    + Attributes (`Response_OK`)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (`Person_Full`)

### Get Person Declaration [GET /api/persons/{id}/declaration]

This method allows to receive active person declarations issued by current legal entity (based on access_token). It can be used to check if Patient has active declarations in other Legal Entities.

It returns:
1. Short declaration info if **active declaration found** AND issued by legal entity that is available for `access_token` scope.
2. 404 error if **active declaration not found**.
3. 403 if **active declaration found** issued by **other** (not available by access scopes) legal entity.

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Declaration_Details`])

+ Response 403 (application/json)
    + Attributes (`Response_Error`)
        + meta (Response__Meta, fixed-type)
            + code: 403 (number)
        + error (Response__Error, fixed-type)
            + type: `forbidden`
            + message: `Active declaration belongs to another msp` (string)

### Get Person Authentication methods [GET /api/persons/{id}/authentication_methods]

This method allows to find the active person's authentication methods.


+ Parameters
    + id: `030d5c41-a945-41ac-89d1-b7c6d1c226c7` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            api-key: uXhEczJ56adsfh3Ri9SUkc4en

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (array[`Person_auth_methods`, `Person_auth_methods_v2`])
        

+ Response 403 (application/json)
    + Attributes (`Response_Error`)
        + meta (Response__Meta, fixed-type)
            + code: 403 (number)
        + error (Response__Error, fixed-type)
            + type: `forbidden`
            + message: `Such person not found` (string)

### Create authentication method request [POST /api/persons/{id}/authentication_method_requests]

This process describes adding an additional authentication method to an existing person, update authentication method and delete it.

Confluence - https://e-health-ua.atlassian.net/wiki/x/FwC_J

**Scopes required:** `authentication_method_request:write`

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Person identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            api-key: uXhEczJ56adsfh3Ri9SUkc4en

    + Attributes (object)
        - One of
            + `action`: DEACTIVATE (string, required)
            + `action`: INSERT (string, required)
            + `action`: UPDATE (string, required)
        - One of
            + `authentication_method`(object, required)
                + id: `7b100a9c-daaa-490e-b88d-2a911059b055` (string, required)
            + `authentication_method`(object, required)
                + type(enum, required)
                    - THIRD_PERSON
                    - OTP
                    - OFFLINE
                + phone_number: `+380976549872` (string, optional)
                + value: `7b100a9c-daaa-490e-b88d-2a911059b0d2` (string, optional) - identifier of active person. It's required when type= THIRd_PERSON 
                + alias: `husband` (string, optional) - it's required id type = THIRD_PERSON
            + `authentication_method`(object, required)
                + id: `7b100a9c-daaa-490e-b88d-2a911059b055` (string, required)
                + alias: `wife` (string, optional)
    

+ Response 201 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + status: `NEW` (string, required)
            + channel: `MIS` (enum, required) - channel that invoke add auth methods
        + urgent (object, required)
            + `authentication_method_current` (array[`Authentication_Method_for_request`], required) - if the person doesn't have active auth methods, then this block will be nill
            + documents (array[`media_content`], optional)

+ Response 422 (application/json)
    + Attributes (`Response_Error`)
        + meta (Response__Meta)
            + code: 422
        + error
            + type: unverified (string, required)
            + message: `Unverified phone number` (string, required)


### Approve authentication method request [PATCH /api/persons/{id}/authentication_method_requests/{request_id}/actions/approve]

Use this method to approve previously created Authentication method Request.
In case if person's or third person's authent authentication_method is OTP, request example:

{
  "verification_code": 7590
}

In case if authentication_method is OFFLINE, request body should be empty. Before approve patient's scanned documents should be uploaded to the (Signed URL's). All links are generated for one one-page document in jpeg format. Document should be no more than 10MB. 

Confluence - https://e-health-ua.atlassian.net/wiki/x/G4DJJ

**Scopes required:** `authentication_method_request:write`

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Person identifier
    + request_id: `1096f147-7f93-3fc6-bddc-9d71b198fb7f` (string, required) - Request identifier
    

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            api-key: uXhEczJ56adsfh3Ri9SUkc4en

    + Attributes (object)
        + `verification_code`: 7489 (number, optional) - required if authentication_method is OTP

+ Response 201 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + status: `COMPLETED` (enum, optional) - current status on auth methods request.
            + channel: `MIS` (enum, required) - channel that invoke add auth methods


+ Response 422 (application/json)
    + Attributes (`Response_Error`)
        + meta (Response__Meta)
            + code: 422
        + error
            + type: request_malformed (string, required)
            + message: `This doctor has X declarations and could not sign more` (string, required)

### Resend Authorization OTP on Authentication method Request [POST /api/persons/{id}/authentication_method_requests/{request_id}/actions/resend_otp]

This method is used when you need to re-send SMS to a person or third person

**Scopes required:** `authentication_method_request:write`

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Person identifier
    + request_id: `1096f147-7f93-3fc6-bddc-9d71b198fb7f` (string, required) - Request identifier
    

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            api-key: uXhEczJ56adsfh3Ri9SUkc4en


+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + data (`OTP`)
        

### Get Confidant Person relationships [GET /api/persons/{id}/confidant_person_relationships]

This method allows to view list of active confidant person relationships.

**Scopes required:** `confidant_person_relationship:read`

+ Parameters
    + id: `030d5c41-a945-41ac-89d1-b7c6d1c226c7` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            api-key: uXhEczJ56adsfh3Ri9SUkc4en

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (array[`Confidant_Person_Masked`])
        

+ Response 403 (application/json)
    + Attributes (`Response_Error`)
        + meta (Response__Meta, fixed-type)
            + code: 403 (number)
        + error (Response__Error, fixed-type)
            + type: `forbidden`
            + message: `Such person not found` (string)

### Create new Confidant Person relationship request [POST /api/persons/{id}/confidant_person_relationship_requests]

This method allows add Confidant Person relationship.

**Scopes required:** `confidant_person_relationship_request:write`

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Person identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            api-key: uXhEczJ56adsfh3Ri9SUkc4en

    + Attributes (object)
        + include (`Create_Confidant_Person_request`)
    

+ Response 201 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + status: `NEW` (enum, optional) - current verification status on relationship request.
            + action: `INSERT` (enum, optional) - action that initiates by request creation.
            + channel: `MIS` (enum, required) - channel that invokes the adding or updating of relationship request.
        + urgent (object, required)
            + `authentication_method_current` (array[`Authentication_Method_for_request`], required) - if the person doesn't have active auth methods, then this block will be nill
            + documents (array[`media_content`], required)

+ Response 422 (application/json)
    + Attributes (`Response_Error`)
        + meta (Response__Meta)
            + code: 422
        + error
            + type: unverified (string, required)
            + message: `Unverified phone number` (string, required)

### Deactivate Confidant Person relationship request [POST /api/persons/{id}/confidant_person_relationship_requests/deactivate]

This method allows to deactivate Confidant Person relationship.

**Scopes required:** `confidant_person_relationship_request:write`

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Person identifier
    

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            api-key: uXhEczJ56adsfh3Ri9SUkc4en

    + Attributes (object)
        + include (`Deactivate_Confidant_Person_request`)

+ Response 201 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + status: `NEW` (enum, optional) - current verification status on relationship request.
            + action: `DEACTIVATE` (enum, optional) - action that initiates by request creation.
            + channel: `MIS` (enum, required) - channel that invokes the adding or updating of relationship request.


+ Response 422 (application/json)
    + Attributes (`Response_Error`)
        + meta (Response__Meta)
            + code: 422
        + error
            + type: request_malformed (string, required)
            + message: `This patient has X confidants and can not have more` (string, required)

### Approve Confidant Person relationship request [PATCH /api/persons/{id}/confidant_person_relationship_requests/{confidant_person_relationship_request_id}/actions/approve]

Use this method to approve previously created Confidant Person relationship request (creation or deactivation).

**Scopes required:** `confidant_person_relationship_request:write`

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Person identifier
    + confidant_person_relationship_request_id: `1096f147-7f93-3fc6-bddc-9d71b198fb7f` (string, required) - Confidant Person relationship request identifier
    

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            api-key: uXhEczJ56adsfh3Ri9SUkc4en

    + Attributes (object)
        + `verification_code`: 7489 (number, required)

+ Response 201 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + status: `COMPLETED` (enum, optional) - current verification status on relationship request.
            + action: `INSERT` (enum, optional) - action that initiates by request creation.
            + channel: `MIS` (enum, required) - channel that invokes the adding or updating of relationship request.


+ Response 422 (application/json)
    + Attributes (`Response_Error`)
        + meta (Response__Meta)
            + code: 422
        + error
            + type: request_malformed (string, required)
            + message: `This patient has X confidants and can not have more` (string, required)

### Resend Authorization OTP on Confidant Person relationship [POST /api/persons/{id}/confidant_person_relationship_requests/{confidant_person_relationship_request_id}/actions/resend_otp ]

This method is used when you need to re-send SMS to Confidant

**Scopes required:** `confidant_person_relationship_request:write`

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Person identifier
    + confidant_person_relationship_request_id: `1096f147-7f93-3fc6-bddc-9d71b198fb7f` (string, required) - Confidant Person relationship request identifier
    

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            api-key: uXhEczJ56adsfh3Ri9SUkc4en


+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + data (`OTP`)


### Get Person verification details [GET /api/persons/{id}/verification]
This method returns current person's verification status and another information about it.

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Person identifier
    
    
+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            api-key: uXhEczJ56adsfh3Ri9SUkc4en
    
    
+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
         + data (object)
            + include `Person_Verification_Details`
            

### Update Person verification status [PATCH /api/persons/{id}/verification]
Use this method to update person's verification status. Now updating of DRACS death verification status is allowed.

**Scopes required:** `person_verification:write`

+ Parameters
    + `id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - Person identifier
    
+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

    + Attributes (object)
       + `dracs_death` (object)
           + `verification_status`: `VERIFICATION_NEEEDED` (string, required) - Person DRACS death verification status according to `PERSON_VERIFICATION_STATUSES` dictionary. `VERIFICATION_NEEEDED` only is allowed.
           + `verification_reason`: `MANUAL_COMFIRMED` (string, required) - Verification reason according to `PERSON_VERIFICATION_STATUS_REASONS` dictionary. `MANUAL_CONFIRMED` OR `MANUAL_NOT_CONFIRMED` are allowed.
           + `verification_comment`: `Смерть пацієнта підтверджено` (string, required) - Verification comment

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + meta (Response__Meta)
        + data (object)
            + include `Person_Verification_Details`


### Get Person Emergency contact [GET  /api/patients/{patient_id}/{medical_event_type}/{medical_event_id}/emergency_contact]

This method returns person's emergency contact.

**Scopes required:** `person_emergency_contact:read`

+ Parameters
    + patient_id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Patient identifier
    + medical_event_type: `conditions` (enum, required) - Medical event type
        - conditions
        - diagnostic_reports
    + medical_event_id: `164f9ce8-4455-4759-b0c2-726db7218224` (string, required) - Medical event identifier
    
    
+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            api-key: uXhEczJ56adsfh3Ri9SUkc4en
    
    
+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + data (object)
            + first_name: Петро (string, required)
            + phones (array[`Phone`], required)


## Legal Entities [/api/legal_entities]

### Get Legal Entities V2 [GET /api/v2/legal_entities{?edrpou,legal_entity_id,settlement_id,type,status,nhs_verified,page,page_size}]

Use this method to get list of legal entities filtering by parameters.
List consists of legal entities with parameter `is_active = true`.

+ Parameters
    + `edrpou`: `341086` (string, optional)
    + `legal_entity_id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, optional)
    + settlement_id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, optional)
    + type: MSP (enum, optional)
        - MSP
        + Default: MSP
    + status: ACTIVE (enum, optional)
        - ACTIVE
        - CLOSED
    + `nhs_verified`: false (boolean, optional)
    + page: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 300. Default: 50

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array)
            + (object)
                + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
                + include (`Legal_Entity_Response_Public_V2`)
                + status: ACTIVE (enum, required)
                    - ACTIVE
                    - CLOSED
                    - SUSPENDED
        

### Get Legal Entity by ID V2 [GET /api/v2/legal_entities/{id}]

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + data (object)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + include (`Legal_Entity_Response_Public_V2`)
            + status: ACTIVE (enum, required)
                - ACTIVE
                - CLOSED
                - SUSPENDED
            + `nhs_verified`: false (boolean, required)
            + `nhs_reviewed`: false (boolean, required) - flag that shows whether legal entity was reviewed by nhs
            + nhs_comment: `comment` (string, optional) - nhs's comment
        + urgent (object, optional)
            + security (object)
                + `secret_key`: `secret_key` (string, required)
                + `client_id`: `client_id` (string, required)
                + `redirect_uri`: `redirect_uri` (string, required, fixed) - Redirect uri

### Create/Update Legal Entity V2 [PUT /api/v2/legal_entities]

Key features and main differences from V1:

* *legal entity types and licenses are created/updated one by one, i.e. one legal entity type and one license are accepted in one call*

* *medical_services_providers structure is removed, accreditation and license parameters are moved to the root*

* *added EDR integration in order to validate and enrich legal entity data*

* *it can be also used to update owner data. In this case `employee_id` should be passed in the payload in the owner block*

User may accept or decline Invitation.

For changes to take effect employee must confirm the changes.

There is a [**dummy method Create/Update legal entity V2**](https://uaehealthapi.docs.apiary.io/#reference/dummy-methods/dummy-for-legal-entity/create/update-legal-entity-v2) that describes the latest legal entity data model and can be used as documentation.

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

    + Attributes (object)
        + `signed_legal_entity_request`: `...` (string, required)
        + `signed_content_encoding`: base64 (string, required)

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + data (object)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + include (`Legal_Entity_Response_Public_V2`)
            + status: ACTIVE (enum, required)
                - ACTIVE
                - CLOSED
                - SUSPENDED
            + `nhs_verified`: false (boolean, required)
            + `nhs_reviewed`: false (boolean, required) - flag that shows whether legal entity was reviewed by nhs
            + nhs_comment: `comment` (string, optional) - nhs's comment
        + urgent (object, optional)
            + security (object)
                + `secret_key`: `secret_key` (string, required)
                + `client_id`: `client_id` (string, required)
                + `redirect_uri`: `redirect_uri` (string, required, fixed) - Redirect uri
            + employee_request_id: `d098aee7-5ab3-4a24-a6ba-811f9cf94c6d` - Employee request identifier

+ Response 201 (application/json)
    + Attributes (`Response__Process_OK`)
        + data (object)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + include `Legal_Entity_Response_Public`
            + status: ACTIVE (enum, required)
                - ACTIVE
                - CLOSED
                - SUSPENDED
            + `nhs_verified`: false (boolean, required)
            + `nhs_reviewed`: false (boolean, required) - flag that shows whether legal entity was reviewed by nhs
            + nhs_comment: `comment` (string, optional) - nhs's comment
            + is_active: true (boolean, required)
            + inserted_by: `A65C8369-CE3A-44D6-839B-8856E3DC4CA3` (string, required)
            + inserted_at: `2005-10-30 10:45` (string, required) - timestamp
            + created_by_mis_client_id:  `A65C8369-CE3A-44D6-839B-8856E3DC4CA3` (string, required)
            + updated_at: `1991-08-19T00:00:00.000Z` (string, required)
            + updated_by: `userid` (string, required)
        + urgent (object, optional)
            + security (object)
                + `secret_key`: `secret_key` (string, required)
                + `client_id`: `client_id` (string, required)
                + `redirect_uri`: `redirect_uri` (string, required, fixed) - Redirect uri
            + employee_request_id: `d098aee7-5ab3-4a24-a6ba-811f9cf94c6d` - Employee request identifier

### Verify Legal Entity by NHS [PATCH /api/legal_entities/{id}/actions/nhs_verify]

Use this method to verify legal entity by NHS.
Available transition:
`nhs_verified` false --> true

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9


+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + data (object)
            + include `Legal_Entity_Request_Public_Short`



### Deactivate Legal Entity [PATCH /api/legal_entities/{id}/actions/deactivate]

Use this method to deactivate msp.
1. Deactivate emploees by legal entity

2. Deactivate legal entity
Update status on CLOSED

+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (object)
            + include `Legal_Entity_Request_Public_Short`


### Get legators Legal Entities [GET /api/legal_entities/{id}/related{?page,page_size}]

Use this method to get the list of child legal entities which are related to current legal entity.


+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
    + `page`: 2 (number) - Page number.
    + `page_size`: 50 (number) - A limit on the number of objects to be returned, between 1 and 300. Default: 50

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (array[`Legal_Entity_Related`])

## Divisions [/api/divisions]

### Get divisions [GET /api/divisions{?ids,name,legal_entity_id,type,status,page,page_size}]

+ Parameters
    + ids: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional)
    + name: `Бориспільське відділення клініки` (string, optional)
    + legal_entity_id: `d8b5f374-0f3c-46e6-baf1-21d97b4c9ff5` (string, optional)
    + type: CLINIC (string, optional) - Dictionary DIVISION_TYPE
    + status: ACTIVE (string, optional)
        - ACTIVE
        - INACTIVE
    + `page`: 2 (number) - Page number.
    + `page_size`: 50 (number) - A limit on the number of objects to be returned, between 1 and 300. Default: 50
+ Request (application/json)
    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (`crud_division_get`)

### Update division [PATCH /api/divisions/{id}]

This method must be used to update existing division in the system

Note that different legal entity types can register specific division types and address types accordingly
More details can be found [here](https://e-health-ua.atlassian.net/wiki/x/GQB7Iw)

+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)

+ Request (application/json)
    + Attributes (`crud_division_post`)
    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`crud_division_get`)

### Create division [POST]

This method must be used to create new division in the system

Note that different legal entity types can register specific division types and address types accordingly
More details can be found [here](https://e-health-ua.atlassian.net/wiki/x/GQB7Iw)

+ Request (application/json)
    + Attributes (`crud_division_post`)
    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`crud_division_get`)

### Deactivate division [PATCH /api/divisions/{id}/actions/deactivate]
+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
    
+ Request (application/json)
    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`crud_division_get`)

### Activate division [PATCH /api/divisions/{id}/actions/activate]
+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
    
    
+ Request (application/json)
    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`crud_division_get`)

## UAdresses [/api/uaddresses]

API for searching Ukrainian Addresses

## Search Streets [/api/uaddresses/streets]

### List of Streets by Search Params [GET /api/uaddresses/streets{?settlement_id,name,type,page,page_size}]

+ Parameters
    + settlement_id: `eea333b5-e26d-4e3e-92e2-2ab37b131502` (string, required) - Settlement identifier
    + name: `Незалежності` (string, optional) - Street name
    + type: STREET (string, optional) - Street type (Dictionary STREET_TYPE)
    + `page`: 2 (number) - Page number.
    + `page_size`: 50 (number) - A limit on the number of objects to be returned, between 1 and 300. Default: 50


+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (array[`Response_Street`])

## Search Settlements [/api/uaddresses/settlements]

### List Of Cities By Search Params [GET /api/uaddresses/settlements{?name,region,district,koatuu,page,page_size}]

Use this method to obtain list of cities. If you want to reduce amount of data that is going trough your application, use `name`, `region`, `district` or `koatuu classifier` filters and show only cities you are interested in.

+ Parameters
    + name: Новосілки (string, optional) - Name of searching settlement
    + region: Київ (string, optional) - Province name
    + district: `Києво-Святошинський` (string, optional) - Administrative district of province
    + koatuu: `2625286301` (string, optional) - koatuu classifier id
    + `page`: 2 (number) - Page number.
    + `page_size`: 50 (number) - A limit on the number of objects to be returned, between 1 and 300. Default: 50


+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (array[`Response_Settlement`])

### Get settlement details by ID [GET /api/uaddresses/settlements/{id}]

Use this method to obtain city details.

+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - settlement_id


+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (`Response_Settlement`)

## Search Regions [/api/uaddresses/regions]

### List Of Regions By Search Params [GET /api/uaddresses/regions{?name,koatuu,page,page_size}]
+ Parameters
    + name: Київ (string, optional) - Province name
    + koatuu: `2625286301` (string, optional) - koatuu classifier id
    + `page`: 2 (number) - Page number.
    + `page_size`: 50 (number) - A limit on the number of objects to be returned, between 1 and 300. Default: 50

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (array[`Response_Region`])

## Search Districts [/api/uaddresses/districts]

### List Of Districts By Search Params [GET /api/uaddresses/districts{?region_id,region,name,koatuu,page,page_size}]
+ Parameters
    + region_id: `09a33c98-9a5c-447a-8493-da8fcecb6873` (string, optional) - Province id
    + region: Київ (string, optional) - Province name
    + name: `Києво-Святошинський` (string, optional) - Administrative district of province
    + koatuu: `2625286301` (string, optional) - koatuu classifier id
    + `page`: 2 (number) - Page number.
    + `page_size`: 50 (number) - A limit on the number of objects to be returned, between 1 and 300. Default: 50

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (array[`Response_District`])

### Districts by Region [GET /api/uaddresses/regions/290f1ee-6c54-4b01-90e6-d701748f0851/districts{?name,koatuu,page,page_size}]

+ Parameters
    + name: `Києво-Святошинський` (string, optional) - Filter by district name
    + koatuu: `2625286301` (string, optional) - koatuu classifier id
    + `page`: 2 (number) - Page number.
    + `page_size`: 50 (number) - A limit on the number of objects to be returned, between 1 and 300. Default: 50

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (array[`Response_District_Short`])

### Settlements by district [GET /api/uaddresses/districts/290f1ee-6c54-4b01-90e6-d701748f0851/settlements{?name,koatuu,page,page_size}]

Get list of cities by district

+ Parameters
    + name: `Київ` (string, optional) - Filter by settlement name
    + koatuu: `2625286301` (string, optional) - koatuu classifier id
    + `page`: 2 (number) - Page number.
    + `page_size`: 50 (number) - A limit on the number of objects to be returned, between 1 and 300. Default: 50

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (array[`Response_Settlement_Short`])

## Roles [/admin/roles]

Roles are used to simplify Users access management.
Role scopes limits list of scopes that User can have.
By changing Role scopes this change will immidiately propagate to all users within role.

Roles are set separately for each Client.

### List Roles [GET /admin/roles{?name,page,page_size}]

+ Parameters
    + name: `My role` (string, optional) - Return only roles that contains `name` substring.
    + `page`: 2 (number) - Page number.
    + `page_size`: 50 (number) - A limit on the number of objects to be returned, between 1 and 300. Default: 50

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Role_Response`])

### Get Role by ID [GET /admin/roles/{id}]

+ Parameters
    + id: `role-1380df72-275a-11e7-93ae-92361f002671` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Role_Response`)

## Manage client configuration [/api/clients]

### Get clients [GET /api/clients]

This service returns list of clients filtered by context depending on client type:

* Mithril Admin - receives all client records without context
* MSP - receives only its own client
* MIS - receives only its own client

**Scopes required:** `client:read`

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array[`Client`])

### Get client details [GET /api/clients/{id}]

This service returns client details.

Service will return authorization error (403) if the requested client doesn't correspond with context

**Scopes required:** `client:read`

+ Parameters
    + id: `1380df72-275a-11e7-93ae-92361f002671` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Client`)
            + client_type_name: MSP (string, optional)

### Get client connections [GET /api/clients/{id}/connections]

Service returns list of connections for specified client

Service will return authorization error (403) if the requested client doesn't correspond with context

**Scopes required:** `connection:read`

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array[`Connection`])

### Get client connection details [GET /api/clients/{id}/connections/{connection_id}]

**Scopes required:** `connection:read`

+ Parameters
    + id: `1380df72-275a-11e7-93ae-92361f002671` (string, required)
    + connection_id: `e5372365-d47a-467f-81d0-f35117864352` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Connection`)

### Update client connection [PATCH /api/clients/{id}/connections/{connection_id}]

Only redirect uri can be updated using this method

**Scopes required:** `connection:write`

+ Parameters
    + id: `1380df72-275a-11e7-93ae-92361f002671` (string, required)
    + connection_id: `e5372365-d47a-467f-81d0-f35117864352` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

    + Attributes (object)
        + redirect_uri: `https://example3.com` (string, required)

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Connection`)

### Refresh client secret [PATCH /api/clients/{id}/connections/{connection_id}/actions/refresh_secret]

This method is used to refresh client secret for specified client connection
Only legal entity owner can request new client secret for his own legal entity

**Scopes required:** `connection:refresh_secret`

+ Parameters
    + id: `1380df72-275a-11e7-93ae-92361f002671` (string, required)
    + connection_id: `e5372365-d47a-467f-81d0-f35117864352` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (object)
            + include `Connection`
            + secret: `ZlFOaHBTR0d3Q0hQcDEraHVYdXBVZz09` (string, required)

### Delete client connection [DELETE /api/clients/{id}/connections/{connection_id}]

This method is used to **delete** specified client connection.
Deleted connection can't be restored and used again

**Scopes required:** `connection:delete`

+ Parameters
    + id: `1380df72-275a-11e7-93ae-92361f002671` (string, required)
    + connection_id: `e5372365-d47a-467f-81d0-f35117864352` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

+ Response 200 (application/json)
    + Attributes (object)
        + meta (Response__Meta, fixed-type)

## Capitation reports [/api/capitation_reports]

### Get capitation reports [GET /api/capitation_reports{?page,page_size}]

This method returns list of all available already created capitation reports.
Capitation reports are created monthly

**Scopes required:** `capitation_report:read`

+ Parameters
    + `page`: 2 (number) - Page number
    + `page_size`: 50 (number) - A limit on the number of objects to be returned, between 1 and 300. Default: 50

+ Request (application/json)

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (array)
            + (`Capitation_report`)

### Get capitation report details [GET /api/capitation_report_details{?edrpou,report_id}]

This method returns details of specified capitation report.

For each contract report returns dataset according to `person_age`,`mountain_group` and `total` information.

There are following age groups right now:

0 - 5 | 6 - 17 | 18 - 39 | 40 - 65 | 65 +

* For MSP User service will return the report details limited by user's MSP Id (Client Id)
* For NHS User service will return all the details

**Scopes required:** `capitation_report:read`

+ Parameters
    + `edrpou`: `34056008` (string,optional)
    + `report_id`: `role-1380df72-275a-11e7-93ae-92361f002671` (string, optional)

+ Request (application/json)

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (array)
            + (`Capitation_report_detail`)

## Healthcare services [/api/healthcare_services]

### Create healthcare service [POST]

The following attribute added to specification for future use. Do not submit this field in request
* coverage_area

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

    + Attributes (object)
        + division_id: `8be63914-a278-470b-b868-1af5b9087332` (string, required) - Division identifier
        + `speciality_type`: `FAMILY_DOCTOR` (string, optional) - `Dictionary SPECIALITY_TYPE`
        + `providing_condition`: OUTPATIENT (string, optional) - `Dictionary PROVIDING_CONDITION`
        + license_id: `cdcf456b-e235-4850-9f00-27cc3453d346` (string, optional) - License identifier
        + category (Codeable_Concept, required)
            + coding (array, fixed-type)
                + (Coding)
                    + system: `HEALTHCARE_SERVICE_CATEGORIES` (string)
                    + code: `MSP` (string)
        + type (Codeable_Concept, optional)
            + coding (array, fixed-type)
                + (Coding)
                    + system: `HEALTHCARE_SERVICE_PHARMACY_DRUGS_TYPES` (string)
                    + code: `SALE` (string)
        + comment: `Новий сервіс` (string, optional)
        + coverage_area (array, optional) - Not implemented yet. Reserved for future use
            - `2c0110a9-0bea-4b16-af8e-6e2e149a5bfc` (string)
        + `available_time` (array[`Available_time`], optional)
        + `not_available` (array[`Restricted_period`], optional)

+ Response 201 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (`Healthcare_service_response`)

### Update healthcare service [PATCH /api/healthcare_services/{id}]

This method must be used to update existing Healthcare service

There are some mutable attributes in Healthcare service:
* comment
* available_time
* not_available

All other attributes are immutable

+ Parameters
    + `id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - Healthcare service identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

    + Attributes (object)
        + comment: `Заведено помилково` (string, optional)
        + coverage_area (array, optional) - Not implemented yet. Reserved for future use
            - `2c0110a9-0bea-4b16-af8e-6e2e149a5bfc` (string)
        + `available_time` (array[`Available_time`], optional)
        + `not_available` (array[`Restricted_period`], optional)

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)

### Get healthcare services [GET /api/healthcare_services/{?division_id,speciality_type,providing_condition,category,type,status,page,page_size}]

+ Parameters
    + division_id: `8be63914-a278-470b-b868-1af5b9087332` (string, optional) - Division identifier
    + `speciality_type`: `FAMILY_DOCTOR` (string, optional) - `Dictionary SPECIALITY_TYPE`
    + `providing_condition`: OUTPATIENT (string, optional) - `Dictionary PROVIDING_CONDITION`
    + `category`: MSP (string, optional) - `Dictionary HEALTHCARE_SERVICE_CATEGORIES`
    + `type`: SALE (string, optional) - `Dictionary of types for category, example HEALTHCARE_SERVICE_PHARMACY_DRUGS_TYPES`
    + status: ACTIVE (string, optional) - Entity status
    + page: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 300. Default: 50

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array[`Healthcare_service_response`])

### Get healthcare service details by ID [GET /api/healthcare_services/{id}]

+ Parameters
    + `id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - Healthcare service identifier

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + data (`Healthcare_service_response`)

### Deactivate healthcare service [PATCH /api/healthcare_services/{id}/actions/deactivate]

+ Parameters
    + `id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - Healthcare service identifier

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + data (`Healthcare_service_response`)
            - status: INACTIVE

### Activate healthcare service [PATCH /api/healthcare_services/{id}/actions/activate]

+ Parameters
    + `id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - Healthcare service identifier

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + data (`Healthcare_service_response`)
            - status: ACTIVE

## Employee roles [/api/employee_roles]

### Add employee role [POST]

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

    + Attributes (`Employee_role_base`)

+ Response 201 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (`Employee_role_response`)

### Get employee roles [GET /api/employee_roles/{?employee_id,healthcare_service_id,status,page,page_size}]

At least one query parameter must be provided

+ Parameters
    + `employee_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - Employee identifier
    + `healthcare_service_id`: `c4de7c6e-8c6e-4d4f-8843-6bc122977227` (string, optional) - Healthcare service identifier
    + status: active (string, optional) - Search only for active or inactive employee roles.
    + page: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 300. Default: 50

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array[`Employee_role_response`])

### Get employee role by ID [GET /api/employee_roles/{id}]

+ Parameters
    + `id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - Employee role identifier

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + data (`Employee_role_response`)

### Deactivate employee role [PATCH /api/employee_roles/{id}/actions/deactivate]

+ Parameters
    + `id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - Employee role identifier

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + data (`Employee_role_response`)
            - status: INACTIVE

## User details [/oauth/users]


### Get my user details [GET /oauth/user]

Returns my user details based on user in access_token

**Scopes required:** `user:read`

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            api-key: c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + data (`User_details_response`)

        
## Equipment [/api/equipment]

### Create equipment [POST]

This method allows to register equipment and bind it with division of legal entity

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

    + Attributes (object)
        + division_id: `8be63914-a278-470b-b868-1af5b9087332` (string, required) - Division identifier
        + include `Equipment_base`

+ Response 201 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (`Equipment_response`)

### Update equipment [PATCH /api/equipment/{id}]

This method used for update equipment data, except link with division and status. You can send only those fields you want to change

Immutable parameters:
 - division_id
 - status
 
 All the other parameters are mutable.

+ Parameters
    + `id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - Equipment identifier

+ Request (application/json)
 
    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

    + Attributes (`Equipment_base`)
        + type: `23143534` (string, optional)- `code from dictionary -  EQUIPMENT_TYPE`  
        + external_id: `123-ASD-#1` (string, optional) - Identifier from external system
       
+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (`Equipment_response`)

### Get equipment list [GET /api/equipment{?division_id,type,external_id,status,page,page_size}]

+ Parameters

    + division_id: `8be63914-a278-470b-b868-1af5b9087332` (string, optional) - Division identifier
    + type: `43235435` (string, optional) - `Code from dictionary EQUIPMENT_TYPE`
    + external_id: `123-ASD-1` (string, optional) - `Identifier from external system`
    + status: ACTIVE (string, optional) - Entity status
    + page: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 300. Default: 50

+ Request (application/json)

    + Headers
    
            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            API-key: uXhEczJ56adsfh3Ri9SUkc4en
            
+ Response 200 (application/json)

    + Attributes (`Response_Collection_V2`)
        + data (array[`Equipment_response`])

### Get equipment details by ID [GET /api/equipment/{id}]

+ Parameters
    + `id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - Equipment identifier

+ Request (application/json)

    + Headers
    
            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            API-key: uXhEczJ56adsfh3Ri9SUkc4en
            
+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + data (`Equipment_response`)

### Deactivate equipment [PATCH /api/equipment/{id}/actions/deactivate]

+ Parameters
    + `id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - Equipment identifier

+ Request (application/json)

    + Headers
    
            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + data (`Equipment_response`)
            - status: INACTIVE

### Activate equipment [PATCH /api/equipment/{id}/actions/activate]

+ Parameters
    + `id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - Equipment identifier

+ Request (application/json)

    + Headers
    
        Authorization: Bearer c2778f3064753ea70de870a53795f5c9
        API-key: uXhEczJ56adsfh3Ri9SUkc4en

+ Response 200 (application/json)

    + Attributes (`Response__Process_OK`)
        + data (`Equipment_response`)
            - status: ACTIVE
            

## Preperson [/api/prepersons]

### Create preperson [POST]
This method allows to create unidentified person. There is one necessary field in payload - `external_id` which serves as identifier of unidentified person in external system. Preperson has been created without using digital sign.

+ Request (application/json)

    + Headers
    
            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            API-key: uXhEczJ56adsfh3Ri9SUkc4en
    
    + Attributes (object)
        + include `Preperson_base`
        + note: `Registered in SmartMed clinic at 01.01.2019 16:40. Male, 40 years old approximately, tatoo with sport motorcycle on the right forearm` (string, optional) - Notes
        
+ Response 201 (application/json)

    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + include `Preperson_response`
            

### Update preperson [PATCH /api/prepersons/{id}]
Method enables to modify all the preperson fields except note and status.

+ Parameters
    + `id`: `7c3da506-804d-4550-8993-bf17f9ee0402` (string, required) - MPI identifier of the preperson. 

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            API-key: uXhEczJ56adsfh3Ri9SUkc4en
    
    + Attributes (object)
        + include `Preperson_base`
        + gender: MALE (string, optional) - `Dictionary GENDER`
        + external_id: `#1234-FDS-ab` (string, optional) - `Identifier from external system`
        + death_date: `2018-11-11` (string, optional) - Date of death
        + note: `Registered in SmartMed clinic at 01.01.2019 16:40. Male, 40 years old approximately, tatoo with sport motorcycle on the right forearm` (string, optional) - Notes

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (object)
            + include `Preperson_response`
            

### Get preperson by ID [GET /api/prepersons/{id}]
Returns preperson details by it's MPI identifier

+ Parameters
    + id: `7c3da506-804d-4550-8993-bf17f9ee0402` (string, required) - MPI identifier of the preperson. 

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (`Preperson_response`)     
        


## Merge request [/api/merge_requests]

### Create merge request [POST]
Method creates request on merge preperson to person. Employee can merge any **active preperson** to any **active person** which has been created via patient request or declaration request.
If there is needs to change person\`s default authentication method for merge request approval than use `authorize_with` field.

+ Request (application/json)
    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            API-key: uXhEczJ56adsfh3Ri9SUkc4en
    
    + Attributes (object)
        + include `Merge_request_base`
        + authorize_with: `cc949559-5dfe-420f-ac05-065e443b2cc6` (string, optional)- identifier of master person auth method
        
+ Response 201 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (`Merge_request_response`)
        + urgent (object, required)
            + `authentication_method_current` (array[`Authentication_Method`], required) - `Current authentication method of the master person`
            + documents (array[`media_content`], optional) - `Documents of the master person`

### Approve merge request [PATCH /api/merge_requests/{id}/actions/approve]
Serves for receiving approval from person on action of merge with preperson. Also return a printout form of preperson merge request. Payload with verification code doesn\`t needed if person\`s athentification method is OFFLINE

+ Parameters
    + id: `7c3da506-804d-4550-8993-bf17f9ee0404` (string, required) - `Identifier of the merge request`
    
+ Request (application/json)

    + Headers
    
            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            API-key: uXhEczJ56adsfh3Ri9SUkc4en
    
    + Attributes (object)
        + `verification_code`: 6598 (number, optional) - required if authentication_method is OTP


+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (`Merge_request_response`)
            + status: APPROVED (string, required) - `status of the approved merge request`
            + `data_to_be_signed` (`Merge_request_sign_data`, required)


### Reject merge request [PATCH /api/merge_requests/{id}/actions/reject]
This method gives opportunity to reject and close preperson merge request by hand.

+ Parameters
    + id: `7c3da506-804d-4550-8993-bf17f9ee0404` (string, required) - `Identifier of the merge request`
    
+ Request (application/json)

    + Headers
    
            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (`Merge_request_response`)
            + status: REJECTED (string, required) - `status of the rejected merge request`

### Sign merge request [PATCH /api/merge_requests/{id}/actions/sign]
This method is used to sign merge request. Method receives signed message (pkcs7) including signed content, digital signature and signer public key in `signed_content` property.
All signature fields will be validated (including signer certificate authority).

This service will store signed copy of merge request in Media Content Storage, merge person and preperson MPI records if signature is all checks is passed.

Signed content MUST consists of data from `data_to_be_signed` field with merge request data, master person data, merge person data and printout template. Field `data_to_be_signed` that need to be signed is returned by `Approve merge request` method, `JSON.Path: $.data.data_to_be_signed` or by `Get merge request by ID` (for approved merge requests).
Master person must re-read and sign merge request print form and after that `patient_signed` should be changed to TRUE.

Preperson merge request can be signed either by specialist or receptionist (user with scope `merge_request:write`) from legal entity as in merge request.
There is a [**dummy method**](https://uaehealthapi.docs.apiary.io/#reference/dummy-methods/dummy-for-merge-request/sign-merge-request) that describes the latest merge request data model for sign and can be used as documentation.

+ Parameters
    + id: `7c3da506-804d-4550-8993-bf17f9ee0404` (string, required) - `Identifier of the merge request`

+ Request (application/json)

    + Headers
    
            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

    + Attributes (object)
        + `signed_content`: `U2lnbmVkIGNvbnRlbnQgTVVTVCBjb25zaXN0cyBvZiBKU09OIG9iamVjdCB3aXRoIG1lcmdlIHJlcXVlc3QgZGF0YSBhbmQgcHJpbnRvdXQgdGVtcGxhdGUuIE9iamVjdCB0aGF0IG5lZWQgdG8gYmUgc2lnbmVkIGlzIHJldHVybmVkIGJ5IEFwcHJvdmUgbWVyZ2UgcmVxdWVzdCBtZXRob2QsIEpTT04uUGF0aDogJC5kYXRhLiBQZXJzb24gbXVzdCByZS1yZWFkIGFuZCBzaWduIG1lcmdlIHJlcXVlc3QgcHJpbnQgZm9ybSBhbmQgYWZ0ZXIgdGhhdCBwYXRpZW50X3NpZ25lZCBzaG91bGQgYmUgY2hhbmdlZCB0byBUUlVFLg==` (string, required)
        + `signed_content_encoding`: base64 (string, required)

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (`Merge_request_response`)
            + status: SIGNED (string, required) - `status of the signed merge request. Merge completed`

### Resend Authorization OTP on merge request [POST /api/merge_requests/{id}/actions/resend_otp]

Use this method to resend sms with OTP-code on previously created merge request (patient`s authentification method is OTP).

+ Parameters
    + id: `7c3da506-804d-4550-8993-bf17f9ee0404` (string, required) - `Identifier of the merge request`

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            api-key: uXhEczJ56adsfh3Ri9SUkc4en
    

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + data (`OTP`)

### Get merge requests [GET /api/merge_requests{?status,master_person_id,merge_person_id,page,page_size}]
Method returns a list of merge requests. Service returns only merge requests related to the same legal entity as the user. To obtain more detailed information about merge request use [**Get merge request by ID**](https://uaehealthapi.docs.apiary.io/#reference/public.-medical-service-provider-integration-layer/merge-request/get-merge-request-by-id). Note that person and preperson data of SIGNED merge request avaliable limited period of time (depends on schedule of [Auto cleaning person data process](https://e-health-ua.atlassian.net/wiki/spaces/EH/pages/624328717/Auto+cleaning+of+person+data+from+merge+requests))

+ Parameters
    + status: NEW (enum, optional) - `status of the merge request`
        - NEW
        - APPROVED
        - REJECTED
        - SIGNED
        - EXPIRED
    + master_person_id: `7c3da506-804d-4550-8993-bf17f9ee0402` (string, optional) - MPI identifier of the master preperson.
    + merge_person_id: `7c3da506-804d-4550-8993-bf17f9ee0403` (string, optional) - MPI identifier of the merge person \(preperson\).
    + page: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 300. Default: 50

+ Request (application/json)

    + Headers
    
            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array[`Merge_request_response`])


### Get merge request by ID [GET /api/merge_requests/{id}]
Method returns merge request details by it's ID. Depending on merge request status different data returned in response: if status is NEW, REJECTED (after NEW) or EXPIRED (after NEW) - `data_to_be_signed` section returns null in response. If status is APPROVED, REJECTED or EXPIRED (after APPROVED), SIGNED - `data_to_be_signed` section returns with detailed information of person, preperson, printout form e.t.c that will be needed for Sign merge request (look [**dummy method**](https://uaehealthapi.docs.apiary.io/#reference/dummy-methods/dummy-for-merge-request/sign-merge-request)).

**Note!** that `data_to_be_signed` of SIGNED, REJECTED (after APPROVED) or EXPIRED merge request avaliable limited period of time which depends on [**Auto cleaning of person data from merge requests process**](https://e-health-ua.atlassian.net/wiki/spaces/EH/pages/624328717/Auto+cleaning+of+person+data+from+merge+requests).

+ Parameters
    + id: `7c3da506-804d-4550-8993-bf17f9ee0404` (string, required) - `Identifier of the merge request`
    
+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (`Merge_request_response`)
            + `data_to_be_signed` (`Merge_request_sign_data`, optional)
            + status: APPROVED (string, required) - `status of the approved merge request`
        + urgent (object, required)
            + `authentication_method_current` (array[`Authentication_Method`], required) - `Current authentication method of the master person`
            + documents (array[`media_content`], optional) - `Documents of the master person

## Licenses [/api/licenses]

### Get licenses [GET /api/licenses{?id,license_number,type,is_primary,page,page_size}]

Use this end-point to obtain all Licenses of the legal entity.

+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional)
    + license_number: `fd12344344` (string, optional)
    + type: MSP (string, optional) - Dictionary LICENSE_TYPE
    + is_primary: true (boolean, optional) - primary or additional license flag
    + `page`: 2 (number) - Page number.
    + `page_size`: 50 (number) - A limit on the number of objects to be returned, between 1 and 300. Default: 50

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array[`crud_licenses_get`])

### Create license [POST /api/licenses]

This method must be used to create additional licenses for legal entity (`is_primary=false`) in the system.

Primary license must be added with `Create/Update Legal Entity V2` method.

+ Request (application/json)
    + Attributes (`crud_licenses_post`)
      + `is_primary`: false (boolean, required)

+ Response 201 (application/json)
    + Attributes (`Response_OK`)
        + data (`crud_licenses_get`)

### Update license [PATCH /api/licenses/{id}]

This method must be used to update additional license (`is_primary=false`) for legal entity in the system.

Primary license must be updated with `Create/Update Legal Entity V2` method.

+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)

+ Request (application/json)
    + Attributes (`crud_licenses_post`)
      + is_primary: false (boolean, required)

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`crud_licenses_get`)

# Group Public. Medical Programs

## Medical Program [/api/medical_program]

### Get medical programs list [GET /api/medical_programs{?id,name,is_active,mr_blank_type,page,page_size}]
Method returns list of medical programs filtering by parameters. By default method returns only active medical programs `is_active=true`

**Scopes required:** `medical_program:read`

+ Parameters
    + `id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - Medical program identifier
    + `name`: `Доступні ліки` (string, optional) - Name of the Medical program
    + `is_active`: `true` (boolean, optional) - Is medical program active or not. Default: true
    + `mr_blank_type`: `F-1` (string, optional) - Type of blank required by Program for prescription of Medications
    + page: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 300. Default: 50

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + meta (Response__Meta)
        + data (array[`medical_programs_response`])

### Get Medical Program by id [GET /api/medical_programs/id]

This endpoint returns medical program by id.

**Scopes required:** `medical_program:read`

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (`medical_programs_response`)


### Get Program services list [GET /api/program_services{?medical_program_id,page,page_size}]

This endpoint returns list of service program members.

**Scopes required:** `program_service:read`
+ Parameters
    + medical_program_id: `1380df72-275a-11e7-93ae-92361f002671` (string, required)
    + page: 2 (number, optional) - Page number
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 300. Default: 50

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (array[`Program_Service_Response`])



### Get Program service by id [GET /api/program_services/id]

This endpoint returns service program member by id.

**Scopes required:** `program_service:read`

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (`Program_Service_Response`)


### Get Services Dictionary [GET /api/services{?code,name,page,page_size}]

This web service returns a catalog of services that could be submitted in eHealth. The catalog has a tree data structure. Each node represents group of services (or sub-group), except end-node, that represents services themselves. Maximum nesting level is 4.

+ Parameters
    + `code`: `JF2 01` (string, optional) - Service code.
    + `name`: `Some Name` (string, optional) - Service name.
    + `page`: 2 (number, optional) - Page number.
    + `page_size`: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 300. Default: 50

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (`Service_in_group`)

# Group Public. Reimbursement

## Drugs [/apidrugs]

### Get drugs list v2 [GET /api/v2/drugs{?innm_id,innm_name,innm_sctid,innm_dosage_form,innm_dosage_id,innm_dosage_name,medication_code_atc,medical_program_id,mr_blank_type,dosage_form_is_dosed,medication_request_allowed,care_plan_activity_allowed,page,page_size}]

This endpoint returns list of drugs. Each drug contains all allowed package forms and related innm.
The method contains is_primary parameter, which indicates whether the ingredient is the primary in the drug.
[Get drugs list](https://uaehealthapi.docs.apiary.io/#reference/public.-reimbursement/drugs/get-drugs-list) method will be deprecated in the future.


**Scopes required:** `drugs:read`

+ Parameters
    + `innm_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - Innm identifier.
    + `innm_name`: `Інсулін деглюдек` (string, optional) - Innm local name.
    + `innm_sctid`: `52574003` (string, optional) - Innm CNOMED code.
    + `innm_dosage_form`: `ML` (string, optional) - Innm_dosage form.
    + `innm_dosage_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - Innm_dosage identifier.
    + `innm_dosage_name`: `Інсулін деглюдек 200мл шприц-ручка` (string, optional) - Innm_dosage name.
    + `medication_code_atc`: `С01BD01` (string, optional) - Medication code ATC.
    + `medical_program_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - medical program id.
    + `mr_blank_type`: `F-1` (string, optional) - parameter of Likarska form, specifying of paper form for issuing of Medication request, example F-1 or F-3.
    + `dosage_form_is_dosed`: TRUE (boolean, optional) - parameter of Likarska form, specifying of type of Likarska form - dosed, like `pills`, or not dosed, like `salve`.  
    + `medication_request_allowed`: TRUE (boolean, optional) - flag whether medications are allowed to be dispensed by the program.
    + `care_plan_activity_allowed`: TRUE (boolean, optional) - flag whether activities are allowed to be created with product as this medications.
    + `page`: 2 (number, optional) - Page number.
    + `page_size`: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 300. Default: 50

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (array[`Drug_v2_Response`])

### Get drugs list - Should be deprecated [GET /api/drugs{?innm_id,innm_name,innm_sctid,innm_dosage_form,innm_dosage_id,innm_dosage_name,medication_code_atc,medical_program_id,page,page_size}]

This endpoint returns list of drugs. Each drug contains all allowed package forms and related innm.

**Scopes required:** `drugs:read`

+ Parameters
    + `innm_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - Innm identifier.
    + `innm_name`: `Аміодарон` (string, optional) - Innm local name.
    + `innm_sctid`: `52574003` (string, optional) - Innm CNOMED code.
    + `innm_dosage_form`: `PILL` (string, optional) - Innm_dosage form.
    + `innm_dosage_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - Innm_dosage identifier.
    + `innm_dosage_name`: `Аміодарон 200мг таблетки` (string, optional) - Innm_dosage name.
    + `medication_code_atc`: `С01BD01` (string, optional) - Medication code ATC.
    + `medical_program_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - medical program id.
    + page: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 300. Default: 50

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (array[`Drug_Response`])

## Medication Request Requests [/api/medication_request_requests]

[Medication request Request]() is a life-cycle entity that is used to perform operations on [Medication requests]().

After Medication request Request is signed it will be automatically moved to [Medication requests]().

### PreQualify Medication Request Request [POST /api/medication_request_requests/prequalify]

This method is used to pre-qualify data Medication request Request (possibility to give reimbursement for medication according the programs) before creating Medication request Request. Fields descriptions are listed in request Example view.

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

    + Attributes (object)
        + `medication_request_request` (object)
            + include `Medication_request_Request_Qualify_post_data`
        + `programs` (array[`Qualify_Medication_request_Request_List_program_post_data`], required) - Medical programs list for qualify

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
        +  data (array[`Qualify_Medication_request_Request_Responce`]))

+ Response 422 (application/json)
    + Attributes (`Response_Error`)
        + meta (Response__Meta)
            + code: 422
        + error
            + type: unverified (string, required)
            + message: `Only for active MPI record can create Medication request Request!` (string, required)


### Create Medication Request Request [POST /api/medication_request_requests]

This method is used to create Medication request Request (as a part of Medication request creation process)

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

    + Attributes (object)
        + `medication_request_request` (object)
            + include (`Medication_request_Request_post_data`)

+ Response 201 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + include `Medication_request_Request_Response`
        + urgent (object, required)
            + `authentication_method_current` (object, required)
                + type: `OTP` (enum, required)
                    - OTP
                    - OFFLINE
                    - NA
                + number: `+38093*****85` (string, required)

+ Response 422 (application/json)
    + Attributes (`Response_Error`)
        + meta (Response__Meta)
            + code: 422
        + error
            + type: unverified (string, required)
            + message: `Only active employee with type DOCTOR can create medication request!` (string, required)

### Get medication request requests by search params [GET /api/persons/{person_id}/medication_request_requests{?legal_entity_id,employee_id,episode_id,care_plan_id,activity_id,encounter_id,status,intent,page,page_size}]

Use this method to obtain list of Medication request Requests. 
Use [**Get Medication request requests details**](https://uaehealthapi.docs.apiary.io/#reference/public.-reimbursement/medication-request-requests/get-medication-request-requests-details) to get Medication request Request by ID.

+ Parameters
    + `person_id`: `5e661b15-a39a-4713-b18e-ba03a4a48ecc` (string, required) - person_id of a patient.
    + `legal_entity_id`: `7124259c-eeb1-4cbb-acac-ada2162675d1` (string, optional) - Unique legal entity identifier.
    + `employee_id`: `7124259c-eeb1-4cbb-acac-ada2162675d1` (string, optional) - Unique doctor identifier.
    + `episode_id`: `6f305d0e-1758-4920-9167-d4f97225ad7e` (string, optional) - Unique episode identifier, look into episode in encounter.
    + `care_plan_id`: `8838982b-6a77-4cb5-87cd-cdb82eb55364` (string, optional) - Unique care plan identifier.
    + `activity_id`: `d1e07d06-d063-4d19-b9ae-88fc1c7a8682` (string, optional) - Unique activity identifier.
    + `encounter_id`: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, optional) - Unique encounter identifier.
    + `status`: `NEW` (enum, optional) - Status of medication request request. Default `NEW`
        - NEW
        - SIGNED
        - EXPIRED
        - REJECTED
    + intent: order (string, optional) - Medication request request intent
    + page: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 300. Default: 50.
    

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + meta (Response__Meta)
        + data (object)
            + include `Medication_request_Request_Public_Response`

### Get Medication Request Requests in care plan context [GET /api/care_plans/{care_plan_id}/medication_request_requests{?employee_id,person_id,status,intent,encounter_id,page,page_size}]

The method returns a list of medication request requests in the context of a care plan. 
User must have an approval on the care plan from url.

Use [**Get Medication request requests details**](https://uaehealthapi.docs.apiary.io/#reference/public.-reimbursement/medication-request-requests/get-medication-request-requests-details) to get Medication request Request by ID.

+ Parameters
    + `employee_id`: `7124259c-eeb1-4cbb-acac-ada2162675d1` (string, optional) - user_id of a doctor.
    + `person_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - person_id of a patient.
    + `status`: `NEW` (enum, optional). Default `NEW`
        - NEW
        - SIGNED
        - EXPIRED
        - REJECTED
    + intent: order (string, optional) - Medication request request intent
    + `encounter_id`: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, optional) - encounter identifier
    + page: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 300. Default: 50

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + meta (Response__Meta)
        + data (object)
            + include `Medication_request_Request_Public_Response`

### Get medication request requests details [GET /api/persons/{person_id}/medication_request_requests/{id}]

Use this method to obtain Medication request request by ID.

+ Parameters
    + `person_id`: `5e661b15-a39a-4713-b18e-ba03a4a48ecc` (string, required) - person_id of a patient.
    + id: `48416485-cc98-46c4-8bba-e321de9e1ecd` (string, required) - request id.

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + meta (Response__Meta)
        + data (object)
            + include `Medication_request_Request_Public_Response`

### Sign Medication Request Request [PATCH /api/medication_request_requests/{id}/actions/sign]

This method is used to sign Medication request Request. Method receives signed message (pkcs7) including signed content, digital signature and signer public key in `signed_content` property.
All signature fields will be validated (including signer certificate authority).

This service will store signed copy of Medication request Request in Media Content Storage and create Medication request if signature is all checks is passed.

Signed content MUST consists of JSON object with Medication request Request data. Object that need to be signed is returned by [**Get medication request requests details**](https://uaehealthapi.docs.apiary.io/#reference/public.-reimbursement/medication-request-requests/get-medication-request-requests-details) response, `JSON.Path: $.data`.

**Important**
Invoke Get Medication request Request by ID to obtain seed - Hash of previous block in Medication request Request chain or other random component that should be signed with Medication request Request.

Look at [**Dummy Sign Medication Request Requests**](https://uaehealthapi.docs.apiary.io/#reference/dummy-methods/dummy-for-medication-request-requests/sign-medication-request-requests) for more details.

+ Parameters
    + id: 6a8a83a4-ac39-4547-bfa2-813bc87362a4 (string, required)
    

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            api-key: uXhEczJ56adsfh3Ri9SUkc4en
            msp_drfo: 2534157686

    + Attributes (object)
        + `signed_medication_request_request`: `MIIWmAYJKoZIhvcNAQcCoIIWiTCCFoUCAQExCzAJBgUrDgMCGgUAMIISuwYJKoZIhvcNAQcBoIISrASCEqh7XHJ0ZjFcYW5zaVxhbnNpY3BnMTI1Mlxjb2NvYXJ0ZjE1MDRcY29jb2FzdWJydGY4MTANCntcZm9udHRibFxmMFxmc3dpc3NcZmNoYXJzZXQwIEhlbHZldGljYTt9DQp7XGNvbG9ydGJsO1xyZWQyNTVcZ3JlZW4yNTVcYmx1ZTI1NTtccmVkNzBcZ3JlZW41M1xibHVlOTY7XHJlZDI0OVxncmVlbjI0OVxibHVlMjUxO30NCntcKlxleHBhbmRlZGNvbG9ydGJsOztcY3NzcmdiXGMzNDUxMFxjMjc4NDNcYzQ1MDk4O1xjc3NyZ2JcYzk4MDM5XGM5ODAzOVxjOTg4MjQ7fQ0KXG1hcmdsMTQ0MFxtYXJncjE0NDBcdmlld3cxMDgwMFx2aWV3aDg0MDBcdmlld2tpbmQwDQpcZGVmdGFiNzIwDQpccGFyZFxwYXJkZWZ0YWI3MjBccGFydGlnaHRlbmZhY3RvcjANCg0KXGYwXGZzMjggXGNmMiBcY2IzIFxleHBuZDBcZXhwbmR0dzBca2VybmluZzANClx7XA0KICAgImlkIjoiYjA3NWYxNDgiLFwNCiAgICJzdGFydF9kYXRlIjoiMjAxNy0wMy0wMlQxMDo0NToxNi4wMDBaIixcDQogICAiZW5kX2RhdGUiOiIyMDE3LTAzLTAyVDEwOjQ1OjE2LjAwMFoiLFwNCiAgICJwZXJzb24iOlx7XA0KICAgICAgImZpcnN0X25hbWUiOiJcdWMwXHUxMDU1IFx1MTA3NyBcdTEwOTAgXHUxMDg4IFx1MTA4NiAiLFwNCiAgICAgICJsYXN0X25hbWUiOiJcdWMwXHUxMDMwIFx1MTA3NCBcdTEwNzIgXHUxMDg1IFx1MTA4NiBcdTEwNzQgIixcDQogICAgICAic2blic Vjb25kX25hbWUiOiJcdWMwXHUxMDUyIFx1MTA4MCBcdTEwODIgXHUxMDg2IFx1MTA4MyBcdTEwNzIgXHUxMDgxIFx1MTA4NiBcdTEwNzQgXHUxMDgwIFx1MTA5NSAiLFwNCiAgICAgICJiaXJ0aF9kYXRlIjoiMTk5MS0wOC0xOVQwMDowMDowMC4wMDBaIixcDQogICAgICAiYmlydGhfcGxhY2UiOiJcdWMwXHUxMDQyIFx1MTExMCBcdTEwODUgXHUxMDg1IFx1MTA4MCBcdTEwOTQgXHUxMTAzICwgXHUxMDU5IFx1MTA4MiBcdTEwODggXHUxMDcyIFx1MTExMSBcdTEwODUgXHUxMDcyICIsXA0KICAgICAgImdlbmRlciI6Ik1BTEUiLFwNCiAgICAgICJlbWFpbCI6ImVtYWlsQGV4YW1wbGUuY29tIixcDQogICAgICAidGF4X2lkIjoiMzEyNjUwOTgxNiIsXA0KICAgICAgIm5hdGlvbmFsX2lkIjoiQ0M3MTUwOTg1MjQzIixcDQogICAgICAic2VjcmV0Ijoic2VjcmV0IixcDQogICAgICAiZG9jdW1lbnRzIjpbXA0KICAgICAgICAgXHtcDQogICAgICAgICAgICAidHlwZSI6IlBBU1NQT1JUIixcDQogICAgICAgICAgICAibnVtYmVyIjoiMTIwNTE4IixcDQogICAgICAgICAgICAiaXNzdWVfZGF0ZSI6IjIwMTUtMDQtMDdUMDA6MDA6MDAuMDAwWiIsXA0KICAgICAgICAgICAgImV4cGlyeV9kYXRlIjoiMjAxNS0wNC0wN1QwMDowMDowMC4wMDBaIixcDQogICAgICAgICAgICAiaXNzdWVkX2J5IjoiRE1TVSJcDQogICAgICAgICBcfVwNCiAgICAgIF0sXA0KICAgICAgImFkZHJlc3NlcyI6W1wNCiAgICAgICAgIFx7XA0KICAgICAgICAgICAgInR5cGUiOiJSRVNJREVOQ0UiLFwNCiAgICAgICAgICAgICJjb3VudHJ5IjoiVUEiLFwNCiAgICAgICAgICAgICJhcmVhIjoiXHVjMFx1MTA0NiBcdTEwODAgXHUxMDkwIFx1MTA4NiBcdTEwODQgXHUxMDgwIFx1MTA4OCBcdTEwODkgXHUxMTAwIFx1MTA4MiBcdTEwNzIgIixcDQogICAgICAgICAgICAicmVnaW9uIjoiXHVjMFx1MTA0MSBcdTEwNzcgXHUxMDg4IFx1MTA3NiBcdTEwODAgXHUxMDk1IFx1MTExMCBcdTEwNzQgXHUxMDg5IFx1MTEwMCBcdTEwODIgXHUxMDgwIFx1MTA4MSAiLFwNCiAgICAgICAgICAgICJjaXR5IjoiXHVjMFx1MTA1MCBcdTEwODAgXHUxMTExIFx1MTA3NCAiLFwNCiAgICAgICAgICAgICJjaXR5X3R5cGUiOiJDSVRZIixcDQogICAgICAgICAgICAic3RyZWV0IjoiXHVjMFx1MTA3NCBcdTEwOTEgXHUxMDgzIC4gXHUxMDUzIFx1MTExMCBcdTEwNzggXHUxMDgwIFx1MTA4NSBcdTEwODkgXHUxMTAwIFx1MTA4MiBcdTEwNzIgIixcDQogICAgICAgICAgICAiYnVpbGRpbmciOiIxNSIsXA0KICAgICAgICAgICAgImFwYXJ0bWVudCI6IjIzIixcDQogICAgICAgICAgICAiemlwIjoiMDIwOTAiXA0KICAgICAgICAgXH1cDQogICAgICBdLFwNCiAgICAgICJwaG9uZXMiOltcDQogICAgICAgICBce1wNCiAgICAgICAgICAgICJ0eXBlIjoiTU9CSUxFIixcDQogICAgICAgICAgICAibnVtYmVyIjoiKzM4MDUwMzQxMDg3MCJcDQogICAgICAgICBcfVwNCiAgICAgIF0sXA0KICAgICAgImF1dGhlbnRpY2F0aW9uX21ldGhvZHMiOltcDQogICAgICAgICBce1wNCiAgICAgICAgICAgICJ0eXBlIjoiU01TIixcDQogICAgICAgICAgICAicGhvbmVfbnVtYmVyIjoiKzM4MDUwODg4NzcwMCJcDQogICAgICAgICBcfVwNCiAgICAgIF0sXA0KICAgICAgImVtZXJnZW5jeV9jb250YWN0Ijpce1wNCiAgICAgICAgICJmaXJzdF9uYW1lIjoiXHVjMFx1MTA1NSBcdTEwNzcgXHUxMDkwIFx1MTA4OCBcdTEwODYgIixcDQogICAgICAgICAibGFzdF9uYW1lIjoiXHVjMFx1MTAzMCBcdTEwNzQgXHUxMDcyIFx1MTA4NSBcdTEwODYgXHUxMDc0ICIsXA0KICAgICAgICAgInNlY29uZF9uYW1lIjoiXHVjMFx1MTA1MiBcdTEwODAgXHUxMDgyIFx1MTA4NiBcdTEwODMgXHUxMDcyIFx1MTA4MSBcdTEwODYgXHUxMDc0IFx1MTA4MCBcdTEwOTUgIixcDQogICAgICAgICAicGhvbmVzIjpbXA0KICAgICAgICAgICAgXHtcDQogICAgICAgICAgICAgICAidHlwZSI6Ik1PQklMRSIsXA0KICAgICAgICAgICAgICAgIm51bWJlciI6IiszODA1MDM0MTA4NzAiXA0KICAgICAgICAgICAgXH1cDQogICAgICAgICBdXA0KICAgICAgXH0sXA0KICAgICAgImNvbmZpZGFudF9wZXJzb24iOlx7XA0KICAgICAgICAgInJlbGF0aW9uX3R5cGUiOiJ0cnVzdGVlIixcDQogICAgICAgICAiZmlyc3RfbmFtZSI6Ilx1YzBcdTEwNTUgXHUxMDc3IFx1MTA5MCBcdTEwODggXHUxMDg2ICIsXA0KICAgICAgICAgImxhc3RfbmFtZSI6Ilx1YzBcdTEwMzAgXHUxMDc0IFx1MTA3MiBcdTEwODUgXHUxMDg2IFx1MTA3NCAiLFwNCiAgICAgICAgICJzZWNvbmRfbmFtZSI6Ilx1YzBcdTEwNTIgXHUxMDgwIFx1MTA4MiBcdTEwODYgXHUxMDgzIFx1MTA3MiBcdTEwODEgXHUxMDg2IFx1MTA3NCBcdTEwODAgXHUxMDk1ICIsXA0KICAgICAgICAgImJpcnRoX2RhdGUiOiIxOTkxLTA4LTE5VDAwOjAwOjAwLjAwMFoiLFwNCiAgICAgICAgICJiaXJ0aF9wbGFjZSI6Ilx1YzBcdTEwNDIgXHUxMTEwIFx1MTA4NSBcdTEwODUgXHUxMDgwIFx1MTA5NCBcdTExMDMgLCBcdTEwNTkgXHUxMDgyIFx1MTA4OCBcdTEwNzIgXHUxMTExIFx1MTA4NSBcdTEwNzIgIixcDQogICAgICAgICAiZ2VuZGVyIjoiTUFMRSIsXA0KICAgICAgICAgInRheF9pZCI6IjMxMjY1MDk4MTYiLFwNCiAgICAgICAgICJkb2N1bWVudHMiOltcDQogICAgICAgICAgICBce1wNCiAgICAgICAgICAgICAgICJ0eXBlIjoiUEFTU1BPUlQiLFwNCiAgICAgICAgICAgICAgICJudW1iZXIiOiIxMjA1MTgiLFwNCiAgICAgICAgICAgICAgICJpc3N1ZV9kYXRlIjoiMjAxNS0wNC0wN1QwMDowMDowMC4wMDBaIixcDQogICAgICAgICAgICAgICAiZXhwaXJ5X2RhdGUiOiIyMDE1LTA0LTA3VDAwOjAwOjAwLjAwMFoiLFwNCiAgICAgICAgICAgICAgICJpc3N1ZWRfYnkiOiJETVNVIlwNCiAgICAgICAgICAgIFx9XA0KICAgICAgICAgXSxcDQogICAgICAgICAicGhvbmVzIjpbXA0KICAgICAgICAgICAgXHtcDQogICAgICAgICAgICAgICAidHlwZSI6Ik1PQklMRSIsXA0KICAgICAgICAgICAgICAgIm51bWJlciI6IiszODA1MDM0MTA4NzAiXA0KICAgICAgICAgICAgXH1cDQogICAgICAgICBdXA0KICAgICAgXH0sXA0KICAgICAgInJlbmV3YWxfY29uc2VudCI6dHJ1ZSxcDQogICAgICAicGF0aWVudF9zaWduZWQiOnRydWUsXA0KICAgICAgImRpc2Nsb3N1cmVfY29uc2VudCI6dHJ1ZSxcDQogICAgICAicHJvY2Vzc19kYXRhX2NvbnNlbnQiOnRydWVcDQogICBcfSxcDQogICAiZW1wbG95ZWUiOlx7XA0KICAgICAgImlkIjoiZDI5MGYxZWUtNmM1NC00YjAxLTkwZTYtZDcwMTc0OGYwODUxIixcDQogICAgICAidGl0bGUiOiJcdWMwXHUxMDgzIFx1MTExMCBcdTEwODIgXHUxMDcyIFx1MTA4OCAiLFwNCiAgICAgICJwYXJ0eSI6XHtcDQogICAgICAgICAiaWQiOiJiMDc1ZjE0OC03ZjkzLTRmYzItYjJlYy0yZDgxYjE5YTliN2IiLFwNCiAgICAgICAgICJmaXJzdF9uYW1lIjoiXHVjMFx1MTA1NSBcdTEwNzcgXHUxMDkwIFx1MTA4OCBcdTEwODYgIixcDQogICAgICAgICAibGFzdF9uYW1lIjoiXHVjMFx1MTAzMCBcdTEwNzQgXHUxMDcyIFx1MTA4NSBcdTEwODYgXHUxMDc0ICIsXA0KICAgICAgICAgInNlY29uZF9uYW1lIjoiXHVjMFx1MTA1MiBcdTEwODAgXHUxMDgyIFx1MTA4NiBcdTEwODMgXHUxMDcyIFx1MTA4MSBcdTEwODYgXHUxMDc0IFx1MTA4MCBcdTEwOTUgIlwNCiAgICAgIFx9XA0KICAgXH0sXA0KICAgIm1zcCI6XHtcDQogICAgICAiaWQiOiJkMjkwZjFlZSIsXA0KICAgICAgIm5hbWUiOiJcdWMwXHUxMDUwIFx1MTA4MyBcdTExMTAgXHUxMDg1IFx1MTExMCBcdTEwODIgXHUxMDcyICBcdTEwNDEgXHUxMDg2IFx1MTA4OCBcdTEwODAgXHUxMDg5ICIsXA0KICAgICAgInNob3J0X05hbWUiOiJcdWMwXHUxMDQxIFx1MTA4NiBcdTEwODggXHUxMDgwIFx1MTA4OSAiLFwNCiAgICAgICJ0eXBlIjoiXHVjMFx1MTA2MCBcdTEwNTQgXHUxMDU1ICIsXA0KICAgICAgImVkcnBvdSI6IjU0MzIzNDU0MzIiXA0KICAgXH0sXA0KICAgInNjb3BlIjoiZmFtaWx5IGRvY3RvciIsXA0KICAgInBsYWludGV4dF9jb250ZW50IjoiRGVjbGFyYXRpb24gY29udGVudCJcDQpcfX2gggIuMIICKjCCAZOgAwIBAgIJANj0sC/v0hWYMA0GCSqGSIb3DQEBBQUAMBkxFzAVBgNVBAMUDlBLQ1MjNyBleGFtcGxlMB4XDTE3MDMyNzE0NTczM1oXDTE3MDQyNjE0NTczM1owGTEXMBUGA1UEAxQOUEtDUyM3IGV4YW1wbGUwgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAMuqrxE/0txT+ZVRKU1O85a8eaaUAOkbcAIy1mMoxQ+UBwcBeXt07Oxu32+p51HSY93Pp5AlDLKE48sjSNvMbTk5vtZ6g8sqMpZxlBVqHLkXLXYBMf2rmtE4hfV6yTP5YUJEs+a9cotsPN0r5KlI9g8aSpIj9Ie8mML5Vh1taQHNAgMBAAGjejB4MB0GA1UdDgQWBBTET2SwL5UfUMKDyhuBGCA+CaflnzBJBgNVHSMEQjBAgBTET2SwL5UfUMKDyhuBGCA+Cafln6EdpBswGTEXMBUGA1UEAxQOUEtDUyM3IGV4YW1wbGWCCQDY9LAv79IVmDAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBBQUAA4GBAF1uOGjUb6IVS28UqZ2qLc/kd2oNU2hOEuAp1YeaKRL2OaG4bTubJO1ejoxCJNfVj0FFw5PXIgjnw87JzkAy5KLDTiotQl8eknkd1bR3nIWINemck3GeGYkR8giG3gkNxz6ky1+63ZcoJkEiS46aneDhmS6BdH0V2G/3delos8+ZMYIBgDCCAXwCAQEwJjAZMRcwFQYDVQQDFA5QS0NTIzcgZXhhbXBsZQIJANj0sC/v0hWYMAkGBSsOAwIaBQCggbEwGAYJKoZIhvcNAQkDMQsGCSqGSIb3DQEHATAcBgkqhkiG9w0BCQUxDxcNMTcwMzI4MTE1NDEwWjAjBgkqhkiG9w0BCQQxFgQU5NSvVRVYHz5tG1GW8gXrjHSnLj8wUgYJKoZIhvcNAQkPMUUwQzAKBggqhkiG9w0DBzAOBggqhkiG9w0DAgICAIAwDQYIKoZIhvcNAwICAUAwBwYFKw4DAgcwDQYIKoZIhvcNAwICASgwDQYJKoZIhvcNAQEBBQAEgYCdqnN8gGXw9OUmtxOvQQgHK5Ni/4/2WQWj7rxERh5AI6rhXs/hh3DNS5Z5mN6wO8z47SQuedbsMQ5hf6+9BbKhXD7WKeU+DtGyfa1ner5/ubz6BeVvuT98D4PrzHlqNSpe/7AirrA70QVO9kPoFSmGtBG6JjaqaCZBYbvF9InPRw==` (string, required)
        + `signed_content_encoding`: base64 (string, required)

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + data (object)
            + include `Medication_request_Public_Response`
            + printout_form: `HTML` (string, required) - Generated printout form

### Reject Medication Request Request [PATCH /api/medication_request_requests/{id}/actions/reject]

Use this method to reject previously created Medication request Request.

+ Parameters
    + `id`: `a89f6a26-4221-4597-a1d2-542d5e40b565` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
        + data (object)
            + include (`Medication_request_Request_Public_Response`)

## Medication Request [/api/medication_requests]
### Qualify Medication Request by ID [POST /api/medication_requests/{id}/actions/qualify]

This method is used to qualify (possibility to use Innm for the program) Medication request by Id . Fields descriptions are listed in request Example view.

+ Parameters
    + id: `2848a935-5fd7-48ba-b235-a9b5d475c647` (string, required) - `Medication request identifier`

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

    + Attributes (object)
        + `division_id`: `2848a935-5fd7-48ba-b235-a9b5d475c647` (string, required) - `Division identifier`
        + `programs` (array[`Qualify_Medication_request_Request_List_program_post_data`], required) - Medical programs list for qualify

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
        +  data (array[`Qualify_by_ID_Request_for_Medication_request_Responce`]))

+ Response 422 (application/json)
    + Attributes (`Response_Error`)
        + meta (Response__Meta)
            + code: 422
        + error
            + type: unverified (string, required)
            + message: `Only for active MPI record can create medication request!` (string, required)

### Get medication requests by search params [GET /api/persons/{person_id}/medication_requests{?legal_entity_id,employee_id,status,request_number,created_from,created_to,medication_id,intent,care_plan_id,encounter_id,episode_id,page,page_size,medical_program_id,started_at_from,started_at_to,ended_at_from,ended_at_to,dispense_valid_from_start,dispense_valid_from_end,dispense_valid_to_start,dispense_valid_to_end}]

Use this method to obtain list of Medication Requests. 
Use [**Get medication requests details**](https://uaehealthapi.docs.apiary.io/#reference/public.-reimbursement/medication-request/get-medication-requests-details) to get Medication Request by ID.

+ Parameters
    + `person_id`: `5e661b15-a39a-4713-b18e-ba03a4a48ecc` (string, required) - person_id of a patient.
    + `legal_entity_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - legal entity identifier.
    + `employee_id`: `7124259c-eeb1-4cbb-acac-ada2162675d1` (string, optional) - user_id of a doctor.
    + `status`: `ACTIVE` (enum, optional). Default `ACTIVE`
        - ACTIVE
        - COMPLETED
        - EXPIRED
        - REJECTED
    + `request_number` : `0000-243P-1X53-EH38` (string, optional) - Public medication request human readable number
    + `created_from`: `2017-08-17` (string, optional) - Medication request creation date period start, which is determined by the external system. Format *DATE '2017-08-17'*
    + `created_to`: `2017-08-30` (string, optional) - Medication request creation date period end, which is determined by the external system. Format *DATE '2017-08-30'*
    + `medication_id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b5b` (string, optional) - innm dosage id
    + intent: order (string, optional) - Medication request intent
    + `care_plan_id`: `8838982b-6a77-4cb5-87cd-cdb82eb55364` (string, optional) - care plan identifier
    + `encounter_id`: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, optional) - encounter identifier
    + `episode_id`: `6f305d0e-1758-4920-9167-d4f97225ad7e` (string, optional) - Unique episode identifier, look into episode in encounter.
    + page: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 300. Default: 50
    + `medical_program_id`: `9a2fc263-6029-4b2b-b40a-66f4435509b7` (string, optional) - Internal medical program ID, a UUID string.
    + `started_at_from`: `2017-08-16` (string, optional) - Start date of the period of treatment initiation period. Format DATE '2017-08-16'.
    + `ended_at_from`: `2017-09-16` (string, optional) - End date of the period of treatment initiation period. Format DATE '2017-09-16'.
    + `started_at_to`: `2017-08-20` (string, optional) - Start date of the period of treatment ending period. Format DATE '2017-08-20'.
    + `ended_at_to`: `2017-09-20` (string, optional) - End date of the period of treatment ending period. Format DATE '2017-09-20'.
    + `dispense_valid_from_start`: `2017-02-17` (string, optional) - Start date of the period of dispense issue date. Format DATE '2017-02-17'.
    + `dispense_valid_from_end`: `2017-02-19` (string, optional) - End date of the period of dispense issue date. Format DATE '2017-02-19'.
    + `dispense_valid_to_start`: `2017-03-26` (string, optional) - Start date of the period of dispense expiry date. Format DATE '2017-03-26'.
    + `dispense_valid_to_end`: `2017-03-30` (string, optional) - End date of the period of dispense expiry date. Format DATE '2017-03-30'.


+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
   + Attributes (`Response_Collection_V2`)
        + data (array)
            + (object)
                + include `Medication_request_Public_Response_with_Medical_Program_min`

### Get Medication requests in care plan context [GET /api/care_plans/{care_plan_id}/medication_requests{?legal_entity_id,employee_id,person_id,status,request_number,created_from,created_to,medication_id,intent,encounter_id,page,page_size,medical_program_id,started_at_from,started_at_to,ended_at_from,ended_at_to,dispense_valid_from_start,dispense_valid_from_end,dispense_valid_to_start,dispense_valid_to_end}]

The method returns a list of medication requests in the context of a care plan. 
User must have an approval on the care plan from url.

Use [**Get medication requests details**](https://uaehealthapi.docs.apiary.io/#reference/public.-reimbursement/medication-request/get-medication-requests-details) to get Medication Request by ID.

+ Parameters
    + `legal_entity_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - legal entity identifier.
    + `employee_id`: `7124259c-eeb1-4cbb-acac-ada2162675d1` (string, optional) - user_id of a doctor.
    + `person_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - person_id of a patient.
    + `status`: `ACTIVE` (enum, optional). Default `ACTIVE`
        - ACTIVE
        - COMPLETED
        - EXPIRED
        - REJECTED
    + `request_number` : `0000-243P-1X53-EH38` (string, optional) - Public medication request human readable number
    + `created_from`: `2017-08-17` (string, optional) - Medication request creation date period start, which is determined by the external system. Format *DATE '2017-08-17'*
    + `created_to`: `2017-08-30` (string, optional) - Medication request creation date period end, which is determined by the external system. Format *DATE '2017-08-30'*
    + `medication_id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b5b` (string, optional) - innm dosage id
    + intent: order (string, optional) - Medication request intent
    + `encounter_id`: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, optional) - encounter identifier
    + page: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 300. Default: 50
    + `medical_program_id`: `9a2fc263-6029-4b2b-b40a-66f4435509b7` (string, optional) - Internal medical program ID, a UUID string.
    + `started_at_from`: `2017-08-16` (string, optional) - Start date of the period of treatment initiation period. Format DATE '2017-08-16'.
    + `ended_at_from`: `2017-09-16` (string, optional) - End date of the period of treatment initiation period. Format DATE '2017-09-16'.
    + `started_at_to`: `2017-08-20` (string, optional) - Start date of the period of treatment ending period. Format DATE '2017-08-20'.
    + `ended_at_to`: `2017-09-20` (string, optional) - End date of the period of treatment ending period. Format DATE '2017-09-20'.
    + `dispense_valid_from_start`: `2017-02-17` (string, optional) - Start date of the period of dispense issue date. Format DATE '2017-02-17'.
    + `dispense_valid_from_end`: `2017-02-19` (string, optional) - End date of the period of dispense issue date. Format DATE '2017-02-19'.
    + `dispense_valid_to_start`: `2017-03-26` (string, optional) - Start date of the period of dispense expiry date. Format DATE '2017-03-26'.
    + `dispense_valid_to_end`: `2017-03-30` (string, optional) - End date of the period of dispense expiry date. Format DATE '2017-03-30'.

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
   + Attributes (`Response_Collection_V2`)
        + data (array[`Medication_request_Public_Response_with_Medical_Program_min`])

### Get medication requests details [GET /api/persons/{person_id}/medication_requests/{id}]

Use this method to obtain Medication Request by ID.

+ Parameters
    + `person_id`: `5e661b15-a39a-4713-b18e-ba03a4a48ecc` (string, required) - person_id of a patient.
    + id: `48416485-cc98-46c4-8bba-e321de9e1ecd` (string, required) - `Medication Request identifier OR request_number`.

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + meta (Response__Meta)
        + data (object)
            + include `Medication_request_Public_Response_with_Medical_Program_min`
            + `medication_info` (object, required)
                + include `Innm_Dosage_for_Medication_request_Responce`
                + `medication_remaining_qty`: 10.23 (number, optional) - medication quantity allowed to dispense
            

### Reject Medication Request [PATCH /api/medication_requests/{id}/actions/reject]

Use this method to reject previously created and signed Medication request.

**Important**

Invoke Get Medication request by ID to obtain previously created medication request. In order to reject medication request `reject_reason_code` and `reject_reason` (`optional`) should be added.

**Note!** that medication request with intent *plan* and *order* has different structure.

* *Medical program* is required for *order*
* *Medical program* is absent in *plan*

Look at [**Dummy Reject Medication Request**](https://uaehealthapi.docs.apiary.io/#reference/dummy-methods/dummy-for-medication-request/reject-medication-request) for more details.


+ Parameters
    + `id`: `a89f6a26-4221-4597-a1d2-542d5e40b565` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

    + Attributes (object)
        + `signed_medication_reject`: `MIIWmAYJKoZIhvcNAQcCoIIWiTCCFoUCAQExCzAJBgUrDgMCGgUAMIISuwYJKoZIhvcNAQcBoIISrASCEqh7XHJ0ZjFcYW5zaVxhbnNpY3BnMTI1Mlxjb2NvYXJ0ZjE1MDRcY29jb2FzdWJydGY4MTANCntcZm9udHRibFxmMFxmc3dpc3NcZmNoYXJzZXQwIEhlbHZldGljYTt9DQp7XGNvbG9ydGJsO1xyZWQyNTVcZ3JlZW4yNTVcYmx1ZTI1NTtccmVkNzBcZ3JlZW41M1xibHVlOTY7XHJlZDI0OVxncmVlbjI0OVxibHVlMjUxO30NCntcKlxleHBhbmRlZGNvbG9ydGJsOztcY3NzcmdiXGMzNDUxMFxjMjc4NDNcYzQ1MDk4O1xjc3NyZ2JcYzk4MDM5XGM5ODAzOVxjOTg4MjQ7fQ0KXG1hcmdsMTQ0MFxtYXJncjE0NDBcdmlld3cxMDgwMFx2aWV3aDg0MDBcdmlld2tpbmQwDQpcZGVmdGFiNzIwDQpccGFyZFxwYXJkZWZ0YWI3MjBccGFydGlnaHRlbmZhY3RvcjANCg0KXGYwXGZzMjggXGNmMiBcY2IzIFxleHBuZDBcZXhwbmR0dzBca2VybmluZzANClx7XA0KICAgImlkIjoiYjA3NWYxNDgiLFwNCiAgICJzdGFydF9kYXRlIjoiMjAxNy0wMy0wMlQxMDo0NToxNi4wMDBaIixcDQogICAiZW5kX2RhdGUiOiIyMDE3LTAzLTAyVDEwOjQ1OjE2LjAwMFoiLFwNCiAgICJwZXJzb24iOlx7XA0KICAgICAgImZpcnN0X25hbWUiOiJcdWMwXHUxMDU1IFx1MTA3NyBcdTEwOTAgXHUxMDg4IFx1MTA4NiAiLFwNCiAgICAgICJsYXN0X25hbWUiOiJcdWMwXHUxMDMwIFx1MTA3NCBcdTEwNzIgXHUxMDg1IFx1MTA4NiBcdTEwNzQgIixcDQogICAgICAic2blic Vjb25kX25hbWUiOiJcdWMwXHUxMDUyIFx1MTA4MCBcdTEwODIgXHUxMDg2IFx1MTA4MyBcdTEwNzIgXHUxMDgxIFx1MTA4NiBcdTEwNzQgXHUxMDgwIFx1MTA5NSAiLFwNCiAgICAgICJiaXJ0aF9kYXRlIjoiMTk5MS0wOC0xOVQwMDowMDowMC4wMDBaIixcDQogICAgICAiYmlydGhfcGxhY2UiOiJcdWMwXHUxMDQyIFx1MTExMCBcdTEwODUgXHUxMDg1IFx1MTA4MCBcdTEwOTQgXHUxMTAzICwgXHUxMDU5IFx1MTA4MiBcdTEwODggXHUxMDcyIFx1MTExMSBcdTEwODUgXHUxMDcyICIsXA0KICAgICAgImdlbmRlciI6Ik1BTEUiLFwNCiAgICAgICJlbWFpbCI6ImVtYWlsQGV4YW1wbGUuY29tIixcDQogICAgICAidGF4X2lkIjoiMzEyNjUwOTgxNiIsXA0KICAgICAgIm5hdGlvbmFsX2lkIjoiQ0M3MTUwOTg1MjQzIixcDQogICAgICAic2VjcmV0Ijoic2VjcmV0IixcDQogICAgICAiZG9jdW1lbnRzIjpbXA0KICAgICAgICAgXHtcDQogICAgICAgICAgICAidHlwZSI6IlBBU1NQT1JUIixcDQogICAgICAgICAgICAibnVtYmVyIjoiMTIwNTE4IixcDQogICAgICAgICAgICAiaXNzdWVfZGF0ZSI6IjIwMTUtMDQtMDdUMDA6MDA6MDAuMDAwWiIsXA0KICAgICAgICAgICAgImV4cGlyeV9kYXRlIjoiMjAxNS0wNC0wN1QwMDowMDowMC4wMDBaIixcDQogICAgICAgICAgICAiaXNzdWVkX2J5IjoiRE1TVSJcDQogICAgICAgICBcfVwNCiAgICAgIF0sXA0KICAgICAgImFkZHJlc3NlcyI6W1wNCiAgICAgICAgIFx7XA0KICAgICAgICAgICAgInR5cGUiOiJSRVNJREVOQ0UiLFwNCiAgICAgICAgICAgICJjb3VudHJ5IjoiVUEiLFwNCiAgICAgICAgICAgICJhcmVhIjoiXHVjMFx1MTA0NiBcdTEwODAgXHUxMDkwIFx1MTA4NiBcdTEwODQgXHUxMDgwIFx1MTA4OCBcdTEwODkgXHUxMTAwIFx1MTA4MiBcdTEwNzIgIixcDQogICAgICAgICAgICAicmVnaW9uIjoiXHVjMFx1MTA0MSBcdTEwNzcgXHUxMDg4IFx1MTA3NiBcdTEwODAgXHUxMDk1IFx1MTExMCBcdTEwNzQgXHUxMDg5IFx1MTEwMCBcdTEwODIgXHUxMDgwIFx1MTA4MSAiLFwNCiAgICAgICAgICAgICJjaXR5IjoiXHVjMFx1MTA1MCBcdTEwODAgXHUxMTExIFx1MTA3NCAiLFwNCiAgICAgICAgICAgICJjaXR5X3R5cGUiOiJDSVRZIixcDQogICAgICAgICAgICAic3RyZWV0IjoiXHVjMFx1MTA3NCBcdTEwOTEgXHUxMDgzIC4gXHUxMDUzIFx1MTExMCBcdTEwNzggXHUxMDgwIFx1MTA4NSBcdTEwODkgXHUxMTAwIFx1MTA4MiBcdTEwNzIgIixcDQogICAgICAgICAgICAiYnVpbGRpbmciOiIxNSIsXA0KICAgICAgICAgICAgImFwYXJ0bWVudCI6IjIzIixcDQogICAgICAgICAgICAiemlwIjoiMDIwOTAiXA0KICAgICAgICAgXH1cDQogICAgICBdLFwNCiAgICAgICJwaG9uZXMiOltcDQogICAgICAgICBce1wNCiAgICAgICAgICAgICJ0eXBlIjoiTU9CSUxFIixcDQogICAgICAgICAgICAibnVtYmVyIjoiKzM4MDUwMzQxMDg3MCJcDQogICAgICAgICBcfVwNCiAgICAgIF0sXA0KICAgICAgImF1dGhlbnRpY2F0aW9uX21ldGhvZHMiOltcDQogICAgICAgICBce1wNCiAgICAgICAgICAgICJ0eXBlIjoiU01TIixcDQogICAgICAgICAgICAicGhvbmVfbnVtYmVyIjoiKzM4MDUwODg4NzcwMCJcDQogICAgICAgICBcfVwNCiAgICAgIF0sXA0KICAgICAgImVtZXJnZW5jeV9jb250YWN0Ijpce1wNCiAgICAgICAgICJmaXJzdF9uYW1lIjoiXHVjMFx1MTA1NSBcdTEwNzcgXHUxMDkwIFx1MTA4OCBcdTEwODYgIixcDQogICAgICAgICAibGFzdF9uYW1lIjoiXHVjMFx1MTAzMCBcdTEwNzQgXHUxMDcyIFx1MTA4NSBcdTEwODYgXHUxMDc0ICIsXA0KICAgICAgICAgInNlY29uZF9uYW1lIjoiXHVjMFx1MTA1MiBcdTEwODAgXHUxMDgyIFx1MTA4NiBcdTEwODMgXHUxMDcyIFx1MTA4MSBcdTEwODYgXHUxMDc0IFx1MTA4MCBcdTEwOTUgIixcDQogICAgICAgICAicGhvbmVzIjpbXA0KICAgICAgICAgICAgXHtcDQogICAgICAgICAgICAgICAidHlwZSI6Ik1PQklMRSIsXA0KICAgICAgICAgICAgICAgIm51bWJlciI6IiszODA1MDM0MTA4NzAiXA0KICAgICAgICAgICAgXH1cDQogICAgICAgICBdXA0KICAgICAgXH0sXA0KICAgICAgImNvbmZpZGFudF9wZXJzb24iOlx7XA0KICAgICAgICAgInJlbGF0aW9uX3R5cGUiOiJ0cnVzdGVlIixcDQogICAgICAgICAiZmlyc3RfbmFtZSI6Ilx1YzBcdTEwNTUgXHUxMDc3IFx1MTA5MCBcdTEwODggXHUxMDg2ICIsXA0KICAgICAgICAgImxhc3RfbmFtZSI6Ilx1YzBcdTEwMzAgXHUxMDc0IFx1MTA3MiBcdTEwODUgXHUxMDg2IFx1MTA3NCAiLFwNCiAgICAgICAgICJzZWNvbmRfbmFtZSI6Ilx1YzBcdTEwNTIgXHUxMDgwIFx1MTA4MiBcdTEwODYgXHUxMDgzIFx1MTA3MiBcdTEwODEgXHUxMDg2IFx1MTA3NCBcdTEwODAgXHUxMDk1ICIsXA0KICAgICAgICAgImJpcnRoX2RhdGUiOiIxOTkxLTA4LTE5VDAwOjAwOjAwLjAwMFoiLFwNCiAgICAgICAgICJiaXJ0aF9wbGFjZSI6Ilx1YzBcdTEwNDIgXHUxMTEwIFx1MTA4NSBcdTEwODUgXHUxMDgwIFx1MTA5NCBcdTExMDMgLCBcdTEwNTkgXHUxMDgyIFx1MTA4OCBcdTEwNzIgXHUxMTExIFx1MTA4NSBcdTEwNzIgIixcDQogICAgICAgICAiZ2VuZGVyIjoiTUFMRSIsXA0KICAgICAgICAgInRheF9pZCI6IjMxMjY1MDk4MTYiLFwNCiAgICAgICAgICJkb2N1bWVudHMiOltcDQogICAgICAgICAgICBce1wNCiAgICAgICAgICAgICAgICJ0eXBlIjoiUEFTU1BPUlQiLFwNCiAgICAgICAgICAgICAgICJudW1iZXIiOiIxMjA1MTgiLFwNCiAgICAgICAgICAgICAgICJpc3N1ZV9kYXRlIjoiMjAxNS0wNC0wN1QwMDowMDowMC4wMDBaIixcDQogICAgICAgICAgICAgICAiZXhwaXJ5X2RhdGUiOiIyMDE1LTA0LTA3VDAwOjAwOjAwLjAwMFoiLFwNCiAgICAgICAgICAgICAgICJpc3N1ZWRfYnkiOiJETVNVIlwNCiAgICAgICAgICAgIFx9XA0KICAgICAgICAgXSxcDQogICAgICAgICAicGhvbmVzIjpbXA0KICAgICAgICAgICAgXHtcDQogICAgICAgICAgICAgICAidHlwZSI6Ik1PQklMRSIsXA0KICAgICAgICAgICAgICAgIm51bWJlciI6IiszODA1MDM0MTA4NzAiXA0KICAgICAgICAgICAgXH1cDQogICAgICAgICBdXA0KICAgICAgXH0sXA0KICAgICAgInJlbmV3YWxfY29uc2VudCI6dHJ1ZSxcDQogICAgICAicGF0aWVudF9zaWduZWQiOnRydWUsXA0KICAgICAgImRpc2Nsb3N1cmVfY29uc2VudCI6dHJ1ZSxcDQogICAgICAicHJvY2Vzc19kYXRhX2NvbnNlbnQiOnRydWVcDQogICBcfSxcDQogICAiZW1wbG95ZWUiOlx7XA0KICAgICAgImlkIjoiZDI5MGYxZWUtNmM1NC00YjAxLTkwZTYtZDcwMTc0OGYwODUxIixcDQogICAgICAidGl0bGUiOiJcdWMwXHUxMDgzIFx1MTExMCBcdTEwODIgXHUxMDcyIFx1MTA4OCAiLFwNCiAgICAgICJwYXJ0eSI6XHtcDQogICAgICAgICAiaWQiOiJiMDc1ZjE0OC03ZjkzLTRmYzItYjJlYy0yZDgxYjE5YTliN2IiLFwNCiAgICAgICAgICJmaXJzdF9uYW1lIjoiXHVjMFx1MTA1NSBcdTEwNzcgXHUxMDkwIFx1MTA4OCBcdTEwODYgIixcDQogICAgICAgICAibGFzdF9uYW1lIjoiXHVjMFx1MTAzMCBcdTEwNzQgXHUxMDcyIFx1MTA4NSBcdTEwODYgXHUxMDc0ICIsXA0KICAgICAgICAgInNlY29uZF9uYW1lIjoiXHVjMFx1MTA1MiBcdTEwODAgXHUxMDgyIFx1MTA4NiBcdTEwODMgXHUxMDcyIFx1MTA4MSBcdTEwODYgXHUxMDc0IFx1MTA4MCBcdTEwOTUgIlwNCiAgICAgIFx9XA0KICAgXH0sXA0KICAgIm1zcCI6XHtcDQogICAgICAiaWQiOiJkMjkwZjFlZSIsXA0KICAgICAgIm5hbWUiOiJcdWMwXHUxMDUwIFx1MTA4MyBcdTExMTAgXHUxMDg1IFx1MTExMCBcdTEwODIgXHUxMDcyICBcdTEwNDEgXHUxMDg2IFx1MTA4OCBcdTEwODAgXHUxMDg5ICIsXA0KICAgICAgInNob3J0X05hbWUiOiJcdWMwXHUxMDQxIFx1MTA4NiBcdTEwODggXHUxMDgwIFx1MTA4OSAiLFwNCiAgICAgICJ0eXBlIjoiXHVjMFx1MTA2MCBcdTEwNTQgXHUxMDU1ICIsXA0KICAgICAgImVkcnBvdSI6IjU0MzIzNDU0MzIiXA0KICAgXH0sXA0KICAgInNjb3BlIjoiZmFtaWx5IGRvY3RvciIsXA0KICAgInBsYWludGV4dF9jb250ZW50IjoiRGVjbGFyYXRpb24gY29udGVudCJcDQpcfX2gggIuMIICKjCCAZOgAwIBAgIJANj0sC/v0hWYMA0GCSqGSIb3DQEBBQUAMBkxFzAVBgNVBAMUDlBLQ1MjNyBleGFtcGxlMB4XDTE3MDMyNzE0NTczM1oXDTE3MDQyNjE0NTczM1owGTEXMBUGA1UEAxQOUEtDUyM3IGV4YW1wbGUwgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAMuqrxE/0txT+ZVRKU1O85a8eaaUAOkbcAIy1mMoxQ+UBwcBeXt07Oxu32+p51HSY93Pp5AlDLKE48sjSNvMbTk5vtZ6g8sqMpZxlBVqHLkXLXYBMf2rmtE4hfV6yTP5YUJEs+a9cotsPN0r5KlI9g8aSpIj9Ie8mML5Vh1taQHNAgMBAAGjejB4MB0GA1UdDgQWBBTET2SwL5UfUMKDyhuBGCA+CaflnzBJBgNVHSMEQjBAgBTET2SwL5UfUMKDyhuBGCA+Cafln6EdpBswGTEXMBUGA1UEAxQOUEtDUyM3IGV4YW1wbGWCCQDY9LAv79IVmDAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBBQUAA4GBAF1uOGjUb6IVS28UqZ2qLc/kd2oNU2hOEuAp1YeaKRL2OaG4bTubJO1ejoxCJNfVj0FFw5PXIgjnw87JzkAy5KLDTiotQl8eknkd1bR3nIWINemck3GeGYkR8giG3gkNxz6ky1+63ZcoJkEiS46aneDhmS6BdH0V2G/3delos8+ZMYIBgDCCAXwCAQEwJjAZMRcwFQYDVQQDFA5QS0NTIzcgZXhhbXBsZQIJANj0sC/v0hWYMAkGBSsOAwIaBQCggbEwGAYJKoZIhvcNAQkDMQsGCSqGSIb3DQEHATAcBgkqhkiG9w0BCQUxDxcNMTcwMzI4MTE1NDEwWjAjBgkqhkiG9w0BCQQxFgQU5NSvVRVYHz5tG1GW8gXrjHSnLj8wUgYJKoZIhvcNAQkPMUUwQzAKBggqhkiG9w0DBzAOBggqhkiG9w0DAgICAIAwDQYIKoZIhvcNAwICAUAwBwYFKw4DAgcwDQYIKoZIhvcNAwICASgwDQYJKoZIhvcNAQEBBQAEgYCdqnN8gGXw9OUmtxOvQQgHK5Ni/4/2WQWj7rxERh5AI6rhXs/hh3DNS5Z5mN6wO8z47SQuedbsMQ5hf6+9BbKhXD7WKeU+DtGyfa1ner5/ubz6BeVvuT98D4PrzHlqNSpe/7AirrA70QVO9kPoFSmGtBG6JjaqaCZBYbvF9InPRw==` (string, required)
        + `signed_content_encoding`: base64 (string, required)

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
        + data (object)
            + include `Medication_request_reject_Public_Response_with_Medical_Program_min`
            + `rejected_at`: `2017-04-20T19:14:13Z` (string, required, nullable) - Reject date - ISO 8601 date and time in UTC timezone.
            + `rejected_by`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required, nullable) - Rejected user identifier
            + `reject_reason`: `Помилка призначення. Несумісні препарати.` (string, optional, nullable) - Medication request reject reason
            + `reject_reason_code`: `INCORRECT_DOSAGE` (string, required, nullable) - `Dictionary MEDICATION_REQUEST_REJECT_REASON`

### Reject Medication Request by Pharmacy User [PATCH /api/pharmacy/medication_requests/{id}/actions/reject]

Use this method to reject existing active Medication request.

**Important**

Invoke Get Medication Request by ID by Pharmacy User to obtain previously created medication request. In order to reject medication request `reject_reason_code` and `reject_reason` (`optional`) should be added.

**Note!** that medication request with intent *plan* and *order* has different structure.

* *Medical program* is required for *order*
* *Medical program* is absent in *plan*

Look at [**Dummy Reject Medication Request by Pharmacy User**](https://uaehealthapi.docs.apiary.io/#reference/dummy-methods/dummy-for-medication-request/dummy-reject-medication-request-by-pharmacy-user) for more details.


+ Parameters
    + `id`: `a89f6a26-4221-4597-a1d2-542d5e40b565` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

    + Attributes (object)
        + `signed_medication_reject`: `MIIWmAYJKoZIhvcNAQcCoIIWiTCCFoUCAQExCzAJBgUrDgMCGgUAMIISuwYJKoZIhvcNAQcBoIISrASCEqh7XHJ0ZjFcYW5zaVxhbnNpY3BnMTI1Mlxjb2NvYXJ0ZjE1MDRcY29jb2FzdWJydGY4MTANCntcZm9udHRibFxmMFxmc3dpc3NcZmNoYXJzZXQwIEhlbHZldGljYTt9DQp7XGNvbG9ydGJsO1xyZWQyNTVcZ3JlZW4yNTVcYmx1ZTI1NTtccmVkNzBcZ3JlZW41M1xibHVlOTY7XHJlZDI0OVxncmVlbjI0OVxibHVlMjUxO30NCntcKlxleHBhbmRlZGNvbG9ydGJsOztcY3NzcmdiXGMzNDUxMFxjMjc4NDNcYzQ1MDk4O1xjc3NyZ2JcYzk4MDM5XGM5ODAzOVxjOTg4MjQ7fQ0KXG1hcmdsMTQ0MFxtYXJncjE0NDBcdmlld3cxMDgwMFx2aWV3aDg0MDBcdmlld2tpbmQwDQpcZGVmdGFiNzIwDQpccGFyZFxwYXJkZWZ0YWI3MjBccGFydGlnaHRlbmZhY3RvcjANCg0KXGYwXGZzMjggXGNmMiBcY2IzIFxleHBuZDBcZXhwbmR0dzBca2VybmluZzANClx7XA0KICAgImlkIjoiYjA3NWYxNDgiLFwNCiAgICJzdGFydF9kYXRlIjoiMjAxNy0wMy0wMlQxMDo0NToxNi4wMDBaIixcDQogICAiZW5kX2RhdGUiOiIyMDE3LTAzLTAyVDEwOjQ1OjE2LjAwMFoiLFwNCiAgICJwZXJzb24iOlx7XA0KICAgICAgImZpcnN0X25hbWUiOiJcdWMwXHUxMDU1IFx1MTA3NyBcdTEwOTAgXHUxMDg4IFx1MTA4NiAiLFwNCiAgICAgICJsYXN0X25hbWUiOiJcdWMwXHUxMDMwIFx1MTA3NCBcdTEwNzIgXHUxMDg1IFx1MTA4NiBcdTEwNzQgIixcDQogICAgICAic2blic Vjb25kX25hbWUiOiJcdWMwXHUxMDUyIFx1MTA4MCBcdTEwODIgXHUxMDg2IFx1MTA4MyBcdTEwNzIgXHUxMDgxIFx1MTA4NiBcdTEwNzQgXHUxMDgwIFx1MTA5NSAiLFwNCiAgICAgICJiaXJ0aF9kYXRlIjoiMTk5MS0wOC0xOVQwMDowMDowMC4wMDBaIixcDQogICAgICAiYmlydGhfcGxhY2UiOiJcdWMwXHUxMDQyIFx1MTExMCBcdTEwODUgXHUxMDg1IFx1MTA4MCBcdTEwOTQgXHUxMTAzICwgXHUxMDU5IFx1MTA4MiBcdTEwODggXHUxMDcyIFx1MTExMSBcdTEwODUgXHUxMDcyICIsXA0KICAgICAgImdlbmRlciI6Ik1BTEUiLFwNCiAgICAgICJlbWFpbCI6ImVtYWlsQGV4YW1wbGUuY29tIixcDQogICAgICAidGF4X2lkIjoiMzEyNjUwOTgxNiIsXA0KICAgICAgIm5hdGlvbmFsX2lkIjoiQ0M3MTUwOTg1MjQzIixcDQogICAgICAic2VjcmV0Ijoic2VjcmV0IixcDQogICAgICAiZG9jdW1lbnRzIjpbXA0KICAgICAgICAgXHtcDQogICAgICAgICAgICAidHlwZSI6IlBBU1NQT1JUIixcDQogICAgICAgICAgICAibnVtYmVyIjoiMTIwNTE4IixcDQogICAgICAgICAgICAiaXNzdWVfZGF0ZSI6IjIwMTUtMDQtMDdUMDA6MDA6MDAuMDAwWiIsXA0KICAgICAgICAgICAgImV4cGlyeV9kYXRlIjoiMjAxNS0wNC0wN1QwMDowMDowMC4wMDBaIixcDQogICAgICAgICAgICAiaXNzdWVkX2J5IjoiRE1TVSJcDQogICAgICAgICBcfVwNCiAgICAgIF0sXA0KICAgICAgImFkZHJlc3NlcyI6W1wNCiAgICAgICAgIFx7XA0KICAgICAgICAgICAgInR5cGUiOiJSRVNJREVOQ0UiLFwNCiAgICAgICAgICAgICJjb3VudHJ5IjoiVUEiLFwNCiAgICAgICAgICAgICJhcmVhIjoiXHVjMFx1MTA0NiBcdTEwODAgXHUxMDkwIFx1MTA4NiBcdTEwODQgXHUxMDgwIFx1MTA4OCBcdTEwODkgXHUxMTAwIFx1MTA4MiBcdTEwNzIgIixcDQogICAgICAgICAgICAicmVnaW9uIjoiXHVjMFx1MTA0MSBcdTEwNzcgXHUxMDg4IFx1MTA3NiBcdTEwODAgXHUxMDk1IFx1MTExMCBcdTEwNzQgXHUxMDg5IFx1MTEwMCBcdTEwODIgXHUxMDgwIFx1MTA4MSAiLFwNCiAgICAgICAgICAgICJjaXR5IjoiXHVjMFx1MTA1MCBcdTEwODAgXHUxMTExIFx1MTA3NCAiLFwNCiAgICAgICAgICAgICJjaXR5X3R5cGUiOiJDSVRZIixcDQogICAgICAgICAgICAic3RyZWV0IjoiXHVjMFx1MTA3NCBcdTEwOTEgXHUxMDgzIC4gXHUxMDUzIFx1MTExMCBcdTEwNzggXHUxMDgwIFx1MTA4NSBcdTEwODkgXHUxMTAwIFx1MTA4MiBcdTEwNzIgIixcDQogICAgICAgICAgICAiYnVpbGRpbmciOiIxNSIsXA0KICAgICAgICAgICAgImFwYXJ0bWVudCI6IjIzIixcDQogICAgICAgICAgICAiemlwIjoiMDIwOTAiXA0KICAgICAgICAgXH1cDQogICAgICBdLFwNCiAgICAgICJwaG9uZXMiOltcDQogICAgICAgICBce1wNCiAgICAgICAgICAgICJ0eXBlIjoiTU9CSUxFIixcDQogICAgICAgICAgICAibnVtYmVyIjoiKzM4MDUwMzQxMDg3MCJcDQogICAgICAgICBcfVwNCiAgICAgIF0sXA0KICAgICAgImF1dGhlbnRpY2F0aW9uX21ldGhvZHMiOltcDQogICAgICAgICBce1wNCiAgICAgICAgICAgICJ0eXBlIjoiU01TIixcDQogICAgICAgICAgICAicGhvbmVfbnVtYmVyIjoiKzM4MDUwODg4NzcwMCJcDQogICAgICAgICBcfVwNCiAgICAgIF0sXA0KICAgICAgImVtZXJnZW5jeV9jb250YWN0Ijpce1wNCiAgICAgICAgICJmaXJzdF9uYW1lIjoiXHVjMFx1MTA1NSBcdTEwNzcgXHUxMDkwIFx1MTA4OCBcdTEwODYgIixcDQogICAgICAgICAibGFzdF9uYW1lIjoiXHVjMFx1MTAzMCBcdTEwNzQgXHUxMDcyIFx1MTA4NSBcdTEwODYgXHUxMDc0ICIsXA0KICAgICAgICAgInNlY29uZF9uYW1lIjoiXHVjMFx1MTA1MiBcdTEwODAgXHUxMDgyIFx1MTA4NiBcdTEwODMgXHUxMDcyIFx1MTA4MSBcdTEwODYgXHUxMDc0IFx1MTA4MCBcdTEwOTUgIixcDQogICAgICAgICAicGhvbmVzIjpbXA0KICAgICAgICAgICAgXHtcDQogICAgICAgICAgICAgICAidHlwZSI6Ik1PQklMRSIsXA0KICAgICAgICAgICAgICAgIm51bWJlciI6IiszODA1MDM0MTA4NzAiXA0KICAgICAgICAgICAgXH1cDQogICAgICAgICBdXA0KICAgICAgXH0sXA0KICAgICAgImNvbmZpZGFudF9wZXJzb24iOlx7XA0KICAgICAgICAgInJlbGF0aW9uX3R5cGUiOiJ0cnVzdGVlIixcDQogICAgICAgICAiZmlyc3RfbmFtZSI6Ilx1YzBcdTEwNTUgXHUxMDc3IFx1MTA5MCBcdTEwODggXHUxMDg2ICIsXA0KICAgICAgICAgImxhc3RfbmFtZSI6Ilx1YzBcdTEwMzAgXHUxMDc0IFx1MTA3MiBcdTEwODUgXHUxMDg2IFx1MTA3NCAiLFwNCiAgICAgICAgICJzZWNvbmRfbmFtZSI6Ilx1YzBcdTEwNTIgXHUxMDgwIFx1MTA4MiBcdTEwODYgXHUxMDgzIFx1MTA3MiBcdTEwODEgXHUxMDg2IFx1MTA3NCBcdTEwODAgXHUxMDk1ICIsXA0KICAgICAgICAgImJpcnRoX2RhdGUiOiIxOTkxLTA4LTE5VDAwOjAwOjAwLjAwMFoiLFwNCiAgICAgICAgICJiaXJ0aF9wbGFjZSI6Ilx1YzBcdTEwNDIgXHUxMTEwIFx1MTA4NSBcdTEwODUgXHUxMDgwIFx1MTA5NCBcdTExMDMgLCBcdTEwNTkgXHUxMDgyIFx1MTA4OCBcdTEwNzIgXHUxMTExIFx1MTA4NSBcdTEwNzIgIixcDQogICAgICAgICAiZ2VuZGVyIjoiTUFMRSIsXA0KICAgICAgICAgInRheF9pZCI6IjMxMjY1MDk4MTYiLFwNCiAgICAgICAgICJkb2N1bWVudHMiOltcDQogICAgICAgICAgICBce1wNCiAgICAgICAgICAgICAgICJ0eXBlIjoiUEFTU1BPUlQiLFwNCiAgICAgICAgICAgICAgICJudW1iZXIiOiIxMjA1MTgiLFwNCiAgICAgICAgICAgICAgICJpc3N1ZV9kYXRlIjoiMjAxNS0wNC0wN1QwMDowMDowMC4wMDBaIixcDQogICAgICAgICAgICAgICAiZXhwaXJ5X2RhdGUiOiIyMDE1LTA0LTA3VDAwOjAwOjAwLjAwMFoiLFwNCiAgICAgICAgICAgICAgICJpc3N1ZWRfYnkiOiJETVNVIlwNCiAgICAgICAgICAgIFx9XA0KICAgICAgICAgXSxcDQogICAgICAgICAicGhvbmVzIjpbXA0KICAgICAgICAgICAgXHtcDQogICAgICAgICAgICAgICAidHlwZSI6Ik1PQklMRSIsXA0KICAgICAgICAgICAgICAgIm51bWJlciI6IiszODA1MDM0MTA4NzAiXA0KICAgICAgICAgICAgXH1cDQogICAgICAgICBdXA0KICAgICAgXH0sXA0KICAgICAgInJlbmV3YWxfY29uc2VudCI6dHJ1ZSxcDQogICAgICAicGF0aWVudF9zaWduZWQiOnRydWUsXA0KICAgICAgImRpc2Nsb3N1cmVfY29uc2VudCI6dHJ1ZSxcDQogICAgICAicHJvY2Vzc19kYXRhX2NvbnNlbnQiOnRydWVcDQogICBcfSxcDQogICAiZW1wbG95ZWUiOlx7XA0KICAgICAgImlkIjoiZDI5MGYxZWUtNmM1NC00YjAxLTkwZTYtZDcwMTc0OGYwODUxIixcDQogICAgICAidGl0bGUiOiJcdWMwXHUxMDgzIFx1MTExMCBcdTEwODIgXHUxMDcyIFx1MTA4OCAiLFwNCiAgICAgICJwYXJ0eSI6XHtcDQogICAgICAgICAiaWQiOiJiMDc1ZjE0OC03ZjkzLTRmYzItYjJlYy0yZDgxYjE5YTliN2IiLFwNCiAgICAgICAgICJmaXJzdF9uYW1lIjoiXHVjMFx1MTA1NSBcdTEwNzcgXHUxMDkwIFx1MTA4OCBcdTEwODYgIixcDQogICAgICAgICAibGFzdF9uYW1lIjoiXHVjMFx1MTAzMCBcdTEwNzQgXHUxMDcyIFx1MTA4NSBcdTEwODYgXHUxMDc0ICIsXA0KICAgICAgICAgInNlY29uZF9uYW1lIjoiXHVjMFx1MTA1MiBcdTEwODAgXHUxMDgyIFx1MTA4NiBcdTEwODMgXHUxMDcyIFx1MTA4MSBcdTEwODYgXHUxMDc0IFx1MTA4MCBcdTEwOTUgIlwNCiAgICAgIFx9XA0KICAgXH0sXA0KICAgIm1zcCI6XHtcDQogICAgICAiaWQiOiJkMjkwZjFlZSIsXA0KICAgICAgIm5hbWUiOiJcdWMwXHUxMDUwIFx1MTA4MyBcdTExMTAgXHUxMDg1IFx1MTExMCBcdTEwODIgXHUxMDcyICBcdTEwNDEgXHUxMDg2IFx1MTA4OCBcdTEwODAgXHUxMDg5ICIsXA0KICAgICAgInNob3J0X05hbWUiOiJcdWMwXHUxMDQxIFx1MTA4NiBcdTEwODggXHUxMDgwIFx1MTA4OSAiLFwNCiAgICAgICJ0eXBlIjoiXHVjMFx1MTA2MCBcdTEwNTQgXHUxMDU1ICIsXA0KICAgICAgImVkcnBvdSI6IjU0MzIzNDU0MzIiXA0KICAgXH0sXA0KICAgInNjb3BlIjoiZmFtaWx5IGRvY3RvciIsXA0KICAgInBsYWludGV4dF9jb250ZW50IjoiRGVjbGFyYXRpb24gY29udGVudCJcDQpcfX2gggIuMIICKjCCAZOgAwIBAgIJANj0sC/v0hWYMA0GCSqGSIb3DQEBBQUAMBkxFzAVBgNVBAMUDlBLQ1MjNyBleGFtcGxlMB4XDTE3MDMyNzE0NTczM1oXDTE3MDQyNjE0NTczM1owGTEXMBUGA1UEAxQOUEtDUyM3IGV4YW1wbGUwgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAMuqrxE/0txT+ZVRKU1O85a8eaaUAOkbcAIy1mMoxQ+UBwcBeXt07Oxu32+p51HSY93Pp5AlDLKE48sjSNvMbTk5vtZ6g8sqMpZxlBVqHLkXLXYBMf2rmtE4hfV6yTP5YUJEs+a9cotsPN0r5KlI9g8aSpIj9Ie8mML5Vh1taQHNAgMBAAGjejB4MB0GA1UdDgQWBBTET2SwL5UfUMKDyhuBGCA+CaflnzBJBgNVHSMEQjBAgBTET2SwL5UfUMKDyhuBGCA+Cafln6EdpBswGTEXMBUGA1UEAxQOUEtDUyM3IGV4YW1wbGWCCQDY9LAv79IVmDAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBBQUAA4GBAF1uOGjUb6IVS28UqZ2qLc/kd2oNU2hOEuAp1YeaKRL2OaG4bTubJO1ejoxCJNfVj0FFw5PXIgjnw87JzkAy5KLDTiotQl8eknkd1bR3nIWINemck3GeGYkR8giG3gkNxz6ky1+63ZcoJkEiS46aneDhmS6BdH0V2G/3delos8+ZMYIBgDCCAXwCAQEwJjAZMRcwFQYDVQQDFA5QS0NTIzcgZXhhbXBsZQIJANj0sC/v0hWYMAkGBSsOAwIaBQCggbEwGAYJKoZIhvcNAQkDMQsGCSqGSIb3DQEHATAcBgkqhkiG9w0BCQUxDxcNMTcwMzI4MTE1NDEwWjAjBgkqhkiG9w0BCQQxFgQU5NSvVRVYHz5tG1GW8gXrjHSnLj8wUgYJKoZIhvcNAQkPMUUwQzAKBggqhkiG9w0DBzAOBggqhkiG9w0DAgICAIAwDQYIKoZIhvcNAwICAUAwBwYFKw4DAgcwDQYIKoZIhvcNAwICASgwDQYJKoZIhvcNAQEBBQAEgYCdqnN8gGXw9OUmtxOvQQgHK5Ni/4/2WQWj7rxERh5AI6rhXs/hh3DNS5Z5mN6wO8z47SQuedbsMQ5hf6+9BbKhXD7WKeU+DtGyfa1ner5/ubz6BeVvuT98D4PrzHlqNSpe/7AirrA70QVO9kPoFSmGtBG6JjaqaCZBYbvF9InPRw==` (string, required)
        + `signed_content_encoding`: base64 (string, required)

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
        + data (object)
            + include `Medication_request_Public_Response_with_Medical_Program_min_for_Pharmacist_block_reason_required`
            + `rejected_at`: `2017-04-20T19:14:13Z` (string, required, nullable) - Reject date - ISO 8601 date and time in UTC timezone.
            + `rejected_by`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required, nullable) - Rejected user identifier
            + `reject_reason`: `Помилка призначення. Несумісні препарати.` (string, optional, nullable) - Medication request reject reason
            + `reject_reason_code`: `INCORRECT_DOSAGE` (string, required, nullable) - `Dictionary MEDICATION_REQUEST_REJECT_REASON`

### Resend Medication Request [PATCH /api/medication_requests/{id}/actions/resend]

Use this method to resend SMS to person with medication request number & verification code. This could be done only for medication request with type **order**


+ Parameters
    + `id`: `a89f6a26-4221-4597-a1d2-542d5e40b565` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
        + data (`Medication_request_Public_Response_with_Medical_Program_min`)

### Search Medication Dispenses by Medication Request ID [GET /api/persons/{person_id}/medication_requests/{id}/medication_dispenses{?status}]

Use this method to obtain list of Medication Dispenses by doctor with medication request ID.

Only Medication dispenses linked to medication request id will be shown. If you want to reduce amount of data that is going trough your application, use `status` filter and show only dispenses that Doctor is interested in.

Use [**Get Medication dispense details in person context**](https://uaehealthapi.docs.apiary.io/#reference/public.-reimbursement/medication-dispense/get-medication-dispense-details-in-person-context) to get Medication Dispense by ID.

+ Parameters
    + `person_id`: `5e661b15-a39a-4713-b18e-ba03a4a48ecc` (string, required) - person_id of a patient.
    + `id`: `a89f6a26-4221-4597-a1d2-542d5e40b565` (string, required)
    + status: PROCESSED (string, optional) - Status
    + page: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 300. Default: 50
    

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array)
            + (object)
                + `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Medication Dispense Response Identifier
                + `medication_request` (object, required) - Medication request
                    + include `Medication_request_Public_Response`
                + `dispensed_at`: `2017-08-17` (string, required) - date of dispense
                + `medical_program` (`Medical_Program_Response_without_settings`, required) - Active medical program within which medications are going to be provided
                + `status`: NEW (string, required) - Medication Dispense status (NEW, PROCESSED, REJECTED, EXPIRED)
                + `inserted_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
                + `updated_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.

### Get Medication Request Printout Form [GET /api/persons/{person_id}/medication_requests/{id}/printout_form]

***Scope  medication_request:details***

This method is designed to get printout form (content) by medication request id.

+ Parameters
    + `person_id`: `5e661b15-a39a-4713-b18e-ba03a4a48ecc` (string, required) - person_id of a patient.
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - medication request identifier.

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + data (object)
            + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - medication request identifier
            + `printout_form`: `Medication request content` (string, required) - HTML document for medication request

### Get Medication Request by ID by Pharmacy User [GET /api/pharmacy/medication_requests/{id}]
Scope required: `medication_request:details_pharm`

Use this method by pharmacy user to obtain short Medication Request by ID or request_number.

+ Parameters
    + id: `48416485-cc98-46c4-8bba-e321de9e1ecd` (string, required) - `Medication Request identifier OR request_number`

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + meta (Response__Meta)
        + data (object)
            + include `Medication_request_Public_Response_with_Medical_Program_min_for_Pharmacist`
            + `medication_info` (object, required)
                + include `Innm_Dosage_for_Medication_request_Responce`
                + `medication_remaining_qty`: 10.23 (number, optional) - medication quantity allowed to dispense

### Get Medication request by ID [GET /api/medication_requests/{id}]
Note: This method will be deprecated. `Get medication requests details` is being developed.

Use this method to obtain Medication request by ID.

+ Parameters
    + id: `48416485-cc98-46c4-8bba-e321de9e1ecd` (string, required) - `Medication Request identifier OR request_number`

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + meta (Response__Meta)
        + data (object)
            + include `Medication_request_Public_Response_with_Medical_Program_min`
            + `medication_info` (object, required)
                + include `Innm_Dosage_for_Medication_request_Responce`
                + `medication_remaining_qty`: 10.23 (number, optional) - medication quantity allowed to dispense
                

### Block Medication Request [PATCH /api/medication_requests/{id}/actions/block]

Use this method to block Medication request for dispense. In order to block medication request `block_reason` and `block_reason_code` should be added in request.

This method can't be used by employees with type 'PHARMACIST'.
For pharmacists please use [**Block Medication Request by Pharmacy User**](https://uaehealthapi.docs.apiary.io/#reference/public.-reimbursement/medication-request/block-medication-request-by-pharmacy-user).

**Scopes required:** `medication_request:block`

+ Parameters
    + `id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

    + Attributes (object)
       + `block_reason`: `перевищено норми відпуску` (string, required) - Block reason
       + `block_reason_code`: `BLOCK_WRONG_QTY_DRUG` (string, required) - Block reason code `Dictionary MEDICATION_REQUEST_BLOCK_REASON`

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + meta (Response__Meta)
        + data (object)
            + include `Medication_request_Public_Response_with_Medical_Program_min_block_reason_required`

### Unblock Medication Request [PATCH /api/medication_requests/{id}/actions/unblock]

Use this method to unblock previously blocked Medication request for dispense. In order to unblock medication request `block_reason` and `block_reason_code` should be added in request.

**Scopes required:** `medication_request:unblock`

+ Parameters
    + `id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
    
    + Attributes (object)
       + `block_reason`: `помилки відсутні` (string, required) - Unblock reason
       + `block_reason_code`: `UNBLOCK_DEFAULT` (string, required) - Unblock reason code `Dictionary MEDICATION_REQUEST_BLOCK_REASON`       

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + meta (Response__Meta)
        + data (object)
            + include `Medication_request_Public_Response_with_Medical_Program_min_block_reason_required`

### Block Medication Request by Pharmacy User [PATCH /api/pharmacy/medication_requests/{id}/actions/block]

Use this method to block Medication request for dispense. In order to block medication request `block_reason` and `block_reason_code` should be added in request.

This method must be used only by employees with type 'PHARMACIST'.
For employees with other types please use [**Block Medication Request**](https://uaehealthapi.docs.apiary.io/#reference/public.-reimbursement/medication-request/block-medication-request).

**Scopes required:** `medication_request:block_pharm`

+ Parameters
    + `id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

    + Attributes (object)
       + `block_reason`: `перевищено норми відпуску` (string, required) - Block reason
       + `block_reason_code`: `BLOCK_WRONG_QTY_DRUG` (string, required) - Block reason code `Dictionary MEDICATION_REQUEST_BLOCK_REASON`

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + meta (Response__Meta)
        + data (`Medication_request_Public_Response_with_Medical_Program_min_for_Pharmacist_block_reason_required`)

## Medication Dispense [/api/medication_dispenses]

Medication Dispense - Indicates that a medication product has been dispensed for a named person/patient

1. Dispense of medication is possible only under Medication Request and during the period specified in Medication Request

2. **Medical program** - mandatory attribute for the first phase. There is no options to dispense medication without program

3. **Dispense details** - several medications of different manufacturers with the same innm can be dispensed at a time. Total of medication_qty should be less or equal to medication quantity specified in Medication Request

**Sequence diagram**

![Medication Dispense Sequence](https://www.websequencediagrams.com/cgi-bin/cdraw?lz=dGl0bGUgUHJvY2VzcyBtZWRpY2F0aW9uIERpc3BlbnNlCgpQaGFybWFjeS0-R1c6IENyZWF0ZQAeDGQAIghHVwAdBkF1dGhvcml6AAwGRUhlYWx0aAAdHQAdBwAiC1ZlcmlmeQABLHkAgQAJIHBlcmlvZAA8GnJlcXVlc3RlZCBwcm9ncmFtAF0kAIESE0dldCByZWltYnVzZW1lbnQgcmF0AIFCCwCCMQg6IFJlc3BvAIJIBWFsdACCZQlNAIJbEyAgICAAgmcKADgKU2lnbgCCYBUAIw5HVzoAgzkUACENAIMVEgAOCACDIgkAIyAAgxcZRFMgAAoXQ2hhbmcAhCMVIHN0YXR1cwAPKQCDNwcAIhUAgmATZWxzZSBSZWplY3QAgk8jR1c6ACUIAIIFOwAjHwCBXUEAgVMUbmQKCg&s=modern-blue)

### Create Medication Dispense by Pharmacy User [POST /api/pharmacy/medication_dispenses{?code}]

This method is used to dispense medications to patient

Full list of all validations can be found [here](https://e-health-ua.atlassian.net/wiki/spaces/EH/pages/583403856/Create+Medication+Dispense)

If medical program has setting with parameter `skip_medication_dispense_sign` = true then  fields `payment_amount (optional, if medical program has funding sourse != NHS)` and `payment_id (optional)` should be submitted. In this case process of medication dispense will be performed on create (w/o using digital sign)

If medical program has funding sourse NHS, fields `sell_amount`, `sell_price`, `payment_amount`, `discount_amount` must be submitted.

**Important** In case medications are dispensed to patient under specific medical program, program participant id must be provided also

**Scopes required:** `medication_dispense:write`

+ Parameters
    + `code`: `3114` (string, optional)

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

    + Attributes (object)
        + medication_dispense (object)
            + include `Medication_Dispense_Request`

+ Response 201 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (`Medication_Dispense_Response_for_Pharmacist`)

+ Response 409 (application/json)
    + Attributes (`Response_Error`)
        + meta (Response__Meta)
            + code: 409 (number)
        + error (Response__Error)
            + message: `Invalid division dls status` (string)
            + type: `request_conflict` (string)

### Process Medication Dispense by Pharmacy User [PATCH /api/pharmacy/medication_dispenses/{id}/actions/process]

This method is used to process created dispense

**Important**
Invoke Get Medication dispense details by Pharmacy User to obtain previously created medication dispense. In order to process dispense `payment_id (optional)` and `payment_amount (optional, if medical program has funding sourse != NHS)` should be added.

Look at [**Dummy Process Medication Dispense by Pharmacy User**](https://uaehealthapi.docs.apiary.io/#reference/dummy-methods/dummy-for-medication-dispense/process-medication-dispense-by-pharmacy-user) for more details.

**Scopes required:** `medication_dispense:process`

+ Parameters
    + `id`: `a89f6a26-4221-4597-a1d2-542d5e40b565` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

    + Attributes (object)
        + `signed_medication_dispense`: `` (string, required)
        + `signed_content_encoding`: base64 (string, required)


+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (object)
            + include `Medication_Dispense_Response_for_Pharmacist`

### Get Medication dispenses by search params by Pharmacy User [GET /api/pharmacy/medication_dispenses{?id,medication_request_id,legal_entity_id,division_id,status,dispensed_from,dispensed_to,care_plan_id,page,page_size}]

This method intended to get all Medication dispenses for the PHARMACY users.

**Scopes required:** `medication_dispense:read_pharm`

Use [**Get Medication dispense  by Pharmacy User**](https://uaehealthapi.docs.apiary.io/#reference/public.-reimbursement/medication-dispense/get-medication-dispense-details-by-pharmacy-user) to get Medication Dispense by ID.

+ Parameters
    + id: `a89f6a26-4221-4597-a1d2-542d5e40b565` (string, optional) - Medication dispense ID
    + medication_request_id: `a89f6a26-4221-4597-a1d2-542d5e40b565` (string, optional) - Medication request ID
    + legal_entity_id: `a89f6a26-4221-4597-a1d2-542d5e40b565` (string, optional) - Legal entity ID
    + division_id: `a89f6a26-4221-4597-a1d2-542d5e40b565` (string, optional) - Division ID
    + status: PROCESSED (string, optional) - Status
    + dispensed_from: `2017-09-01` (string, optional) - date of dispense
    + dispensed_to: `2017-10-01` (string, optional) - date of dispense
    + `care_plan_id`: `8838982b-6a77-4cb5-87cd-cdb82eb55364` (string, optional) - care plan identifier
    + page: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 300. Default: 50


+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array)
            + (object)
                + include `Medication_Dispense_Response_for_Pharmacist`

### Get Medication dispense details by Pharmacy User [GET /api/pharmacy/medication_dispenses/{id}]


This method allows to get detailed information of the Medication dispense for the PHARMACY users.

**Scopes required:** `medication_dispense:read_pharm`

+ Parameters
    + `id`: `a89f6a26-4221-4597-a1d2-542d5e40b565` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (object)
            + include `Medication_Dispense_Response_for_Pharmacist`

### Get Medication dispense details in person context [GET /api/persons/{person_id}/medication_dispenses/{id}]

This method allows to get short information of the Medication Dispense for the MSP (i.o. PRIMARY_CARE, OUTPATIENT) users.

**Scopes required:** `medication_dispense:read`

+ Parameters
    + `id`: `a89f6a26-4221-4597-a1d2-542d5e40b565` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (object)
            + include `Medication_Dispense_Details_Response_for_MSP`

## Reimbursement Report [/api/reimbursement_report]

Reimbursement Report combines information about Medication requests and corresponding Medication Dispenses

**Scopes required:** `reimbursement_report:read`

1. **MIS (OWNER)** is allowed to see Medication Requests made by its' legal_entity and related to those Medication Requests Medication Dispenses

2. **PHARMACY (PHARAMCY_OWNER)** - is allowed to see Medication Dispenses made by its' legal_entity and related to those Medication Dispenses Medication Requests.

### Get Reimbursement Report [GET /api/reimbursement_report{?date_from_request,date_to_request,date_from_dispense,date_to_dispense,page,page_size}]

+ Parameters
    + date_from_request: `2017-09-01` (date, optional) - Start date for Medication Requests created date
    + date_to_request: `2017-10-01` (date, optional) - End date for Medication Requests created date
    + date_from_dispense: `2017-09-01` (date, optional) - Start date for Medication Dispense disbursed_at date
    + date_to_dispense: `2017-10-01` (date, optional) - End date for Medication Dispense disbursed_at date
    + page: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 300. Default: 50


+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
         + data (array[`Reimbursement_Report_Response`])

## Reimbursement Report for NHS admin [/api/reimbursement_report_download]

Reimbursement Report combines information about Medication Dispenses and corresponding Medication Requests

**Scopes required:** `reimbursement_report:download`


### Get Reimbursement Report [GET /api/reimbursement_report_download{?date_from_dispense,date_to_dispense}]

+ Parameters
    + date_from_dispense: `2017-09-01` (date, optional) - Start date for Medication Dispense disbursed_at date
    + date_to_dispense: `2017-10-01` (date, optional) - End date for Medication Dispense disbursed_at date

+ Request (application/json)
    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (text/csv;charset=UTF-8)

# Group Public. Event Manager

Event Manager is used to collect different events (like `ATTRIBUTE_CHANGED`, `OBJECT_ADDED` etc) from different sources and store them in one place. At the moment only statuses are monitored. All changed statuses are stored to EventDB.

Event types
- StatusChangeEvent
- StateChangeEvent

List of events that are stored to EventDB:

- employee status changed
- employee request status changed
- declaration status changed
- medication dispense status changed
- medication request status changed
- contract status changed
- contract is_suspended changed
- contract_request status changed
- care plan status changed
- care plan activity status changed
- approval status changed
- preperson status changed
- person verification status changed
- person status changed
- division dls_verified status changed
- medical programs status change
- legal entity status changed
- service request status changed
- service request program processing status changed


Entity_type variants:
- MedicalProgram
- Contract
- Preperson
- Activity
- MedicationDispense
- MedicationRequest
- ReimbursementContractRequest
- Division
- Employee
- CapitationContractRequest
- Approval
- EmployeeRequest
- CarePlan
- Declaration
- LegalEntity

In the EventDB events are kept during one month or till 10K. The duration and amount of events are parametrized.

## Get Events

### Get events by ID [GET /api/events/{id}]

This method is used to obtain events by id.

Object `properties` may has a different fields depending on the `entity_type`. 

Entity_type|Possible fields
----------|-----------
Approval|`status`
CarePlan|`status`
CarePlan Activity|`detail.status`
Contract|`is_suspended` or `status`
ContractRequest|`status`
Declaration|`status`
Division|`dls_verified`
Employee|`status`
EmployeeRequest|`status` and `employee_id`
MedicationDispense|`status`
MedicationRequest|`status`
LegalEntity|`status`
Person|`verification_status` or `status`
Preperson|`status`
ServiceRequest|`program_processing_status` or `status`

+ Parameters
    + `id`: `a89f6a26-4221-4597-a1d2-542d5e40b565` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
         + data (array[`Get_events`])

### Get events list [GET /api/events/{?date,date_to,event_type,entity_type,attribute_name,new_value,page,page_size}]

This method is used to obtain list of events with filters.

The period of events provided in response is also limited by configuration, not only by the request parameters.

Object `properties` may has a different fields depending on the `entity_type`. 

Entity_type|Possible fields
----------|-----------
Approval|`status`
CarePlan|`status`
CarePlan Activity|`detail.status`
Contract|`is_suspended` or `status`
ContractRequest|`status`
Declaration|`status`
Division|`dls_verified`
Employee|`status`
EmployeeRequest|`status` and `employee_id`
MedicationDispense|`status`
MedicationRequest|`is_blocked` or `status`
LegalEntity|`status`
Person|`verification_status` or `status`
Preperson|`status`
ServiceRequest|`program_processing_status` or `status`

+ Parameters
    + date: `2017-12-07T12:00:00` (datetime, optional) - evets created between datetime and datetime plus 3 hours (or 'date_to' if included, but max 3 hours).
    + date_to: `2017-12-07T15:00:00` (datetime, optional) - evets created from 'date' (if included) and before datetime, max difference 3 hours.
    + event_type: `StatusChangeEvent` (enum, optional) - type of event.
    + entity_type: `MedicationDispense` (enum, optional) - type of entity.
    + attribute_name: `status` (string, optional) - name of event in properties.
    + new_value: `COMPLETED` (enum, optional)- new status of entity.
    + page: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 300. Default: 50

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
         + data (array[`Get_events`])

# Group Public. Patient Cabinet

## Cabinet [/api/cabinet]
Patient can login to cabinet using eHealth account.
Initially 2 login strategies will be supported:
- via email/password and 2nd factor
- via Digital Signature
MIS can get access/refresh tokens via the [oauth2.0 flow](#reference/public.-medical-service-provider-integration-layer/oauth).
MIS should pass it's own client_id to the sign-in form.
Using access token MIS can access all the endpoints described in this chapter to provide functionality for the patient.

### Get Personal info [GET /api/profile]

This WS designed to get personal information of patient by token.

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (object)
            + include `Party_Short`
            + id: `7e9cffd9-c75f-45fb-badf-6e8d20b6a8a8` (string, required) - person id

### Get Person details [GET /api/cabinet/persons/details]

This WS is designed to get person details in cabinet.

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`cabinet_person_response`)
        + id: `7e9cffd9-c75f-45fb-badf-6e8d20b6a8a8` (string, required) - person id

### Update MPI [PATCH /api/cabinet/persons/{id}]

This WS is designed to change some personal information in cabinet by patient.
Method receives signed message (pkcs7) including signed content, digital signature and signer public key. All signature fields will be validated (including signer certificate authority).

Entity data:
{
    "first_name": "Петро",
    "last_name": "Іванов",
    "second_name": "Миколайович",
    "birth_date": "1991-08-19",
    "birth_country": "Україна",
    "birth_settlement": "Вінниця",
    "gender": "MALE",
    "email": "email@example.com",
    "tax_id": "3126509816",
    "unzr": "19910819-00022",
    "secret": "secret",
    "documents": [
      {
        "type": "PASSPORT",
        "number": "120518",
        "issued_by": "Рокитнянським РВ ГУ МВС Київської області",
        "issued_at": "2017-02-28"
      }
    ],
    "addresses": [
      {
        "type": "RESIDENCE",
        "country": "UA",
        "area": "Житомирська",
        "region": "Бердичівський",
        "settlement": "Київ",
        "settlement_type": "CITY",
        "settlement_id": "b075f148-7f93-4fc2-b2ec-2d81b19a9b7b",
        "street_type": "STREET",
        "street": "вул. Ніжинська",
        "building": "15",
        "apartment": "23",
        "zip": "02090"
      }
    ],
    "phones": [
      {
        "type": "MOBILE",
        "number": "+380503410870"
      }
    ],
    "authentication_methods": [
      {
        "type": "OTP",
        "phone_number": "+380508887700"
      }
    ],
    "preferred_way_communication": "email",
    "emergency_contact": {
      "first_name": "Петро",
      "last_name": "Іванов",
      "second_name": "Миколайович",
      "phones": [
        {
          "type": "MOBILE",
          "number": "+380503410870"
        }
      ]
    },
    "process_disclosure_data_consent": true
  }
}

+ Parameters
    + id: 7e9cffd9-c75f-45fb-badf-6e8d20b6a8a8 (uuid)

+ Request (application/json)
    + Attributes (object)
        + `signed_request`: `MIIUKAYJKoZIhvcNAQcCoIIUGTCCFBUCAQExDjAMBgoqhiQCAQEBAQIBMIIGRgYJKoZIhvcNAQcBoIIGNwSCBjN7CiAgICAiZmlyc3RfbmFtZSI6ICLQn9C10YLRgNC+IiwKICAgICJsYXN0X25hbWUiOiAi0IbQstCw0L3QvtCyIiwKICAgICJzZWNvbmRfbmFtZSI6ICLQnNC40LrQvtC70LDQudC+0LLQuNGHIiwKICAgICJiaXJ0aF9kYXRlIjogIjE5OTEtMDgtMTkiLAogICAgImJpcnRoX2NvdW50cnkiOiAi0KPQutGA0LDRl9C90LAiLAogICAgImJpcnRoX3NldHRsZW1lbnQiOiAi0JLRltC90L3QuNGG0Y8iLAogICAgImdlbmRlciI6ICJNQUxFIiwKICAgICJlbWFpbCI6ICJlbWFpbEBleGFtcGxlLmNvbSIsCiAgICAidGF4X2lkIjogIjMxMjY1MDk4MTYiLAogICAgInNlY3JldCI6ICJzZWNyZXQiLAogICAgImRvY3VtZW50cyI6IFsKICAgICAgewogICAgICAgICJ0eXBlIjogIlBBU1NQT1JUIiwKICAgICAgICAibnVtYmVyIjogIjEyMDUxOCIsCiAgICAgICAgImlzc3VlZF9ieSI6ICLQoNC+0LrQuNGC0L3Rj9C90YHRjNC60LjQvCDQoNCSINCT0KMg0JzQktChINCa0LjRl9Cy0YHRjNC60L7RlyDQvtCx0LvQsNGB0YLRliIsCiAgICAgICAgImlzc3VlZF9hdCI6ICIyMDE3LTAyLTI4IgogICAgICB9CiAgICBdLAogICAgImFkZHJlc3NlcyI6IFsKICAgICAgewogICAgICAgICJ0eXBlIjogIlJFU0lERU5DRSIsCiAgICAgICAgImNvdW50cnkiOiAiVUEiLAogICAgICAgICJhcmVhIjogItCW0LjRgtC+0LzQuNGA0YHRjNC60LAiLAogICAgICAgICJyZWdpb24iOiAi0JHQtdGA0LTQuNGH0ZbQstGB0YzQutC40LkiLAogICAgICAgICJzZXR0bGVtZW50IjogItCa0LjRl9CyIiwKICAgICAgICAic2V0dGxlbWVudF90eXBlIjogIkNJVFkiLAogICAgICAgICJzZXR0bGVtZW50X2lkIjogIjQzNDMyNDMyIiwKICAgICAgICAic3RyZWV0X3R5cGUiOiAiU1RSRUVUIiwKICAgICAgICAic3RyZWV0IjogItCy0YPQuy4g0J3RltC20LjQvdGB0YzQutCwIiwKICAgICAgICAiYnVpbGRpbmciOiAiMTUiLAogICAgICAgICJhcGFydG1lbnQiOiAiMjMiLAogICAgICAgICJ6aXAiOiAiMDIwOTAiCiAgICAgIH0KICAgIF0sCiAgICAicGhvbmVzIjogWwogICAgICB7CiAgICAgICAgInR5cGUiOiAiTU9CSUxFIiwKICAgICAgICAibnVtYmVyIjogIiszODA1MDM0MTA4NzAiCiAgICAgIH0KICAgIF0sCiAgICAiYXV0aGVudGljYXRpb25fbWV0aG9kcyI6IFsKICAgICAgewogICAgICAgICJ0eXBlIjogIk9UUCIsCiAgICAgICAgInBob25lX251bWJlciI6ICIrMzgwNTA4ODg3NzAwIgogICAgICB9CiAgICBdLAogICAgInByZWZlcnJlZF93YXlfY29tbXVuaWNhdGlvbiI6ICJlbWFpbCIsCiAgICAiZW1lcmdlbmN5X2NvbnRhY3QiOiB7CiAgICAgICJmaXJzdF9uYW1lIjogItCf0LXRgtGA0L4iLAogICAgICAibGFzdF9uYW1lIjogItCG0LLQsNC90L7QsiIsCiAgICAgICJzZWNvbmRfbmFtZSI6ICLQnNC40LrQvtC70LDQudC+0LLQuNGHIiwKICAgICAgInBob25lcyI6IFsKICAgICAgICB7CiAgICAgICAgICAidHlwZSI6ICJNT0JJTEUiLAogICAgICAgICAgIm51bWJlciI6ICIrMzgwNTAzNDEwODcwIgogICAgICAgIH0KICAgICAgXQogICAgfSwKICAgICJwcm9jZXNzX2Rpc2Nsb3N1cmVfZGF0YV9jb25zZW50IjogdHJ1ZQogIH0KfQqgggW5MIIFtTCCBV2gAwIBAgIUDYTtobuTgegEAAAAXrQiAL+zdAAwDQYLKoYkAgEBAQEDAQEwggFCMXwwegYDVQQKDHPQn9Cj0JHQm9CG0KfQndCVINCQ0JrQptCG0J7QndCV0KDQndCVINCi0J7QktCQ0KDQmNCh0KLQktCeINCa0J7QnNCV0KDQptCG0JnQndCY0Jkg0JHQkNCd0JogwqvQn9Cg0JjQktCQ0KLQkdCQ0J3QmsK7MREwDwYDVQQLDAjQkNCm0KHQmjE2MDQGA1UEAwwt0JDQptCh0Jog0J/QkNCiINCa0JEgwqvQn9Cg0JjQktCQ0KLQkdCQ0J3QmsK7MRYwFAYDVQQFDA1VQS0xNDM2MDU3MC0xMQswCQYDVQQGEwJVQTEnMCUGA1UEBwwe0JTQvdGW0L/RgNC+0L/QtdGC0YDQvtCy0YHRjNC6MSkwJwYDVQQIDCDQlNC90ZbQv9GA0L7Qv9C10YLRgNC+0LLRgdGM0LrQsDAeFw0xODAxMjMxNDUzMzRaFw0xOTAxMjMyMTU5NTlaMIIBEzEiMCAGA1UECgwZ0KTQhtCX0JjQp9Cd0JAg0J7QodCe0JHQkDE5MDcGA1UEAwww0J/QmNCg0J7Qk9Ce0JIg0ITQktCT0JXQnSDQktCQ0JvQldCg0IbQmdCe0JLQmNCnMRcwFQYDVQQEDA7Qn9CY0KDQntCT0J7QkjEqMCgGA1UEKgwh0ITQktCT0JXQnSDQktCQ0JvQldCg0IbQmdCe0JLQmNCnMRAwDgYDVQQFDAcyMjc0Mzk4MQswCQYDVQQGEwJVQTEnMCUGA1UEBwwe0JwuINCa0KDQntCf0JjQktCd0JjQptCs0JrQmNCZMSUwIwYDVQQIDBzQmtCG0KDQntCS0J7Qk9Cg0JDQlNCh0KzQmtCQMEYwHgYLKoYkAgEBAQEDAQEwDwYNKoYkAgEBAQEDAQECBgMkAAQhjRmoLlqV3cgZNe9gmcZLlspx7ehgFCJhmSPWRSaeqDABo4ICajCCAmYwKQYDVR0OBCIEIM7Y1MGL3FCwFqfxcjkFATaRcfR7MlofZYImNtZy82BJMCsGA1UdIwQkMCKAII2E7aG7k4HowxGQqKyShT/E2MeExkoBuDcRV9hdGFVXMC8GA1UdEAQoMCagERgPMjAxODAxMjMxNDUzMzRaoREYDzIwMTkwMTIzMjE1OTU5WjAOBgNVHQ8BAf8EBAMCBsAwGQYDVR0gAQH/BA8wDTALBgkqhiQCAQEBAgIwDAYDVR0TAQH/BAIwADAeBggrBgEFBQcBAwEB/wQPMA0wCwYJKoYkAgEBAQIBMDgGA1UdHwQxMC8wLaAroCmGJ2h0dHA6Ly9hY3NrLnByaXZhdGJhbmsudWEvY3JsL1BCLVM5LmNybDBDBgNVHS4EPDA6MDigNqA0hjJodHRwOi8vYWNzay5wcml2YXRiYW5rLnVhL2NybGRlbHRhL1BCLURlbHRhLVM5LmNybDCBlAYIKwYBBQUHAQEEgYcwgYQwNAYIKwYBBQUHMAGGKGh0dHA6Ly9hY3NrLnByaXZhdGJhbmsudWEvc2VydmljZXMvb2NzcC8wTAYIKwYBBQUHMAKGQGh0dHA6Ly9hY3NrLnByaXZhdGJhbmsudWEvZG93bmxvYWQvY2VydGlmaWNhdGVzL2NlcnRpZmljYXRlcy5wN2IwQwYIKwYBBQUHAQsENzA1MDMGCCsGAQUFBzADhidodHRwOi8vYWNzay5wcml2YXRiYW5rLnVhL3NlcnZpY2VzL3RzcC8wJwYDVR0JBCAwHjAcBgwqhiQCAQEBCwEEAQExDBMKMzIyODUxMjU5NzANBgsqhiQCAQEBAQMBAQNDAARA1d1/0YSD9Ey1HLl3NXCCr9NWdZjj5zYaHQTNbFSssSY4vx45IGKbePPhHsNOX1sLhbPS8ra7sUSdehO5i+xtTzGCB/cwggfzAgEBMIIBXDCCAUIxfDB6BgNVBAoMc9Cf0KPQkdCb0IbQp9Cd0JUg0JDQmtCm0IbQntCd0JXQoNCd0JUg0KLQntCS0JDQoNCY0KHQotCS0J4g0JrQntCc0JXQoNCm0IbQmdCd0JjQmSDQkdCQ0J3QmiDCq9Cf0KDQmNCS0JDQotCR0JDQndCawrsxETAPBgNVBAsMCNCQ0KbQodCaMTYwNAYDVQQDDC3QkNCm0KHQmiDQn9CQ0KIg0JrQkSDCq9Cf0KDQmNCS0JDQotCR0JDQndCawrsxFjAUBgNVBAUMDVVBLTE0MzYwNTcwLTExCzAJBgNVBAYTAlVBMScwJQYDVQQHDB7QlNC90ZbQv9GA0L7Qv9C10YLRgNC+0LLRgdGM0LoxKTAnBgNVBAgMINCU0L3RltC/0YDQvtC/0LXRgtGA0L7QstGB0YzQutCwAhQNhO2hu5OB6AQAAABetCIAv7N0ADAMBgoqhiQCAQEBAQIBoIIGLTAYBgkqhkiG9w0BCQMxCwYJKoZIhvcNAQcBMBwGCSqGSIb3DQEJBTEPFw0xODAzMDYxNTA0NDVaMC8GCSqGSIb3DQEJBDEiBCDbHFDhBEQW1QRz8HjgTlCCbFY0v+HqsFVhNFUu5u2T4TCCAbUGCyqGSIb3DQEJEAIvMYIBpDCCAaAwggGcMIIBmDAMBgoqhiQCAQEBAQIBBCAO8oJo2fLbnwbziqmVvvs+Fu0ybvTJsmBixu4EP0TAjjCCAWQwggFKpIIBRjCCAUIxfDB6BgNVBAoMc9Cf0KPQkdCb0IbQp9Cd0JUg0JDQmtCm0IbQntCd0JXQoNCd0JUg0KLQntCS0JDQoNCY0KHQotCS0J4g0JrQntCc0JXQoNCm0IbQmdCd0JjQmSDQkdCQ0J3QmiDCq9Cf0KDQmNCS0JDQotCR0JDQndCawrsxETAPBgNVBAsMCNCQ0KbQodCaMTYwNAYDVQQDDC3QkNCm0KHQmiDQn9CQ0KIg0JrQkSDCq9Cf0KDQmNCS0JDQotCR0JDQndCawrsxFjAUBgNVBAUMDVVBLTE0MzYwNTcwLTExCzAJBgNVBAYTAlVBMScwJQYDVQQHDB7QlNC90ZbQv9GA0L7Qv9C10YLRgNC+0LLRgdGM0LoxKTAnBgNVBAgMINCU0L3RltC/0YDQvtC/0LXRgtGA0L7QstGB0YzQutCwAhQNhO2hu5OB6AQAAABetCIAv7N0ADCCBAcGCyqGSIb3DQEJEAIUMYID9jCCA/IGCSqGSIb3DQEHAqCCA+MwggPfAgEDMQ4wDAYKKoYkAgEBAQECATBrBgsqhkiG9w0BCRABBKBcBFowWAIBAQYKKoYkAgEBAQIDATAwMAwGCiqGJAIBAQEBAgEEINscUOEERBbVBHPweOBOUIJsVjS/4eqwVWE0VS7m7ZPhAgQMlPn1GA8yMDE4MDMwNjE1MDU1NloxggNbMIIDVwIBATCCARMwgfoxPzA9BgNVBAoMNtCc0ZbQvdGW0YHRgtC10YDRgdGC0LLQviDRjtGB0YLQuNGG0ZbRlyDQo9C60YDQsNGX0L3QuDExMC8GA1UECwwo0JDQtNC80ZbQvdGW0YHRgtGA0LDRgtC+0YAg0IbQotChINCm0JfQnjFJMEcGA1UEAwxA0KbQtdC90YLRgNCw0LvRjNC90LjQuSDQt9Cw0YHQstGW0LTRh9GD0LLQsNC70YzQvdC40Lkg0L7RgNCz0LDQvTEZMBcGA1UEBQwQVUEtMDAwMTU2MjItMjAxMjELMAkGA1UEBhMCVUExETAPBgNVBAcMCNCa0LjRl9CyAhQwBHUd7yx4rgIAAAABAAAASgAAADAMBgoqhiQCAQEBAQIBoIIB2jAaBgkqhkiG9w0BCQMxDQYLKoZIhvcNAQkQAQQwHAYJKoZIhvcNAQkFMQ8XDTE4MDMwNjE1MDU1NlowLwYJKoZIhvcNAQkEMSIEIADeo7Z5IE5isRNQ+3NN/zTYUZbjIWCxJdPw63H4cEM3MIIBawYLKoZIhvcNAQkQAi8xggFaMIIBVjCCAVIwggFOMAwGCiqGJAIBAQEBAgEEINkNprZIU8Mtv5e49uVczWrFeVID4phEuuPJ1lYbZ7zqMIIBGjCCAQCkgf0wgfoxPzA9BgNVBAoMNtCc0ZbQvdGW0YHRgtC10YDRgdGC0LLQviDRjtGB0YLQuNGG0ZbRlyDQo9C60YDQsNGX0L3QuDExMC8GA1UECwwo0JDQtNC80ZbQvdGW0YHRgtGA0LDRgtC+0YAg0IbQotChINCm0JfQnjFJMEcGA1UEAwxA0KbQtdC90YLRgNCw0LvRjNC90LjQuSDQt9Cw0YHQstGW0LTRh9GD0LLQsNC70YzQvdC40Lkg0L7RgNCz0LDQvTEZMBcGA1UEBQwQVUEtMDAwMTU2MjItMjAxMjELMAkGA1UEBhMCVUExETAPBgNVBAcMCNCa0LjRl9CyAhQwBHUd7yx4rgIAAAABAAAASgAAADANBgsqhiQCAQEBAQMBAQRAHzpSvoXA50haDgvvHvYN/umJ1WUaZgVtKsTJ2AfICAaQlVPrO+v1nIeX6/KpgtOAu2SN4AWe6dzCfB/09aedYDANBgsqhiQCAQEBAQMBAQRAA4cSEkGh+nTfIz27J2BxCNTO+Jm44SVy+plack1vXjlgGCqYNFu6NVMglvkClreOes6+yEojxb/xaOkX6AgfQQ==
` (string, required)

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`cabinet_person_response`)

### Create Declaration Request online [POST /api/cabinet/declaration_requests]

This method is used to create Declaration Request online (as part of Declaration creation process). Fields descriptions are listed in request Example view.

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

    + Attributes (object)
        + include `Declaration_Request_Online`

+ Response 201 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + seed: hash (string, required)
            + include `Declaration_Request_Public_Response`
            + status: `NEW` (string, required)
            + employee (`Employee_Minimal`, required)
                + speciality: `FAMILY_DOCTOR` (string, required) - інформація про спеціальність лікаря
            + `legal_entity` (`Medical_Service_Provider`, required)
                + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + division (`Division_Declaration`, required)
            + content: `Declaration content` (string, required) - HTML document that MUST be shown to a  - Should be defined on the client side.end-user and signed by hes key.
            + channel: `CABINET` (enum, required) - channel that invoke declaration create service
        + urgent (object, required)
            + `authentication_method_current` (object, required)
                + type: `NA` (enum, required)
                    - OTP
                    - OFFLINE
                    - NA
                + number: `+38093*****85` (string, required)
            + documents (array[`media_content`], optional)

+ Response 422 (application/json)
    + Attributes (`Response_Error`)
        + meta (Response__Meta)
            + code: 422
        + error
            + type: unverified (string, required)
            + message: `Unverified phone number` (string, required)

### Approve declaration request via Cabinet [PATCH /api/cabinet/declaration_requests/{id}/actions/approve]

This method in used to approve declaration request by patient via Cabinet

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - declaration request id

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (`Declaration_Details_Cabinet`)

### Terminate declarations via Cabinet [PATCH /api/cabinet/declarations/{id}/actions/terminate]
Patient can terminate active declaration using this method.

**Scopes required:** `declaration:terminate`

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

    + Attributes (object)
        + reason_description: `Неякісне обслуговування` (string, optional)

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (`Declaration_Details_Cabinet`)

### Get declaration details via Cabinet [GET /api/cabinet/declarations/{id}]

Current WS allows to see details of declaration knowing its' id.

+ Parameters
    + id: 7e9cffd9-c75f-45fb-badf-6e8d20b6a8a8 (uuid)

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Declaration_Details_Cabinet`)

### Get declaration list via Cabinet [GET /api/cabinet/declarations{?status,start_year,page,page_size}]

This WS allows to see history of all patient's declarations and filter them.

+ Parameters
    + status: active (string, optional)
    + start_year: 2018 (string, optional)
    + page: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 300. Default: 50

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array[`Declaration_list_cabinet`])

### Get declaration Request details via Cabinet [GET /api/cabinet/declaration_requests/{id}]

Current WS allows to see details of declaration request knowing its' id.

+ Parameters
    + id: 7e9cffd9-c75f-45fb-badf-6e8d20b6a8a8 (uuid)

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (object)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + seed: hash (string, required)
            + include `Declaration_Request_Public_Response`
            + status: `NEW` (string, required)
            + employee (`Employee_Minimal`, required)
                + speciality: `FAMILY_DOCTOR` (string, required) - інформація про спеціальність лікаря
            + `legal_entity` (`Medical_Service_Provider`, required)
                + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + division (`Division_Declaration`, required)
            + content: `Declaration content` (string, required) - HTML document that MUST be shown to a  - Should be defined on the client side.end-user and signed by hes key.
            + channel: `CABINET` (enum, required) - channel that invoke declaration create service
        + urgent (object, required)
            + `authentication_method_current` (object, required)
                + type: `NA` (enum, required)
                    - OTP
                    - OFFLINE
                    - NA
                + number: `+38093*****85` (string, required)
            + documents (array[`media_content`], optional)

### Get declaration request list via Cabinet [GET /api/cabinet/declaration_requests{?status,start_year,page,page_size}]

This WS allows to see history of all patient's declaration requests and filter them.

+ Parameters
    + status: active (string, optional)
    + start_year: 2018 (string, optional)
    + page: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 300. Default: 50

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array[`Declaration_requests_list_cabinet`])

### Get authentication factor [GET /api/cabinet/authentication_factor]

This WS allows to see 2FA number via Cabinet

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`authentication_factor`)
        

### Get medication request list via Cabinet [GET /api/cabinet/medication_requests{?legal_entity_id,employee_id,person_id,status,request_number,created_from,created_to,medication_id,intent,encounter_id,page,page_size}]

Use this method to obtain list of Medication request an `employee_id` or/and `person_id`. If you want to reduce amount of data that is going trough your application, use `status` filter and show only requests that Doctor is interested in current UI section.

Also we suggest use `employee_id` to make sure that end-user understands context of actions that he or she will perform.

Method returns shortened details, to obtain full information - get Medication request it by it's ID.

+ Parameters
    + `status`: `ACTIVE` (enum, optional). Default `ACTIVE`
        - ACTIVE
        - COMPLETED
        - EXPIRED
        - REJECTED
    + `request_number` : `0000-243P-1X53-EH38` (string, optional) - Public medication request human readable number
    + `created_from`: `2017-08-17` (string, optional) - Medication request creation date period start, which is determined by the external system. Format *DATE '2017-08-17'*
    + `created_to`: `2017-08-30` (string, optional) - Medication request creation date period end, which is determined by the external system. Format *DATE '2017-08-30'*
    + `medication_id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b5b` (string, optional) - innm dosage id
    + intent: order (string, optional) - Medication request intent
    + encounter_id: `8838982b-6a77-4cb5-87cd-cdb82eb55364` (string, optional) - Encounter identifier
    + page: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 300. Default: 50

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
   + Attributes (`Response_Collection_V2`)
        + data (array)
            + (object)
                + include `Medication_request_Public_Response_with_Medical_Program_min`

### Get Medication request by ID via Cabinet [GET /api/cabinet/medication_requests/{id}]

Use this method to obtain full information of Medication request an `id`.

+ Parameters
    + id: `48416485-cc98-46c4-8bba-e321de9e1ecd` (string, required) - `Medication Request identifier OR request_number`

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + meta (Response__Meta)
        + data (object)
            + include `Medication_request_Public_Response_with_Medical_Program_min`
            + verification_code: `1234` (string, required)
            

### Get Medication Dispenses List via Cabinet [GET /api/cabinet/medication_dispenses{?id,medication_request_id,legal_entity_id,division_id,status,dispensed_from,dispensed_to,page,page_size}]

+ Parameters
    + id: `a89f6a26-4221-4597-a1d2-542d5e40b565` (string, optional) - Medication dispense ID
    + medication_request_id: `a89f6a26-4221-4597-a1d2-542d5e40b565` (string, optional) - Medication request ID
    + legal_entity_id: `a89f6a26-4221-4597-a1d2-542d5e40b565` (string, optional) - Legal entity ID
    + division_id: `a89f6a26-4221-4597-a1d2-542d5e40b565` (string, optional) - Division ID
    + status: PROCESSED (string, optional) - Status
    + dispensed_from: '2017-09-01' (string, optional) - date of dispense
    + dispensed_to: '2017-10-01' (string, optional) - date of dispense
    + page: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 300. Default: 50


+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array)
            + (object)
                + include `Medication_Dispense_Response_without_2d_codes`

### Get Medication Dispense by ID [GET /api/cabinet/medication_dispenses/{id}]

+ Parameters
    + `id`: `a89f6a26-4221-4597-a1d2-542d5e40b565` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (object)
            + include `Medication_Dispense_Response_without_2d_codes`
            

### Get monitoring Justifications [GET /api/cabinet/justifications{?status,expires_from,expires_to,page,page_size}]
Use this method to get information about justification for monitoring patient's personal and medical data by NHS employees (not medical employees as doctors)

+ Parameters
    + status: active (enum, optional) - Status
      - active
      - terminated
    + `expires_from`: `2017-09-01` (string, optional) - date when justification expires
    + `expires_to`: `2022-10-01` (string, optional) - date when justification expires
    + page: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 300. Default: 50


+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array)
            + (object)
                + include `Justification_Response`

# Group Public. Contracts

Note: In the new version of API contracts(relese TBD) will be divided into two types - capitation and reimbursement. Each type will be managed by its own route. The type of the contract should be declared in the URL like this:
```
/api/contract_requests/capitation
/api/contract_requests/reimbursement
```
If contract_type is not defined in the URL it counts as a capitation contract.

## Contract request [/api/contract_requests]

###Business logic
In order to create a new contract or update an existing contract, legal entity owner should create a contract request first. The contract request should be approved by both sides - Medical Service Provider(MSP) and National Health Service(NHS), and than signed by both sides as well. After that a new contract will be created or an existing contract will be updated.
The detailed flow is described in a schema below:

[Confluence: Status Chart](https://e-health-ua.atlassian.net/wiki/spaces/EH/pages/583402826/Status+Chart)

![Contract request flow](https://www.websequencediagrams.com/cgi-bin/cdraw?lz=dGl0bGUgQ29udHJhY3QgcmVxdWVzdHMKCnBhcnRpY2lwYW50IE1TUCBhcyBtc3AACg1lSGVhbHRoIGFzIGVoAAYFACkNRG9jdW1lbnQgc3RvcmFnZSBhcwADCABRDU5IUyBhcyBuaHMKCm1zcC0-AEYHOiA8PEluaXRpYWxpemUgYwCBFQ8-PgoAbwcAJwtHZW5lcmF0ZSBVUkxzABYKbXNwOiA8PFJlc3BvbnNlIHdpdGggaWQgYW5kACUFPj4AdAYAgSMHOiBVcGxvYWQgZACBPAdzAIETBgBCBVNpZ24AfBEgdXNpbmcgZGlnaXRhbCBzaWduYXR1cmUgAIFBEUNyZWF0AIE5FW5ocwCBbw1HZXQAgWQRcyBsaQAEKSBkZXRhaWxzPj4KCmFsdCBBcHByb3YAgjgSCiAgICAAbhBVcGQAgREXACUJbmhzAIFgLwBVFQCAfxggYnkgTkhTPj4KZWxzZSBEZWNsaW4AgSIcAElHAFEYPj4KZW5kIACFExIAgwwdAAkkAIMeCwCFcRAAggEcTVNQAINiKHByaW50b3UAhEsGZW4AhGYJAIMQMwCFFxAAhXoWAIMzCQCBTDQAhn4JRG93bgCHBAUAiQkFYWxseQCGVgVlZACFMhIAhxIPABgZXG4AhysIAIgABTJuZACFFAsAiG8QAIFDGQCCdQYKb3B0IFRlcm1pbgCHQBQAhlMFAIlCEAAVGgCDSQplbmQK&s=modern-blue)

Using this API could be created both reimbursement and capitation contracts.
### Public. Initialize Contract Request [POST /api/contract_requests/{contract_type}]

***Scope  contract_request:create***

This web service allows to initialize contract request creation by generating links for contract request documents upload.

+ Parameters
    + `contract_type`: `reimbursement`(string, optional) - type of contract {DICTIONARY CONTRACT_TYPE}

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + data (object)
            + include `Init_contract_request_response`



### Public. Create Contract Request [POST /api/contract_requests/{contract_type}/{id}]

***Scope  contract_request:create***

This web service allows to create contract request, using contract_request_id, generated by Initialize Contract Request WS.
As an input parameters should be transfered signed data in PKCS7 format. Digital signiture should be applied to data filled by legal entity owner and MD5 HASH of provided files (statuste and equipment agreement).
In DS EDRPOU/DRFO must be equal to contractor_legal_entity.edrpou
#### Contract_request object scheme to be signed
The following tables describes contract_request object fields and it`s child objects.

There are two types of schemas depending on contract_type - capitation version and reimbursement version
For reimbursement version only documents are optional.ci
#####Capitation Contract_request

Attribute |Is required| Description
----------|-----------|-------------
contractor_owner_id|true| підписант, зі сторони мед. закладу
contractor_base|true| на якій підставі діє підписант: закон/домовленість
contractor_payment_details|true| об'єкт, що містить дані по рахунку, на який будуть здійснюватися виплати
previous_request_id | false | опційне поле, яке вказує, що поточний запит на контракт є новою версією вказаного запиту
contractor_divisions|true| масив id відділень мед. закладу, що включаються в договір
external_contractor_flag|false| наявність додатку 2 (підрядники, залучені до надання медичних послуг за Договором)
external_contractors|false|масив об'єктів типу external_contractor objects - підрядники, залучені до надання медичних послуг за Договором
start_date|false| пункт 9.2 - цей договір діє з (рік має бути поточний або настпуний)
end_date|false| пункт 9.2 - цей договір діє по (рік має співпадати з роком у start_date або бути наступним за роком start_date за умови, що договір укладається строком на рік)
id_form|true| словник `CONTRACT_TYPE`, поки що лише один вид Договір на ПМД
contract_number|false| human-redable номер контракту
statute_md5|true| хеш завантаженого документу (статуту)
additional_document_md5|true| хеш завантаженого документу (додатковий документ)
consent_text|true|

#####Reimbursement Contract_request

Attribute |Is required| Description
----------|-----------|-------------
contractor_owner_id|true| підписант, зі сторони мед. закладу
contractor_base|true| на якій підставі діє підписант: закон/домовленість
contractor_payment_details|true| об'єкт, що містить дані по рахунку, на який будуть здійснюватися виплати
previous_request_id | false | опційне поле, яке вказує, що поточний запит на контракт є новою версією вказаного запиту
start_date|false| пункт 9.2 - цей договір діє з (рік має бути поточний або настпуний)
end_date|false| пункт 9.2 - цей договір діє по (рік має співпадати з роком у start_date або бути наступним за роком start_date за умови, що договір укладається строком на рік)
id_form|true| словник `REIMBURSEMENT_CONTRACT_TYPE`
contract_number|false| human-redable номер контракту
statute_md5|false| хеш завантаженого документу (статуту)o
additional_document_md5|false| хеш завантаженого документу (додатковий документ)
medical_programs|true| масив ідентифікаторів державних програми компенсації, що є субєктом договору
consent_text|true|

####Contractor_payment_details
Attribute |Is required| Description
----------|-----------|-------------
bank_name|false| назва банку
MFO|false| МФО
payer_account|true| розрахунковий рахунок або міжнародний номер рахунку
####Contractor_employee_division
Attribute |Is required| Description
----------|-----------|------------
employee_id|true| id запис про медичного працівника в системі
staff_units|true| штатна одиниця
declaration_limit|true| максимальна к-сть пацієнтів, які можуть подати декларації про вибір такого лікаря за Договором
division_id|true| місце надання медичних послуг пов'язаниз з ПМД (підмножина contractor_divisions)
####External_contractors
Attribute |Is required| Description
----------|-----------|----------
legal_entity_id|true| запис про надавача з системи
contract|true| договір з Підрядником
divisions|true| масив об'єктів типу Division, що зберігає запис про Місце надання медичних послуг з Системи та послугу
####Contract
Attribute |Is required| Description
----------|-----------|------------
number|true| номер договору з Підрядником
issued_at|true| дата укладення договору з Підрядником
expires_at|true| строк дії договору з Підрядником
####Division
Attribute |Is required| Description
----------|-----------|------------
id|true| запис про Місце надання медичних послуг з Системи
medical_service|true| послуга, що надається на відділені (словник `medical_service`)

####Business ruels

1. Create new or update existsing contract

    > 1.1 In order to create new contract, contract_number should be empty, start_date and end_date should be filled.

    > 1.2 In order to update existing contract, contract_number should be filled, start_date and end_date should be empty. Existing contract must be in `VERIFIED` status.

2. External contractors

    > 2.1 In case you have external_contractors - external_contractors_flag should be set as TRUE and external_contractors array must be provided (filled).

    > 2.2 In case you don't have external_contractors - external_contractors_flag should be set as FALSE and external_contractors array must empty.

####JSON example
Capitation version:
```
{
  "contractor_owner_id": "df9f70ee-4b12-4740-b0f5-bb5aea116863",
  "contractor_base": "на підставі статуту",
  "previous_request_id": "df9f70ee-4b12-4740-b0f5-bb5aea116863",
  "contractor_payment_details": {
    "payer_account": "UA3412345678901234567890",
    "bank_name": "Банк №1"
  },
  "contractor_divisions": [
    "adeac295-0d39-4a8e-8e16-9526787de3f1"
  ],
  "external_contractor_flag": true,
   "external_contractors": [
    {
      "legal_entity_id": "443e901e-b365-45d2-be14-083ee0aba657",
      "contract": {
        "number": "1234567",
        "issued_at": "2018-01-01",
        "expires_at": "2019-01-01"
      },
      "divisions": [
        {
          "id": "2922a240-63db-404e-b730-09222bfeb2dd",
          "medical_service": "PHC_SERVICES"
        }
      ]
    }
  ],
  "start_date": "2017-04-20",
  "end_date": "2017-04-20",
  "id_form": "PMD_1",
  "contract_number": "0000-9EAX-XT7X-3115",
  "statute_md5": "db218b04eff70f86f40c1572ce8ca16a",
  "additional_document_md5": "ac642b04eff40f86f40c1572ce8ca16a",
  "consent_text": "Цією заявою Заявник висловлює бажання укласти договір про медичне обслуговування населення за програмою державних гарантій медичного обслуговування населення (далі – Договір) на умовах, визначених в оголошенні про укладення договорів про медичне обслуговування населення (далі – Оголошення). Заявник підтверджує, що: 1. на момент подання цієї заяви Заявник має чинну ліцензію на провадження господарської діяльності з медичної практики та відповідає ліцензійним умовам з медичної практики; 2. Заявник надає медичні послуги, пов’язані з первинною медичною допомогою (далі – ПМД); 3. Заявник зареєстрований в електронній системі охорони здоров’я (далі – Система); 4. уповноважені особи та медичні працівники, які будуть залучені до виконання Договору, зареєстровані в Системі та отримали електронний цифровий підпис (далі – ЕЦП); 5. в кожному місці надання медичних послуг Заявника наявне матеріально-технічне оснащення, передбачене розділом І Примірного табелю матеріально-технічного оснащення закладів охорони здоров’я та фізичних осіб – підприємців, які надають ПМД, затвердженого наказом Міністерства охорони здоров’я України від 26 січня 2018 року № 148; 6. установчими або іншими документами не обмежено право керівника Заявника підписувати договори від імені Заявника без попереднього погодження власника. Якщо таке право обмежено, у тому числі щодо укладання договорів, ціна яких перевищує встановлену суму, Заявник повідомить про це Національну службу здоров’я та отримає необхідні погодження від власника до моменту підписання договору зі сторони Заявника; 7. інформація, зазначена Заявником у цій Заяві та доданих до неї документах, а також інформація, внесена Заявником (його уповноваженими особами) до Системи, є повною та достовірною. Заявник усвідомлює, що у разі зміни інформації, зазначеної Заявником у цій заяві та (або) доданих до неї документах Заявник зобов’язаний повідомити про такі зміни НСЗУ протягом трьох робочих днів з дня настання таких змін шляхом надсилання інформації про такі зміни на електронну пошту dohovir@nszu.gov.ua, з одночасним внесенням таких змін в Систему. Заявник усвідомлює, що законодавством України передбачена відповідальність за подання недостовірної інформації органам державної влади."
}
```
Reimbursement version:
```
{
  "contractor_owner_id": "df9f70ee-4b12-4740-b0f5-bb5aea116863",
  "contractor_base": "на підставі статуту",
  "previous_request_id": "df9f70ee-4b12-4740-b0f5-bb5aea116863",
  "contractor_payment_details": {
    "payer_account": "UA3412345678901234567890",
    "bank_name": "Банк №1"
  },
  "start_date": "2019-04-20",
  "end_date": "2020-04-19",
  "id_form": "PMD_1",
  "contract_number": "0000-9EAX-XT7X",
  "statute_md5": "db218b04eff70f86f40c1572ce8ca16a",
  "additional_document_md5": "ac642b04eff40f86f40c1572ce8ca16a",
  "medical_programs": [
    "3922a240-63db-404e-b730-09222bfeb2d1"
  ]
  "consent_text": "Цією заявою Заявник висловлює бажання укласти договір про реімбурсацію з Національною службою здоров'я України та підтверджує, що на момент подання цієї заяви Заявник провадить господарську діяльність на підставі ліцензії на провадження господарської діяльності з роздрібної торгівлі лікарськими засобами та відповідає ліцензійним умовам. Заявник усвідомлює, що у разі зміни інформації, зазначеної Заявником у цій заяві та (або) доданих до неї документах Заявник зобов'язаний повідомити про такі зміни НСЗУ протягом трьох робочих днів з дня настання таких змін шляхом надсилання інформації про такі зміни на електронну пошту dohovir@nszu.gov.ua, з одночасним внесенням таких змін в Систему. Заявник усвідомлює, що законодавством України передбачена відповідальність за подання недостовірної інформації органам державної влади."
}
```


+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

    + Attributes (object)
        + include `Contract_request_Request_signed`

+ Response 201 (application/json)
    + Attributes (`Response__Process_OK`)
        + data (object)
            + include `Contract_request_Details_Capitation`

+ Response 201 (application/json)
    + Attributes (`Response__Process_OK`)
        + data (object)
            + include `Contract_request_Details_Reimbursement`

### Public. Get Contract Requests list [GET /api/contract_requests/{contract_type}/{?id,contractor_legal_entity_id,edrpou,contractor_owner_id,nhs_signer_id,issue_city,status,contract_number,medical_program_id,page,page_size}]

***Scope  contract_request:read***

This method is designed to obtain list of contract request with filters. This method returns shorten information about contract request, in order to see all information try to use 'get contract request details'

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, optional) - id of contract request
    + contractor_legal_entity_id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, optional) - id of legal entity which created contract request.
    + contractor_owner_id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, optional) - id of legal entity owner.
    + `nhs_signer_id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, optional) - id of nhs employee
    + issue_city: `КИЇВ` (string, optional) - contract request place
    + edrpou: `12345678` (string, optional) - legal entity edrpou
    + status: `NEW` (enum, optional) - current status on contract request.
        - NEW
        - IN_PROCESS
        - APPROVED
        - DECLINED
        - TERMINATED
        - `PENDING_NHS_SIGN`
        - NHS_SIGNED
        - SIGNED
    + contract_number: `0000-9EAX-XT7X-3115` (string, optional) - human readable number of contract request.
    + medical_program_id: `2075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, optional) - id of a program that is a subject of contract
    + page: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 300. Default: 50

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array[`Contract_request_list_capitation`])
+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array[`Contract_request_list_reimbursement`])



### Public. Get Contract Request Details [GET /api/contract_requests/{contract_type}/{id}]

***Scope  contract_request:read***

This method is designed to get full information of contract request by id

+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - contract request identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + data (object)
            + include `Contract_request_Details_Capitation`
        + urgent (object, required)
            + documents (array[`contract_media_content`], optional)

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + data (object)
            + include `Contract_request_Details_Reimbursement`
        + urgent (object, required)
            + documents (array[`contract_media_content`], optional)

### Private. Create Contract Request by NHS [POST /api/contract_requests/{contract_type}/{id}]

***Scope  contract_request:create***

This WS is designed to update contract by NHS by creating new contract request. 
Contract request is created with contract number, and parent contract is added to request. 
NHS Admin can change only fields that are on nhs side.

Request has a similar structure as in `Public. Create Contract Request`.
For Create contract request by NHS, the `contract_number` in the request is required, it is used to change the existing contract by the NHS.

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

    + Attributes (object)
        + include `Contract_request_Request_signed`

+ Response 201 (application/json)
    + Attributes (`Response__Process_OK`)
        + data (object)
            + include `Contract_request_Details_Capitation`

+ Response 201 (application/json)
    + Attributes (`Response__Process_OK`)
        + data (object)
            + include `Contract_request_Details_Reimbursement`

### Private. Assign Contract Request by NHS Employee [PATCH /api/contract_requests/{id}/actions/assign]

***Scope  contract_request:update***

This WS is designed for NHS employees. Before rewieving contract request it must be assign to NHS employee who will be responsible for this request.
To assign employee contract it must be in status NEW, IN_RPOCESS.
After assigner was updated, contract request status will be changed to `IN_RPOCESS`.

+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - contract request identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

    + Attributes (object)
        + employee_id:  `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, required) -

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + data (object)
            + include `Contract_request_Details_Capitation`

### Private. Update Contract Request by NHS Signer [PATCH /api/contract_requests/{id}]

***Scope  contract_request:update***

This WS is designed to enrich conract request with information from NHS side. NHS Signer can change only contract requests in status IN_PROCESS. NHS Signer can add only information from his side.
In case of reimbursement contract, nhs_contract_price shouldn`t be filled.
+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - contract request identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

    + Attributes (object)
        + include `Contract_request_Update`

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + data (object)
            + include `Contract_request_Details_Capitation`

### Private. Approve Contract Request by NHS [PATCH /api/contract_requests/{id}/actions/approve]

***Scope  contract_request:update***

This WS is designed to approve contract request by NHS. Contract request only in status IN_RPOCESS could be approved.

To approve contract next fields must be signed by NHS employee and sent by same NHS employee in base64 format (all fields below are required):
In DS EDRPOU/DRFO must be equal to contractor_legal_entity.edrpou


to_approve content for Capitation contract type
```
{
"id":"09106b70-18b0-4726-b0ed-6bda1369fd52",
"contractor_legal_entity": {
      "id": "df9f70ee-4b12-4740-b0f5-bb5aea116863",
      "name": "Клініка Ноунейм",
      "edrpou": "32323454"
    },
"next_status": "APPROVED",
"text": "consent_text"
}
```

to_approve content for Reimbursement contract type
```
{
"id":"09106b70-18b0-4726-b0ed-6bda1369fd52",
"contractor_legal_entity": {
      "id": "df9f70ee-4b12-4740-b0f5-bb5aea116863",
      "name": "Аптека Ноунейм",
      "edrpou": "32323454"
    },
"next_status": "PENDING_NHS_SIGN",
"text": "consent_text"
}
```

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

    + Attributes (object)
        + `signed_content`: `ew0KImlkIjoiMDkxMDZiNzAtMThiMC00NzI2LWIwZWQtNmJkYTEzNjlmZDUyIiwNCiJjb250cmFjdG9yX2xlZ2FsX2VudGl0eSI6IHsNCiAgICAgICJpZCI6ICJkZjlmNzBlZS00YjEyLTQ3NDAtYjBmNS1iYjVhZWExMTY4NjMiLA0KICAgICAgIm5hbWUiOiAi0JrQu9GW0L3RltC60LAg0J3QvtGD0L3QtdC50LwiLA0KICAgICAgImVkcnBvdSI6ICIzMjMyMzQ1NCINCiAgICB9LA0KInRleHQiOiAic3RhdGljX3RleHQiDQp9`(string, required)
        + `signed_content_encoding`: `base64` (string, required)

+ Response 201 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + include `Contract_request_Details_Capitation`
+ Response 201 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + include `Contract_request_Details_Reimbursement`


### Private. Decline Contract Request by NHS [PATCH /api/contract_requests/{id}/actions/decline]

***Scope  contract_request:update***

This WS is designed to decline contract request by NHS. Contract request only in status IN_RPOCESS could be declined.
To decline contract next fields must be signed by NHS employee and sent by same NHS employee in base64 format (all fields below are required):
In DS EDRPOU/DRFO must be equal to contractor_legal_entity.edrpou

```
{
"id":"09106b70-18b0-4726-b0ed-6bda1369fd52",
"contractor_legal_entity": {
      "id": "df9f70ee-4b12-4740-b0f5-bb5aea116863",
      "name": "Клініка Ноунейм",
      "edrpou": "32323454"
    },
"next_status": "DECLINED",
"status_reason": "Не відповідає попереднім домовленостям",
"text": "consent_text"
}
```


+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

    + Attributes (object)
        + `signed_content`: `ew0KImlkIjoiMDkxMDZiNzAtMThiMC00NzI2LWIwZWQtNmJkYTEzNjlmZDUyIiwNCiJjb250cmFjdG9yX2xlZ2FsX2VudGl0eSI6IHsNCiAgICAgICJpZCI6ICJkZjlmNzBlZS00YjEyLTQ3NDAtYjBmNS1iYjVhZWExMTY4NjMiLA0KICAgICAgIm5hbWUiOiAi0JrQu9GW0L3RltC60LAg0J3QvtGD0L3QtdC50LwiLA0KICAgICAgImVkcnBvdSI6ICIzMjMyMzQ1NCINCiAgICB9LA0KInN0YXR1c19yZWFzb24iOiAi0J3QtSDQstGW0LTQv9C+0LLRltC00LDRlCDQv9C+0L/QtdGA0LXQtNC90ZbQvCDQtNC+0LzQvtCy0LvQtdC90L7RgdGC0Y/QvCINCiJ0ZXh0IjogInN0YXRpY190ZXh0Ig0KfQ==`(string, required)
        + `signed_content_encoding`: `base64` (string, required)

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + include `Contract_request_Details_Capitation`

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + include `Contract_request_Details_Reimbursement`

### Public. Approve Contract Request by MSP [PATCH /api/contract_requests/{contract_type}/{id}/actions/approve_msp]

***Scope  contract_request:approve***

This WS is designed to approve contract request by MSP side after it was approved by NHS side.
Contract request only in status APPROVED can be approved by MSP and as a result status changes to 'PENDING_NHS_SIGN'.
Only after that NHS employee can sign the contract request.

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9


+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + include `Contract_request_Details_Capitation`
+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + include `Contract_request_Details_Reimbursement`

### Public. Terminate Contract Request by MSP [PATCH /api/contract_requests/{contract_type}/{id}/actions/terminate]

***Scope  contract_request:terminate***

This WS is designed to terminate contract request by contractor. Contract request can't be in status='SIGNED'

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

    + Attributes (object)
        + `status_reason`: `Неправильний період контракту`(string, optional) - the reason of terminated status

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + include `Contract_request_Details_Reimbursement`

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + include `Contract_request_Details_Capitation`

### Public. Get Contract Request Printout Content [GET /api/contract_requests/{contract_type}/{id}/printout_content]

***Scope  contract_request:read***

This method is designed to get printout content by contract request id. In order to sign contract it's need to invoke
Get Contract Request Details and Get Contract Request Printout Content and sign whole data.

+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - contract request identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + data (object)
            + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - contract request identifier
            + `printout_content`: `Contract request content` (string, required) - HTML document for contract request, is shown contract request in status 'PENDING_NHS_SIGN'



### Private. Sign Contract Request by NHS [PATCH /api/contract_requests/{id}/actions/sign_nhs]

***Scope  contract_request:sign***

This WS is designed to sign contract request from NHS side. Contract request's status must be ='PENDING_NHS_SIGN'.
Method receives signed message (pkcs7) including signed content, digital signature, digital stamp and signer public key in signed_content property.
All signature fields will be validated (including signer certificate authority).This service will store signed copy of Contract Request in Media Content Storage. Signed content MUST consists of JSON object with Contract Request data and printout template.
Object that need to be signed is returned by [Get Contract request details](https://uaehealthapi.docs.apiary.io/#reference/public.-contracts/contract-request/public.-get-contract-request-details) response, JSON.Path: $.data.
data.prinout content must be changed to Print out content taken from [Get Contract Request Printout Content](https://uaehealthapi.docs.apiary.io/#reference/public.-contracts/contract-request/public.-get-contract-request-printout-content)

In DS EDRPOU/DRFO must be equal to contractor_legal_entity.edrpou

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

    + Attributes (object)
        + `signed_content`: `ewogICJpZCI6ICIwOTEwNmI3MC0xOGIwLTQ3MjYtYjBlZC02YmRhMTM2OWZkNTIiLAogICJjb250cmFjdG9yX2xlZ2FsX2VudGl0eSI6IHsKICAgICJpZCI6ICJkZjlmNzBlZS00YjEyLTQ3NDAtYjBmNS1iYjVhZWExMTY4NjMiLAogICAgIm5hbWUiOiAi0JrQu9GW0L3RltC60LAg0J3QvtGD0L3QtdC50LwiLAogICAgImVkcnBvdSI6ICIzMjMyMzQ1NCIsCiAgICAiYWRkcmVzc2VzIjogWwogICAgICB7CiAgICAgICAgInR5cGUiOiAiUkVTSURFTkNFIiwKICAgICAgICAiY291bnRyeSI6ICJVQSIsCiAgICAgICAgImFyZWEiOiAi0JbQuNGC0L7QvNC40YDRgdGM0LrQsCIsCiAgICAgICAgInJlZ2lvbiI6ICLQkdC10YDQtNC40YfRltCy0YHRjNC60LjQuSIsCiAgICAgICAgInNldHRsZW1lbnQiOiAi0JrQuNGX0LIiLAogICAgICAgICJzZXR0bGVtZW50X3R5cGUiOiAiQ0lUWSIsCiAgICAgICAgInNldHRsZW1lbnRfaWQiOiAiNDM0MzI0MzIiLAogICAgICAgICJzdHJlZXRfdHlwZSI6ICJTVFJFRVQiLAogICAgICAgICJzdHJlZXQiOiAi0LLRg9C7LiDQndGW0LbQuNC90YHRjNC60LAiLAogICAgICAgICJidWlsZGluZyI6ICIxNSIsCiAgICAgICAgImFwYXJ0bWVudCI6ICIyMyIsCiAgICAgICAgInppcCI6ICIwMjA5MCIKICAgICAgfQogICAgXQogIH0sCiAgImNvbnRyYWN0b3Jfb3duZXIiOiB7CiAgICAiaWQiOiAiYjA3NWYxNDgtN2Y5My00ZmMyLWIyZWMtMmQ4MWIxOWE5YjdiIiwKICAgICJmaXJzdF9uYW1lIjogItCf0LXRgtGA0L4iLAogICAgImxhc3RfbmFtZSI6ICLQhtCy0LDQvdC+0LIiLAogICAgInNlY29uZF9uYW1lIjogItCc0LjQutC+0LvQsNC50L7QstC40YciCiAgfSwKICAiY29udHJhY3Rvcl9iYXNlIjogItC90LAg0L/RltC00YHRgtCw0LLRliDQt9Cw0LrQvtC90YMg0L/RgNC+INCc0LXQtNC40YfQvdC1INC+0LHRgdC70YPQs9C+0LLRg9Cy0LDQvdC90Y8g0L3QsNGB0LXQu9C10L3QvdGPIiwKICAiY29udHJhY3Rvcl9wYXltZW50X2RldGFpbHMiOiB7CiAgICAiYmFua19uYW1lIjogItCR0LDQvdC6INC90L7QvNC10YAgMSIsCiAgICAiTUZPIjogIjM1MTAwNSIsCiAgICAicGF5ZXJfYWNjb3VudCI6ICIzMjAwOTEwMjcwMTAyNiIKICB9LAogICJjb250cmFjdG9yX3Jtc3BfYW1vdW50IjogNTAwMDAsCiAgImV4dGVybmFsX2NvbnRyYWN0b3JfZmxhZyI6IHRydWUsCiAgImV4dGVybmFsX2NvbnRyYWN0b3JzIjogewogICAgImxlZ2FsX2VudGl0eSI6IHsKICAgICAgImlkIjogImIwNzVmMTQ4LTdmOTMtNGZjMi1iMmVjLTJkODFiMTlhOWI3YiIsCiAgICAgICJuYW1lIjogItCa0LvRltC90ZbQutCwINCd0L7Rg9C90LXQudC8IgogICAgfSwKICAgICJjb250cmFjdCI6IHsKICAgICAgIm51bWJlciI6ICIxMjM0NTY3IiwKICAgICAgImlzc3VlZF9hdCI6ICIyMDE4LTAxLTAxIiwKICAgICAgImV4cGlyZXNfYXQiOiAiMjAxOS0wMS0wMSIKICAgIH0sCiAgICAiZGl2aXNpb25zIjogWwogICAgICB7CiAgICAgICAgImlkIjogIjI5MjJhMjQwLTYzZGItNDA0ZS1iNzMwLTA5MjIyYmZlYjJkZCIsCiAgICAgICAgIm5hbWUiOiAi0JHQvtGA0LjRgdC/0ZbQu9GM0YHRjNC60LUg0LLRltC00LTRltC70LXQvdC90Y8g0JrQu9GW0L3RltC60Lgg0J3QvtGD0L3QtdC50LwiLAogICAgICAgICJtZWRpY2FsX3NlcnZpY2UiOiAi0J/QvtGB0LvRg9Cz0LAg0J/QnNCUIgogICAgICB9CiAgICBdCiAgfSwKICAiY29udHJhY3Rvcl9lbXBsb3llZV9kaXZpc2lvbnMiOiBbCiAgICB7CiAgICAgICJlbXBsb3llZV9pZCI6IHsKICAgICAgICAiaWQiOiAiYjA3NWYxNDgtN2Y5My00ZmMyLWIyZWMtMmQ4MWIxOWE5YjdiIiwKICAgICAgICAiZmlyc3RfbmFtZSI6ICLQn9C10YLRgNC+IiwKICAgICAgICAibGFzdF9uYW1lIjogItCG0LLQsNC90L7QsiIsCiAgICAgICAgInNlY29uZF9uYW1lIjogItCc0LjQutC+0LvQsNC50L7QstC40YciLAogICAgICAgICJzcGVjaWFsaXRpZXMiOiBbCiAgICAgICAgICB7CiAgICAgICAgICAgICJzcGVjaWFsaXR5IjogIlRIRVJBUElTVCIsCiAgICAgICAgICAgICJzcGVjaWFsaXR5X29mZmljaW8iOiB0cnVlLAogICAgICAgICAgICAibGV2ZWwiOiAiRklSU1QiLAogICAgICAgICAgICAicXVhbGlmaWNhdGlvbl90eXBlIjogIkFXQVJESU5HIiwKICAgICAgICAgICAgImF0dGVzdGF0aW9uX25hbWUiOiAi0JDQutCw0LTQtdC80ZbRjyDQkdC+0LPQvtC80L7Qu9GM0YbRjyIsCiAgICAgICAgICAgICJhdHRlc3RhdGlvbl9kYXRlIjogIjIwMTciLAogICAgICAgICAgICAidmFsaWRfdG9fZGF0ZSI6ICIyMDIwIiwKICAgICAgICAgICAgImNlcnRpZmljYXRlX251bWJlciI6ICJBQi8yMTMzMSIKICAgICAgICAgIH0KICAgICAgICBdCiAgICAgIH0sCiAgICAgICJzdGFmZl91bml0cyI6IDAuNSwKICAgICAgImRlY2xhcmF0aW9uX2xpbWl0IjogMjAwMCwKICAgICAgImRpdmlzaW9uIjogewogICAgICAgICJpZCI6ICIyOTIyYTI0MC02M2RiLTQwNGUtYjczMC0wOTIyMmJmZWIyZGQiLAogICAgICAgICJuYW1lIjogItCR0L7RgNC40YHQv9GW0LvRjNGB0YzQutC1INCy0ZbQtNC00ZbQu9C10L3QvdGPINCa0LvRltC90ZbQutC4INCd0L7Rg9C90LXQudC8IiwKICAgICAgICAiYWRkcmVzc2VzIjogWwogICAgICAgICAgewogICAgICAgICAgICAidHlwZSI6ICJSRVNJREVOQ0UiLAogICAgICAgICAgICAiY291bnRyeSI6ICJVQSIsCiAgICAgICAgICAgICJhcmVhIjogItCW0LjRgtC+0LzQuNGA0YHRjNC60LAiLAogICAgICAgICAgICAicmVnaW9uIjogItCR0LXRgNC00LjRh9GW0LLRgdGM0LrQuNC5IiwKICAgICAgICAgICAgInNldHRsZW1lbnQiOiAi0JrQuNGX0LIiLAogICAgICAgICAgICAic2V0dGxlbWVudF90eXBlIjogIkNJVFkiLAogICAgICAgICAgICAic2V0dGxlbWVudF9pZCI6ICI0MzQzMjQzMiIsCiAgICAgICAgICAgICJzdHJlZXRfdHlwZSI6ICJTVFJFRVQiLAogICAgICAgICAgICAic3RyZWV0IjogItCy0YPQuy4g0J3RltC20LjQvdGB0YzQutCwIiwKICAgICAgICAgICAgImJ1aWxkaW5nIjogIjE1IiwKICAgICAgICAgICAgImFwYXJ0bWVudCI6ICIyMyIsCiAgICAgICAgICAgICJ6aXAiOiAiMDIwOTAiCiAgICAgICAgICB9CiAgICAgICAgXSwKICAgICAgICAicGhvbmVzIjogWwogICAgICAgICAgewogICAgICAgICAgICAidHlwZSI6ICJNT0JJTEUiLAogICAgICAgICAgICAibnVtYmVyIjogIiszODA1MDM0MTA4NzAiCiAgICAgICAgICB9CiAgICAgICAgXSwKICAgICAgICAiZW1haWwiOiAiZW1haWxAZXhhbXBsZS5jb20iLAogICAgICAgICJ3b3JraW5nX2hvdXJzIjogewogICAgICAgICAgIm1vbiI6IFsKICAgICAgICAgICAgWwogICAgICAgICAgICAgICIwOC4wMCIsCiAgICAgICAgICAgICAgIjEyLjAwIgogICAgICAgICAgICBdLAogICAgICAgICAgICBbCiAgICAgICAgICAgICAgIjE0LjAwIiwKICAgICAgICAgICAgICAiMTguMDAiCiAgICAgICAgICAgIF0KICAgICAgICAgIF0sCiAgICAgICAgICAidHVlIjogWwogICAgICAgICAgICBbCiAgICAgICAgICAgICAgIjA4LjAwIiwKICAgICAgICAgICAgICAiMTIuMDAiCiAgICAgICAgICAgIF0KICAgICAgICAgIF0sCiAgICAgICAgICAid2VkIjogWwogICAgICAgICAgICBbCiAgICAgICAgICAgICAgIjA4LjAwIiwKICAgICAgICAgICAgICAiMTIuMDAiCiAgICAgICAgICAgIF0KICAgICAgICAgIF0sCiAgICAgICAgICAidGh1IjogWwogICAgICAgICAgICBbCiAgICAgICAgICAgICAgIjA4LjAwIiwKICAgICAgICAgICAgICAiMTIuMDAiCiAgICAgICAgICAgIF0KICAgICAgICAgIF0sCiAgICAgICAgICAiZnJpIjogWwogICAgICAgICAgICBbCiAgICAgICAgICAgICAgIjA4LjAwIiwKICAgICAgICAgICAgICAiMTIuMDAiCiAgICAgICAgICAgIF0KICAgICAgICAgIF0sCiAgICAgICAgICAic2F0IjogW10sCiAgICAgICAgICAic3VuIjogW10KICAgICAgICB9LAogICAgICAgICJtb3VudGFpbl9ncm91cCI6IGZhbHNlCiAgICAgIH0KICAgIH0KICBdLAogICJpZF9mb3JtIjogIjUiLAogICJuaHNfc2lnbmVyX2Jhc2UiOiAi0L3QsCDQv9GW0LTRgdGC0LDQstGWINC90LDQutCw0LfRgyIsCiAgIm5oc19jb250cmFjdF9wcmljZSI6IDUwMDAwLAogICJuaHNfcGF5bWVudF9tZXRob2QiOiAicHJlcGF5bWVudCIsCiAgIm5oc19wYXltZW50X2RldGFpbHMiOiB7CiAgICAiYmFua19uYW1lIjogItCR0LDQvdC6INC90L7QvNC10YAgMSIsCiAgICAiTUZPIjogIjM1MTAwNSIsCiAgICAicGF5ZXJfYWNjb3VudCI6ICIzMjAwOTEwMjcwMTAyNiIKICB9LAogICJzdGF0dXMiOiAiTkVXIiwKICAic3RhdHVzX3JlYXNvbiI6ICLQndC1INCy0ZbQtNC/0L7QstGW0LTQsNGUINC/0L7Qv9C10YDQtdC00L3RltC8INC00L7QvNC+0LLQu9C10L3QvtGB0YLRj9C8IiwKICAibmhzX3NpZ25lciI6IHsKICAgICJpZCI6ICJiMDc1ZjE0OC03ZjkzLTRmYzItYjJlYy0yZDgxYjE5YTliN2IiLAogICAgImZpcnN0X25hbWUiOiAi0J/QtdGC0YDQviIsCiAgICAibGFzdF9uYW1lIjogItCG0LLQsNC90L7QsiIsCiAgICAic2Vjb25kX25hbWUiOiAi0JzQuNC60L7Qu9Cw0LnQvtCy0LjRhyIKICB9LAogICJuaHNfbGVnYWxfZW50aXR5X2lkIjogewogICAgImlkIjogImRmOWY3MGVlLTRiMTItNDc0MC1iMGY1LWJiNWFlYTExNjg2MyIsCiAgICAibmFtZSI6ICLQmtC70ZbQvdGW0LrQsCDQndC+0YPQvdC10LnQvCIsCiAgICAiZWRycG91IjogIjMyMzIzNDU0IiwKICAgICJhZGRyZXNzZXMiOiBbCiAgICAgIHsKICAgICAgICAidHlwZSI6ICJSRVNJREVOQ0UiLAogICAgICAgICJjb3VudHJ5IjogIlVBIiwKICAgICAgICAiYXJlYSI6ICLQltC40YLQvtC80LjRgNGB0YzQutCwIiwKICAgICAgICAicmVnaW9uIjogItCR0LXRgNC00LjRh9GW0LLRgdGM0LrQuNC5IiwKICAgICAgICAic2V0dGxlbWVudCI6ICLQmtC40ZfQsiIsCiAgICAgICAgInNldHRsZW1lbnRfdHlwZSI6ICJDSVRZIiwKICAgICAgICAic2V0dGxlbWVudF9pZCI6ICI0MzQzMjQzMiIsCiAgICAgICAgInN0cmVldF90eXBlIjogIlNUUkVFVCIsCiAgICAgICAgInN0cmVldCI6ICLQstGD0LsuINCd0ZbQttC40L3RgdGM0LrQsCIsCiAgICAgICAgImJ1aWxkaW5nIjogIjE1IiwKICAgICAgICAiYXBhcnRtZW50IjogIjIzIiwKICAgICAgICAiemlwIjogIjAyMDkwIgogICAgICB9CiAgICBdCiAgfSwKICAiaXNzdWVfY2l0eSI6ICLQmtC40ZfQsiIsCiAgImNvbnRyYWN0X251bWJlciI6ICIwMDAwLTlFQVgtWFQ3WC0zMTE1IiwKICAiY29udHJhY3RfaWQiOiAiZGY5ZjcwZWUtNGIxMi00NzQwLWIwZjUtYmI1YWVhMTE2ODYzIiwKICAic3RhcnRfZGF0ZSI6ICIyMDE3LTA0LTIwIiwKICAiZW5kX2RhdGUiOiAiMjAxNy0wNC0yMCIsCiAgInByaW50b3V0X2NvbnRlbnQiOiAiQ29udHJhY3QgcmVxdWVzdCBjb250ZW50Igp9`(string, required)
        + `signed_content_encoding`: `base64` (string, required)
+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + include `Contract_request_Details_Capitation`
+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + include `Contract_request_Details_Reimbursement`

### Public. Sign Contract Request by MSP [PATCH /api/contract_requests/{contract_type}/{id}/actions/sign_msp]

***Scope  contract_request:sign***

This WS is designed to sign contract request from MSP side. Contract request's status must be in status ='NHS_SIGNED'.
EDRPOU in DS certeficate = contractor_owner_id.lega_entity.edrpou and suranme in DS=contractor_owner_id.party_id.last_name
Method receives signed message (pkcs7) including signed content, digital signature of first signer, digital stamp of first signer, digital signature of second signer and signer public key in signed_content property.
All signature fields will be validated (including signer certificate authority). This service will store signed copy of Contract Request in Media Content Storage (will update previous version of file),created contract records and linked employees_divisions if signature is all checks is passed.
Object that need to be signed is returned by Get Contract request by ID, urgent, type='signed_content'. In response will be receive a link to download a file in pkcs7 format (signed by NHS side).
This data must be signed.

In DS EDRPOU/DRFO must be equal to contractor_legal_entity.edrpou

> **Note!** In response you will receive Contract object.

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

    + Attributes (object)
        + `signed_content`: `MIIU2wYJKoZIhvcNAQcCoIIUzDCCFMgCAQExDjAMBgoqhiQCAQEBAQIBMIIG+QYJKoZIhvcNAQcBoIIG6gSCBuZ7CiAgICAiaWQiOiAiMDkxMDZiNzAtMThiMC00NzI2LWIwZWQtNmJkYTEzNjlmZDUyIiwKICAgICJjb250cmFjdG9yX293bmVyX2lkIjogImRmOWY3MGVlLTRiMTItNDc0MC1iMGY1LWJiNWFlYTExNjg2MyIsCiAgICAiY29udHJhY3Rvcl9iYXNlIjogItC90LAg0L/RltC00YHRgtCw0LLRliDQt9Cw0LrQvtC90YMg0L/RgNC+INCc0LXQtNC40YfQvdC1INC+0LHRgdC70YPQs9C+0LLRg9Cy0LDQvdC90Y8g0L3QsNGB0LXQu9C10L3QvdGPIiwKICAgICJjb250cmFjdG9yX3BheW1lbnRfZGV0YWlscyI6IHsKICAgICAgImJhbmtfbmFtZSI6ICLQkdCw0L3QuiDQvdC+0LzQtdGAIDEiLAogICAgICAiTUZPIjogIjM1MTAwNSIsCiAgICAgICJwYXllcl9hY2NvdW50IjogIjMyMDA5MTAyNzAxMDI2IgogICAgfSwKICAgICJjb250cmFjdG9yX3Jtc3BfYW1vdW50IjogNTAwMDAsCiAgICAiZXh0ZXJuYWxfY29udHJhY3Rvcl9mbGFnIjogdHJ1ZSwKICAgICJleHRlcm5hbF9jb250cmFjdG9ycyI6IHsKICAgICAgImxlZ2FsX2VudGl0eV9pZCI6ICIyOTIyYTI0MC02M2RiLTQwNGUtYjczMC0wOTIyMmJmZWIyZGQiLAogICAgICAiY29udHJhY3QiOiB7CiAgICAgICAgIm51bWJlciI6ICIxMjM0NTY3IiwKICAgICAgICAiaXNzdWVkX2F0IjogIjIwMTgtMDEtMDEiLAogICAgICAgICJleHBpcmVzX2F0IjogIjIwMTktMDEtMDEiCiAgICAgIH0sCiAgICAgICJkaXZpc2lvbnMiOiBbCiAgICAgICAgewogICAgICAgICAgImlkIjogIjI5MjJhMjQwLTYzZGItNDA0ZS1iNzMwLTA5MjIyYmZlYjJkZCIsCiAgICAgICAgICAibWVkaWNhbF9zZXJ2aWNlIjogItCf0L7RgdC70YPQs9CwINCf0JzQlCIKICAgICAgICB9CiAgICAgIF0KICAgIH0sCiAgICAiY29udHJhY3Rvcl9lbXBsb3llZV9kaXZpc2lvbnMiOiBbCiAgICAgIHsKICAgICAgICAiZW1wbG95ZWVfaWQiOiAiMjkyMmEyNDAtNjNkYi00MDRlLWI3MzAtMDkyMjJiZmViMmRkIiwKICAgICAgICAic3RhZmZfdW5pdHMiOiAwLjUsCiAgICAgICAgImRlY2xhcmF0aW9uX2xpbWl0IjogMjAwMCwKICAgICAgICAiZGl2aXNpb25faWQiOiAiMjkyMmEyNDAtNjNkYi00MDRlLWI3MzAtMDkyMjJiZmViMmRkIgogICAgICB9CiAgICBdLAogICAgImlkX2Zvcm0iOiAiNSIsCiAgICAibmhzX3NpZ25lcl9iYXNlIjogItC90LAg0L/RltC00YHRgtCw0LLRliDQvdCw0LrQsNC30YMiLAogICAgIm5oc19jb250cmFjdF9wcmljZSI6IDUwMDAwLAogICAgIm5oc19wYXltZW50X21ldGhvZCI6ICJwcmVwYXltZW50IiwKICAgICJpc3N1ZV9jaXR5IjogItCa0LjRl9CyIiwKICAgICJzdGF0dXMiOiAiTkVXIiwKICAgICJzdGF0dXNfcmVhc29uIjogItCd0LUg0LLRltC00L/QvtCy0ZbQtNCw0ZQg0L/QvtC/0LXRgNC10LTQvdGW0Lwg0LTQvtC80L7QstC70LXQvdC+0YHRgtGP0LwiLAogICAgIm5oc19zaWduZXJfaWQiOiAiZGY5ZjcwZWUtNGIxMi00NzQwLWIwZjUtYmI1YWVhMTE2ODYzIiwKICAgICJuaHNfbGVnYWxfZW50aXR5X2lkIjogImRmOWY3MGVlLTRiMTItNDc0MC1iMGY1LWJiNWFlYTExNjg2MyIsCiAgICAiY29udHJhY3RfbnVtYmVyIjogIjAwMDAtOUVBWC1YVDdYLTMxMTUiLAogICAgImNvbnRyYWN0X2lkIjogImRmOWY3MGVlLTRiMTItNDc0MC1iMGY1LWJiNWFlYTExNjg2MyIsCiAgICAic3RhcnRfZGF0ZSI6ICIyMDE3LTA0LTIwIiwKICAgICJlbmRfZGF0ZSI6ICIyMDE3LTA0LTIwIiwKICAgICJwcmludG91dF9jb250ZW50IjogIkNvbnRyYWN0IHJlcXVlc3QgY29udGVudCIKICB9CqCCBbkwggW1MIIFXaADAgECAhQNhO2hu5OB6AQAAABetCIAv7N0ADANBgsqhiQCAQEBAQMBATCCAUIxfDB6BgNVBAoMc9Cf0KPQkdCb0IbQp9Cd0JUg0JDQmtCm0IbQntCd0JXQoNCd0JUg0KLQntCS0JDQoNCY0KHQotCS0J4g0JrQntCc0JXQoNCm0IbQmdCd0JjQmSDQkdCQ0J3QmiDCq9Cf0KDQmNCS0JDQotCR0JDQndCawrsxETAPBgNVBAsMCNCQ0KbQodCaMTYwNAYDVQQDDC3QkNCm0KHQmiDQn9CQ0KIg0JrQkSDCq9Cf0KDQmNCS0JDQotCR0JDQndCawrsxFjAUBgNVBAUMDVVBLTE0MzYwNTcwLTExCzAJBgNVBAYTAlVBMScwJQYDVQQHDB7QlNC90ZbQv9GA0L7Qv9C10YLRgNC+0LLRgdGM0LoxKTAnBgNVBAgMINCU0L3RltC/0YDQvtC/0LXRgtGA0L7QstGB0YzQutCwMB4XDTE4MDEyMzE0NTMzNFoXDTE5MDEyMzIxNTk1OVowggETMSIwIAYDVQQKDBnQpNCG0JfQmNCn0J3QkCDQntCh0J7QkdCQMTkwNwYDVQQDDDDQn9CY0KDQntCT0J7QkiDQhNCS0JPQldCdINCS0JDQm9CV0KDQhtCZ0J7QktCY0KcxFzAVBgNVBAQMDtCf0JjQoNCe0JPQntCSMSowKAYDVQQqDCHQhNCS0JPQldCdINCS0JDQm9CV0KDQhtCZ0J7QktCY0KcxEDAOBgNVBAUMBzIyNzQzOTgxCzAJBgNVBAYTAlVBMScwJQYDVQQHDB7QnC4g0JrQoNCe0J/QmNCS0J3QmNCm0KzQmtCY0JkxJTAjBgNVBAgMHNCa0IbQoNCe0JLQntCT0KDQkNCU0KHQrNCa0JAwRjAeBgsqhiQCAQEBAQMBATAPBg0qhiQCAQEBAQMBAQIGAyQABCGNGaguWpXdyBk172CZxkuWynHt6GAUImGZI9ZFJp6oMAGjggJqMIICZjApBgNVHQ4EIgQgztjUwYvcULAWp/FyOQUBNpFx9HsyWh9lgiY21nLzYEkwKwYDVR0jBCQwIoAgjYTtobuTgejDEZCorJKFP8TYx4TGSgG4NxFX2F0YVVcwLwYDVR0QBCgwJqARGA8yMDE4MDEyMzE0NTMzNFqhERgPMjAxOTAxMjMyMTU5NTlaMA4GA1UdDwEB/wQEAwIGwDAZBgNVHSABAf8EDzANMAsGCSqGJAIBAQECAjAMBgNVHRMBAf8EAjAAMB4GCCsGAQUFBwEDAQH/BA8wDTALBgkqhiQCAQEBAgEwOAYDVR0fBDEwLzAtoCugKYYnaHR0cDovL2Fjc2sucHJpdmF0YmFuay51YS9jcmwvUEItUzkuY3JsMEMGA1UdLgQ8MDowOKA2oDSGMmh0dHA6Ly9hY3NrLnByaXZhdGJhbmsudWEvY3JsZGVsdGEvUEItRGVsdGEtUzkuY3JsMIGUBggrBgEFBQcBAQSBhzCBhDA0BggrBgEFBQcwAYYoaHR0cDovL2Fjc2sucHJpdmF0YmFuay51YS9zZXJ2aWNlcy9vY3NwLzBMBggrBgEFBQcwAoZAaHR0cDovL2Fjc2sucHJpdmF0YmFuay51YS9kb3dubG9hZC9jZXJ0aWZpY2F0ZXMvY2VydGlmaWNhdGVzLnA3YjBDBggrBgEFBQcBCwQ3MDUwMwYIKwYBBQUHMAOGJ2h0dHA6Ly9hY3NrLnByaXZhdGJhbmsudWEvc2VydmljZXMvdHNwLzAnBgNVHQkEIDAeMBwGDCqGJAIBAQELAQQBATEMEwozMjI4NTEyNTk3MA0GCyqGJAIBAQEBAwEBA0MABEDV3X/RhIP0TLUcuXc1cIKv01Z1mOPnNhodBM1sVKyxJji/HjkgYpt48+Eew05fWwuFs9LytruxRJ16E7mL7G1PMYIH9zCCB/MCAQEwggFcMIIBQjF8MHoGA1UECgxz0J/Qo9CR0JvQhtCn0J3QlSDQkNCa0KbQhtCe0J3QldCg0J3QlSDQotCe0JLQkNCg0JjQodCi0JLQniDQmtCe0JzQldCg0KbQhtCZ0J3QmNCZINCR0JDQndCaIMKr0J/QoNCY0JLQkNCi0JHQkNCd0JrCuzERMA8GA1UECwwI0JDQptCh0JoxNjA0BgNVBAMMLdCQ0KbQodCaINCf0JDQoiDQmtCRIMKr0J/QoNCY0JLQkNCi0JHQkNCd0JrCuzEWMBQGA1UEBQwNVUEtMTQzNjA1NzAtMTELMAkGA1UEBhMCVUExJzAlBgNVBAcMHtCU0L3RltC/0YDQvtC/0LXRgtGA0L7QstGB0YzQujEpMCcGA1UECAwg0JTQvdGW0L/RgNC+0L/QtdGC0YDQvtCy0YHRjNC60LACFA2E7aG7k4HoBAAAAF60IgC/s3QAMAwGCiqGJAIBAQEBAgGgggYtMBgGCSqGSIb3DQEJAzELBgkqhkiG9w0BBwEwHAYJKoZIhvcNAQkFMQ8XDTE4MDQyMzExMTY1MlowLwYJKoZIhvcNAQkEMSIEIMAdYVO8e/4E9usncxHy/CN128dFo878R/guITulNEtLMIIBtQYLKoZIhvcNAQkQAi8xggGkMIIBoDCCAZwwggGYMAwGCiqGJAIBAQEBAgEEIA7ygmjZ8tufBvOKqZW++z4W7TJu9MmyYGLG7gQ/RMCOMIIBZDCCAUqkggFGMIIBQjF8MHoGA1UECgxz0J/Qo9CR0JvQhtCn0J3QlSDQkNCa0KbQhtCe0J3QldCg0J3QlSDQotCe0JLQkNCg0JjQodCi0JLQniDQmtCe0JzQldCg0KbQhtCZ0J3QmNCZINCR0JDQndCaIMKr0J/QoNCY0JLQkNCi0JHQkNCd0JrCuzERMA8GA1UECwwI0JDQptCh0JoxNjA0BgNVBAMMLdCQ0KbQodCaINCf0JDQoiDQmtCRIMKr0J/QoNCY0JLQkNCi0JHQkNCd0JrCuzEWMBQGA1UEBQwNVUEtMTQzNjA1NzAtMTELMAkGA1UEBhMCVUExJzAlBgNVBAcMHtCU0L3RltC/0YDQvtC/0LXRgtGA0L7QstGB0YzQujEpMCcGA1UECAwg0JTQvdGW0L/RgNC+0L/QtdGC0YDQvtCy0YHRjNC60LACFA2E7aG7k4HoBAAAAF60IgC/s3QAMIIEBwYLKoZIhvcNAQkQAhQxggP2MIID8gYJKoZIhvcNAQcCoIID4zCCA98CAQMxDjAMBgoqhiQCAQEBAQIBMGsGCyqGSIb3DQEJEAEEoFwEWjBYAgEBBgoqhiQCAQEBAgMBMDAwDAYKKoYkAgEBAQECAQQgwB1hU7x7/gT26ydzEfL8I3Xbx0WjzvxH+C4hO6U0S0sCBA7BQYgYDzIwMTgwNDIzMTExNzI1WjGCA1swggNXAgEBMIIBEzCB+jE/MD0GA1UECgw20JzRltC90ZbRgdGC0LXRgNGB0YLQstC+INGO0YHRgtC40YbRltGXINCj0LrRgNCw0ZfQvdC4MTEwLwYDVQQLDCjQkNC00LzRltC90ZbRgdGC0YDQsNGC0L7RgCDQhtCi0KEg0KbQl9CeMUkwRwYDVQQDDEDQptC10L3RgtGA0LDQu9GM0L3QuNC5INC30LDRgdCy0ZbQtNGH0YPQstCw0LvRjNC90LjQuSDQvtGA0LPQsNC9MRkwFwYDVQQFDBBVQS0wMDAxNTYyMi0yMDEyMQswCQYDVQQGEwJVQTERMA8GA1UEBwwI0JrQuNGX0LICFDAEdR3vLHiuAgAAAAEAAABKAAAAMAwGCiqGJAIBAQEBAgGgggHaMBoGCSqGSIb3DQEJAzENBgsqhkiG9w0BCRABBDAcBgkqhkiG9w0BCQUxDxcNMTgwNDIzMTExNzI1WjAvBgkqhkiG9w0BCQQxIgQgCJtCNs3qiVo9TGE/mRMPNzCm/+JJKMtYsovNFgQLyPAwggFrBgsqhkiG9w0BCRACLzGCAVowggFWMIIBUjCCAU4wDAYKKoYkAgEBAQECAQQg2Q2mtkhTwy2/l7j25VzNasV5UgPimES648nWVhtnvOowggEaMIIBAKSB/TCB+jE/MD0GA1UECgw20JzRltC90ZbRgdGC0LXRgNGB0YLQstC+INGO0YHRgtC40YbRltGXINCj0LrRgNCw0ZfQvdC4MTEwLwYDVQQLDCjQkNC00LzRltC90ZbRgdGC0YDQsNGC0L7RgCDQhtCi0KEg0KbQl9CeMUkwRwYDVQQDDEDQptC10L3RgtGA0LDQu9GM0L3QuNC5INC30LDRgdCy0ZbQtNGH0YPQstCw0LvRjNC90LjQuSDQvtGA0LPQsNC9MRkwFwYDVQQFDBBVQS0wMDAxNTYyMi0yMDEyMQswCQYDVQQGEwJVQTERMA8GA1UEBwwI0JrQuNGX0LICFDAEdR3vLHiuAgAAAAEAAABKAAAAMA0GCyqGJAIBAQEBAwEBBEDE0LghB5AMretfTrP7pmjj0cylQFjujnRSeUBFXCcvPDF+6IWQ5lhhvgxVNsUFPVfd4TKdcBxe3NQa90gvYxRAMA0GCyqGJAIBAQEBAwEBBED0SMMU1AsD2jQYZw8yVJMcrgpsVIhaPx+v7qWaNo5KRc8F/v8xoDQAmts/LmvybnwRuAOOiKPw4MwZEG2KIoNO`(string, required)
        + `signed_content_encoding`: `base64` (string, required)
+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + include `Contract_Details_Capitation`
+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + include `Contract_Details_Reimbursement`

## Contracts [/api/contract]
### Public. Get Contracts list [GET /api/contracts/{contract_type}/{?id,contractor_legal_entity_id,edrpou,contractor_owner_id,nhs_signer_id,is_suspended,status,contract_number,date_from_start_date,date_to_start_date,date_from_end_date,date_to_end_date,medical_program_id,page,page_size}]

***Scope  contract:read***

This method is designed to obtain list of contracts with filters. This method return shorten information about contract, in order to see all information try to use 'get contract details'

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, optional) - id of contract request
    + contractor_legal_entity_id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, optional) - id of legal entity which created contract request.
    + edrpou: `5432345432` (string, optional) - contractor legal entity EDRPOU
    + contractor_owner_id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, optional) - id of legal entity owner.
    + `nhs_signer_id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, optional) - id of nhs employee
    + status: `VERIFIED` (enum, optional) - current contract status.
        - TERMINATED
        - VERIFIED
    + is_suspended: true (boolean, optional) - wether contract is active
    + date_from_start_date: `2018-01-01` (string, optional)
    + date_to_start_date: `2019-01-01` (string, optional)
    + date_from_end_date: `2018-01-01` (string, optional)
    + date_to_end_date: `2019-01-01` (string, optional)
    + contract_number: `0000-9EAX-XT7X-3115` (string, optional) - human readable number of contract request.
    + medical_program_id: `2075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, optional) - id of a program that is a subject of a contract
    + page: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 300. Default: 50

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array[`Contracts_list_capitation`])
+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array[`Contracts_list_reimbursement`])

### Public. Get Contract Details [GET /api/contracts/{contract_type}/{id}]

***Scope  contract:read***

This method is designed to get full information of contract by id

+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - contract identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + data (object)
            + include `Contract_Details_Capitation`
        + urgent (object, required)
            + documents (array[`contract_media_content`], optional)
+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + data (object)
            + include `Contract_Details_Reimbursement`
        + urgent (object, required)
            + documents (array[`contract_media_content`], optional)


### Public. Get Contract printout form [GET /api/contracts/{contract_type}/{id}/printout_content]

***Scope  contract:read***

This method is designed to get printout content by contract id.
After contract request was signed by both sides signed contract request with printout content was saved to the storage. This WS extract printout content from the storage.

+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - contract identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + data (object)
            + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - contract identifier
            + `printout_content`: `Contract content` (string, required) - HTML document for contract


## Medical program provision [/api/medical_program_provision]
### Create Medical program provision [POST]
This method allows to create medical program provision by divisions of user’s legal entity. It shows what divisions provide medical program according to legal entity contract.
Method receives signed message (pkcs7) that consists of signed content, digital signature and signer public key. All signature fields will be validated (including signer certificate authority).
Service will store signed copy of the request in Media Content Storage if all checks is passed. 

**Scopes required:** `medical_program_provision:write`

Look at [Dummy Create Medical program provision](https://uaehealthapi.docs.apiary.io/#reference/public.-contracts/medical-program-provision/dummy-create-medical-program-provision) for more details

+ Request (application/json)

    + Headers
    
            Authorization: Bearer F3GF124Df565FDS234SDF34
            api-key: aDGFDFGT46S5gFGD
        
    + Attributes (object)
        + `signed_content`:`ew0KICAicGVyaW9kIjogew0KIC...` (string, required, fixed-type)
        + `signed_content_encoding`: `base64` (string, required)

+ Response 201 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (array)
            + (`Medical_program_provision_response`)


### Dummy Create Medical program provision [POST]

+ Request (application/json)

    + Headers
    
            Authorization: Bearer F3GF124Df565FDS234SDF34
            api-key: aDGFDFGT46S5gFGD
        
    + Attributes (`Medical_program_provision_request`)


+ Response 201 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (array)
            + (`Medical_program_provision_response`)
            + (`Medical_program_provision_response`)
                + id: `2060b523-b469-4fc5-89af-ddb5899d8efe` (string, required)
                + `division_id`: `6d07bdb0-59c0-4b54-8a90-bada3e232877` (string, required)


### Get Medical program provision List [GET /api/medical_program_provision{?contract_number,medical_program_id,division_id,is_active,msp_legal_entity_id,page,page_size}]
This method allows to get a list of medical programs already provided by the divisions of legal entity according to contracts. Also, this list can be filtered using search parameters.

**Scopes required:** `medical_program_provision:read`

+ Parameters
    + `contract_number`: `0000-PAP5-M000` (string, optional) - Contract number
    + `medical_program_id`: `04d5ea65-d6e7-44f8-9eef-f0d3c1121d2b` (string, optional) - Medical program identifier
    + `division_id`: `6d07bdb0-59c0-4b54-8a90-bada3e232877` (string, optional) - Division identifier
    + `is_active`: true (boolean, optional) - Medical program provision status
    + `msp_legal_entity_id`: `15d5ea65-d6e7-44f8-9eef-f0d3c1121d3a` (string, optional) - MSP legal entity identifier
    + page: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 300. Default: 50

+ Request (application/json)

    + Headers
    
            Authorization: Bearer F3GF124Df565FDS234SDF34
            api-key: aDGFDFGT46S5gFGD

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array)
            + (`Medical_program_provision_response`)
            + (`Medical_program_provision_response`)
                + id: `2060b523-b469-4fc5-89af-ddb5899d8efe` (string, required)
                + `division_id`: `6d07bdb0-59c0-4b54-8a90-bada3e232877` (string, required)

### Deactivate Medical program provision [PATCH /api/medical_program_provision/{id}/actions/deactivate]
This method allows to deactivate division that provide a medical program within user's legal entity.

**Scopes required:** `medical_program_provision:write`

+ Parameters
    + `id`: `2060b523-b469-4fc5-89af-ddb5899d8efe` (string, required) - Medical program provision identifier
    
+ Request (application/json)

    + Headers
    
            Authorization: Bearer F3GF124Df565FDS234SDF34
            api-key: aDGFDFGT46S5gFGD

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + data (`Medical_program_provision_response`)
            + `is_active`: false (boolean, required)
            + `deactivate_reason`: `MANUAL_DEACTIVATION` (string, required, nullable) - the reason of deactivated status. According to `PROVISON_DEACTIVATE_REASON` dictionary

## Group Public. Forbidden groups
There are public methods presented to work with a forbidden groups data. 

### Get Forbidden group list [GET /api/forbidden_groups{?name,page,page_size}]
This web service returns a catalog of all active forbidden groups in eHealth.

+ Parameters
    + `name`: `Some name` (string, optional) - Forbidden group name
    + `page`: 2 (number, optional) - Page number
    + `page_size`: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 300. Default: 50

+ Request (application/json)

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array)
            + (object)
                + id: `f7f817b2-3134-4625-b87d-e2d7fc8e9b90` (string, required) - Forbidden group identifier
                + name: `Some name` (string, required) - Forbidden group name

### Get Forbidden group details [GET /api/forbidden_groups/{id}]
This web service returns forbidden group details filtered by ID with active codes and active services in eHealth.

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)

+ Request (application/json)

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (array)
            + (object)
                + id: `f7f817b2-3134-4625-b87d-e2d7fc8e9b90` (string, required) - Forbidden group identifier
                + name: `Some name` (string, required) - Forbidden group name
                + creation_reason: `Some text` (string, required) - Forbidden group creation reason
                + deactivation_reason: `Some text` (string) - Forbidden group deactivation reason
                + `forbidden_group_codes` (array)
                    + (object)
                        + id: `f016a994-4826-48ae-be65-8d459a75f021` (string, required) - Forbidden group code identifier
                        + code: `G30.9` (string, required)
                        + system: `eHealth/ICD10_AM/condition_codes` (string, required)
                        + creation_reason: `Some text` (string, required) - Forbidden group code creation reason
                + `forbidden_group_services` (array)
                    + (object)
                        + id: `b8bc70e1-783c-4b25-a90e-0da9217d84d9` (string, required) - Forbidden group service identifier
                        + service_id: `b2e4464e-609e-480c-a32c-6db4fbb04cf1` (string)
                        + service_group_id: `d838dbea-0ca0-4295-bf46-819dc069b8d4` (string)
                        + creation_reason: `Some text` (string, required) - Forbidden group service creation reason

## Group Public. Groups of Diagnoses
There are public methods presented to work with Groups of Diagnoses data. 

### Get Groups of Diagnoses list [GET /api/diagnoses_groups{?diagnoses_group_name,diagnoses_group_code,diagnosis_name,diagnosis_code,page,page_size}]
This web service returns a catalog of all active Groups of Diagnoses in eHealth.

+ Parameters
    + `diagnoses_group_name`: `Some name` (string, optional) - Group of Diagnoses name
    + `diagnoses_group_code`: `H00` (string, optional) - Group of Diagnoses code
    + `diagnosis_name`: `Some name` (string, optional) - Diagnosis name
    + `diagnosis_code`: `G30.9` (string, optional) - Diagnosis code
    + `page`: 2 (number, optional) - Page number
    + `page_size`: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 300. Default: 50

+ Request (application/json)

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array)
            + (object)
                + id: `f7f817b2-3134-4625-b87d-e2d7fc8e9b90` (string, required) - Group of Diagnoses identifier
                + name: `Some name` (string, required) - Group of Diagnoses name
                + code: `H00` (string, required) - Group of Diagnoses code
                + description: `Some description` (string) - Group of Diagnoses description

### Get Group of Diagnoses details [GET /api/diagnoses_groups/{id}]
This web service returns Group of Diagnoses details filtered by ID with active diagnosis codes in eHealth.

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)

+ Request (application/json)

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (array)
            + (object)
                + id: `f7f817b2-3134-4625-b87d-e2d7fc8e9b90` (string, required) - Group of Diagnoses identifier
                + name: `Some name` (string, required) - Group of Diagnoses name
                + code: `H00` (string, required) - Group of Diagnoses code
                + description: `Some description` (string) - Group of Diagnoses description
                + `diagnoses_group_codes` (array)
                    + (object)
                        + id: `f016a994-4826-48ae-be65-8d459a75f021` (string, required) - Diagnoses Group Code identifier
                        + code: `G30.9` (string, required)
                        + system: `eHealth/ICD10_AM/condition_codes` (string, required)

## Group Public. Devices
Public method to operate with devices and related entites

### Get device definitions [GET /api/device_definitions{?classification_type,model_number,name,name_type,medical_program_id,is_active,page,page_size}]
Method to get or search all active device definitions in the system

+ Parameters
    + `classification_type`: `30221` (string, optional) - Classification type. Dictionary `device_definition_classification_type`
    + `model_number`: `H00P53` (string, optional) - Model number for the device
    + `name`: `Some name` (string, optional) - Device name
    + `name_type`: `registered` (enum, optional) - Device name type. Dictionary `device_name_type`
    + `medical_program_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - medical program id.    
    + `is_active`: true (boolean, optional) - device definition status
    + `page`: 2 (number, optional) - Page number
    + `page_size`: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 300. Default: 50

+ Request (application/json)

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (array[`Device_Definition_Response`])

# Group Public. Portal and Reports

## MainStats [/reports/stats]

### Get Main Stats [GET /reports/stats/]

Methods returns agregated numbers of declarations, doctors, msp, pharmacies,pharmacists. Also returns counts of Active and Completed medication requests.
Total statistis are calculated on the date that is transmitted in the current date


+ Request (application/json)

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (object, optional)
            + declarations: 100 (number, required)
            + msps: 2 (number, required)
            + doctors: 15 (number, required)
            + pharmacies: 2 (number, required)
            + pharmacists: 6 (number, required)
            + medication_requests_active: 13 (number, required)
            + medication_requests_completed: 20 (number, required)
            

### Get Main Stats by Regions [GET /reports/stats/regions/]

Methods returns agregated numbers of declarations, MSP, PHARMACIES, doctors, pharmacists, active MR and completed MR grouped by region.
Total statistis are calculated on the date that is transmitted in the current dste
The service returns statistics for all regions


+ Request (application/json)

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (array[`StatsByRegionadd`], optional)




### Get Main Stats by Division [GET /reports/stats/division/{division_id}]
Methods returns agregated numbers of declarations and doctors by division.

+ Parameters
    + division_id: b075f148-7f93-4fc2-b2ec-2d81b19a9b7b (string, required)

+ Request (application/json)

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
         + data (`MainStats_Division`, optional)



### Get Histogram Stats Declarations [GET /reports/stats/histogram]

Methods returns agregated numbers of declarations.
Total statistis are calculated by automatically setting parameters (at the moment, from the current date for 13 months with a MONTH interval).
The service returns statistics for all regions

+ Request (application/json)

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (array[`HistogramStats`], optional)

## Divisions [/report/divisions]

### Search Divisions [GET /reports/stats/divisions{?id,employee_id,type,name,area,region,settlement,legal_entity_edrpou,legal_entity_id,legal_entity_name,healthcare_service_speciality_type,healthcare_service_providing_condition,north,east,south,west,updated_at_from,updated_at_to}]
Method searches divisions by parameters and returnes division details

+ Parameters
    + id: b075f148-7f93-4fc2-b2ec-2d81b19a9b7b (string, optional) - division ID
    + employee_id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, optional) - employee ID
    + type: CLINIC (enum, optional) - `Dictionary DIVISION_TYPE`
    + name: Відділення1 (string, optional) - the name of division
    + area:`Волинська` (string, optional) - the name of region where division is located
    + region: `Луцький` (string, optional) - the name of district where division is located
    + settlement: `Луцьк` (string, optional) - the name of settlement where division is located
    + `legal_entity_edrpou`: 12345678 (string, optional) - legal_entity edrpou
    + `legal_entity_id`: b075f148-7f93-4fc2-b2ec-2d81b19a9b7b (string, optional) - legal entity ID
    + `legal_entity_name`: `Аптека 199` (string, optional) - legal_entity name
    + `healthcare_service_speciality_type`: `FAMILY_DOCTOR` (string, optional) - `Dictionary SPECIALITY_TYPE`
    + `healthcare_service_providing_condition`: OUTPATIENT (string, optional) - `Dictionary PROVIDING_CONDITION`
    + north: 30.1233 (number, required)
    + east: 50.32423 (number, required)
    + south: 50.32423 (number, required)
    + west: 50.32423 (number, required)
    + `updated_at_from`: `2017-04-20T19:14:13Z` (string, optional)
    + `updated_at_to`: `2017-04-20T19:14:13Z` (string, optional)

+ Request (application/json)

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array[`EntriesDivisionMap`], optional)

## Medical program provision [/report/medical_program_provision]

### Search Medical program provision [GET /reports/stats/medical_program_provision{?id,medical_program_id,medical_program_name,division_id,division_name,is_active,page,page_size}]
Method searches Medical program provision by parameters and returnes it's details

**Scopes required:** `medical_program_provision:read`

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, optional) - provision ID
    + `medical_program_id`: `a175f148-7f93-4fc2-b2ec-2d81b19a9b8a` (string, optional) - Medical program ID
    + `medical_program_name`: `Доступні ліки` (string, optional) - the name of medical program
    + `division_id`: `c275f148-7f93-4fc2-b2ec-2d81b19a9b8c` (string, optional) - ID of the division that provides a program
    + `division_name`: `Аптека доброго здоров'я` (string, optional) - the name of pharmacy division
    + `is_active`: true (boolean, optional) - Medical program provision status
    + page: 2 (number, optional)
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 300. Default: 50

+ Request (application/json)

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array[`EntriesMedicalProgramProvisionMap`], optional)

## Employees [/api/stats/employees]

### Search Employees [GET /api/stats/employees{?id,full_name,speciality,division_id,division_name,area,region,settlement,legal_entity_status,page,page_size,updated_at_from,updated_at_to}]
Method searches doctor by parameters and returnes division details

+ Parameters
    + id: b075f148-7f93-4fc2-b2ec-2d81b19a9b7b (string, optional) - Employee ID
    + full_name: `Іванов Іван Іванович` (enum, optional) - doctor's full name
    + speciality: `FAMILY_DOCTOR` (string, optional) - doctor officio speciality
    + division_id: b075f148-7f93-4fc2-b2ec-2d81b19a9b7b (string, optional) - division ID
    + division_name: Відділення1 (string, optional) - the name of division
    + area:`Волинська` (string, optional) - the name of region where division is located
    + region: `Луцький` (string, optional) -  the name of district where division is located
    + settlement: `Луцьк` (string, optional) - the name of settlement where division is located
    + legal_entity_status: ACTIVE (boolen, optional) - the status of a legal entity in which the doctor works
    + `updated_at_from`: `2017-04-20T19:14:13Z` (string, optional)
    + `updated_at_to`: `2017-04-20T19:14:13Z` (string, optional)
    + page: 2 (number, optional)
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 300. Default: 50

+ Request (application/json)

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array[`EntriesEmployeesListMap`], optional)

### Search Employee Details [GET /api/stats/employees/{id}]
This method returns employee details by id

+ Request (application/json)

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`EntriesEmployeeMap`, optional)


## Employee Requests [/employee_requests]

### Approve or Reject Employee Request [POST /employee_requests/{id}/actions/{action}]

This service should be used for approve/reject employee request.

Available employee status transitions:
NEW -> REJECTED (action=reject)
NEW -> APPROVED (action=approve)

Method logic described on [confluence page](https://e-health-ua.atlassian.net/wiki/spaces/EH/pages/583401574/Approve+Reject+Employee+Request)

+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
    + action: approve, reject (enum, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer YW5WcFkyVnFkV2xqWldwMWFXTmxDZzpjY1hwWTR0cWRZbGVjNHAxYUdsMXVJ

+ Response 200 (application/json)
    + Attributes (`Response_OK`)

## Parties [/parties]

### Search parties [GET /api/stats/parties{?employee_type,full_name,verification_status,speciality,division_id,division_name,area,region,settlement,location_north,location_east,location_south,location_west,page,page_size}]
Service to search parties (doctors) in eHealth

+ Parameters
    + employee_type: DOCTOR (string, optional)
    + full_name: `Іванов Іван Іванович` (enum, optional) - doctor's full name
    + `verification_status`: `NOT_VERIFIED` (string, optional) - status of party verification according to `PARTY_VERIFICATION_STATUSES` dictionary    
    + speciality: `FAMILY_DOCTOR` (string, optional) - specialization of healthcare services provided by doctor
    + division_id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, optional) - division ID
    + division_name: Відділення1 (string, optional) - the name of division
    + area: `Волинська` (string, optional) - the name of region where division is located
    + region: `Луцький` (string, optional) -  the name of district where division is located
    + settlement: `Луцьк` (string, optional) - the name of settlement where division is located
    + location_north: 30.1233 (number, optional)
    + location_east: 50.32423 (number, optional)
    + location_south: 50.32423 (number, optional)
    + location_west: 50.32423 (number, optional)
    + page: 2 (number, optional)
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 300. Default: 50

+ Request (application/json)

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array[`EntriesParties`], required, fixed-type)

### Get declaration count internal [GET /api/parties/declaration_count/{ids}]

This service returns parties.declaration_count from report DB for get employees services.

+ Parameters
    + ids: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - id of a party

+ Request (application/json)

    + Headers

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)

        + data (array)

            + (object)

                + `declaration_count`: 1234 (number, required) - declaration_count for a certain party id in report DB
                + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - id of a party



# Group Private. Contracts

This group of endpoints is implemented for trusted third party to manipulate with contract records in ehealth system.
Assuming that all required business processes and validations is implemented on their side

## Private. Contracts [/api/admin/contracts]

### Private. Create contract [POST]

+ Request (application/json)

    + Headers

            api-key: c2778f3064753ea70de870a53795f5c9

    + Attributes (`Contracts_CRUD_request`)
        + `medical_programs` (array, optional) - list of medical programs
            - `d313342c-0b3c-443b-a92e-afb78d1e8086`

+ Response 201 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (`Contracts_CRUD_response`)

### Private. Update contract [PUT /api/admin/contracts/{id}]

+ Parameters
    + `id`: `801f37f5-52c8-477e-aba5-a1d01876d210` (string, required)

+ Request (application/json)

    + Headers

            api-key: c2778f3064753ea70de870a53795f5c9

    + Attributes (`Contracts_CRUD_request`)

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (`Contracts_CRUD_response`)

### Private. Get contracts [GET /api/admin/contracts/{?id,type,contractor_legal_entity_id,edrpou,contractor_owner_id,nhs_signer_id,is_suspended,status,is_active,contract_number,date_from_start_date,date_to_start_date,date_from_end_date,date_to_end_date,medical_program_id,page,page_size}]

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, optional) - contract id
    + type: CAPITATION (string, optional) - type of a contract
        - CAPITATION
        - REIMBURSEMENT
    + contractor_legal_entity_id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, optional) - id of legal entity which created contract request.
    + edrpou: `5432345432` (string, optional) - contractor legal entity EDRPOU
    + contractor_owner_id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, optional) - id of legal entity owner.
    + `nhs_signer_id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, optional) - id of nhs employee
    + status: `VERIFIED` (enum, optional) - current contract status.
        - TERMINATED
        - VERIFIED
    + is_suspended: true (boolean, optional) - wether contract is suspensed
    + is_active: true (boolean, optional) - wether contract is active
    + date_from_start_date: `2018-01-01` (string, optional)
    + date_to_start_date: `2019-01-01` (string, optional)
    + date_from_end_date: `2018-01-01` (string, optional)
    + date_to_end_date: `2019-01-01` (string, optional)
    + contract_number: `0000-9EAX-XT7X-3115` (string, optional) - human readable number of contract request.
    + medical_program_id: `2075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, optional) - id of a program that is a subject of reimbursement contract
    + page: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 300. Default: 50

+ Request (application/json)

    + Headers

            api-key: c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array[`Contracts_CRUD_response`])

### Private. Get contract by ID [GET /api/admin/contracts/{id}]

+ Parameters
    + `id`: `801f37f5-52c8-477e-aba5-a1d01876d210` (string, required)

+ Request (application/json)

    + Headers

            api-key: c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (`Contracts_CRUD_response`)

### Private. Delete contract [DELETE /api/admin/contracts/{id}]

+ Parameters
    + `id`: `801f37f5-52c8-477e-aba5-a1d01876d210` (string, required)

+ Request (application/json)

    + Headers

            api-key: c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + data (object)
        + meta (Response__Meta)
            + code: 200 (number)

### Private. Terminate Contract [PATCH /api/contracts/{id}/actions/terminate]

***Scope  contract:terminate***

This WS is designed to terminate contract. Contract must be in status 'VERIFIED'

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

    + Attributes (object)
        + `status_reason`: `Неправильний період контракту`(string, optional) - the reason of terminated status

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + include `Contract_Details_Capitation`

### Private. Prolongate Contract [PATCH /api/contracts/{id}/actions/update]

***Scope  contract:update***

This WS allows to update end_date for contracts in case legal entity was merged and can't sign new contract. Contract must be in status 'VERIFIED'

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

    + Attributes (object)
        + `end_date`: `2018-12-31`(string, required) - new end date

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + include `Contract_Details_Capitation`

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + include `Contract_Details_Reimbursement`

## Private. Contract divisions [/api/admin/contract_divisions]

### Private. Create contract division [POST]

+ Request (application/json)

    + Headers

            api-key: c2778f3064753ea70de870a53795f5c9

    + Attributes (`Contract_divisions_CRUD_request`)

+ Response 201 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (`Contract_divisions_CRUD_response`)

### Private. Update contract division [PUT /api/admin/contract_divisions/{id}]

+ Parameters
    + `id`: `801f37f5-52c8-477e-aba5-a1d01876d210` (string, required)

+ Request (application/json)

    + Headers

            api-key: c2778f3064753ea70de870a53795f5c9

    + Attributes (`Contract_divisions_CRUD_request`)

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (`Contract_divisions_CRUD_response`)

### Private. Get contract divisions [GET /api/admin/contract_divisions/{?id,contract_id,division_id,is_active,page,page_size}]

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, optional) - Contract division identifier
    + contract_id: `82286646-ee07-4d89-929d-29287c367e8a` (string, optional) - Contract identifier
    + division_id: `f93ac873-b999-47d2-a945-32e7f582eed0` (string, optional) - Division identifier
    + is_active: true (boolean, optional) - wether contract divisions is active
    + page: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 300. Default: 50

+ Request (application/json)

    + Headers

            api-key: c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array[`Contract_divisions_CRUD_response`])

### Private. Get contract division by ID [GET /api/admin/contract_divisions/{id}]

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, optional) - Contract division identifier

+ Request (application/json)

    + Headers

            api-key: c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (`Contract_divisions_CRUD_response`)

### Private. Delete contract division [DELETE /api/admin/contract_divisions/{id}]

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Contract division identifier

+ Request (application/json)

    + Headers

            api-key: c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + data (object)
        + meta (Response__Meta)
            + code: 200 (number)

## Private. Contract employees [/api/admin/contract_employees]

### Private. Create contract employee [POST]

+ Request (application/json)

    + Headers

            api-key: c2778f3064753ea70de870a53795f5c9

    + Attributes (`Contract_employees_CRUD_request`)

+ Response 201 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (`Contract_employees_CRUD_response`)

### Private. Update contract employee [PUT /api/admin/contract_employees/{id}]

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Contract emplyee identifier

+ Request (application/json)

    + Headers

            api-key: c2778f3064753ea70de870a53795f5c9

    + Attributes (`Contract_employees_CRUD_request`)

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (`Contract_employees_CRUD_response`)

### Private. Get contract employees [GET /api/admin/contract_employees{?id,employee_id,division_id,contract_id,is_active,page,page_size}]

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, optional) - Contract division identifier
    + employee_id: `da1c07c3-1104-45a3-9a8c-04ffd898da6a` (string, optional) - Employee identifier
    + division_id: `f93ac873-b999-47d2-a945-32e7f582eed0` (string, optional) - Division identifier
    + contract_id: `82286646-ee07-4d89-929d-29287c367e8a` (string, optional) - Contract identifier
    + is_active: true (boolean, optional) - wether contract employees is active
    + page: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 300. Default: 50

+ Request (application/json)

    + Headers

            api-key: c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array[`Contract_employees_CRUD_response`])

### Private. Get contract employee by ID [GET /api/admin/contract_employees/{id}]

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Contract emplyee identifier

+ Request (application/json)

    + Headers

            api-key: c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (`Contract_employees_CRUD_response`)

### Private. Delete contract employee [DELETE /api/admin/contract_employees/{id}]

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Contract emplyee identifier

+ Request (application/json)

    + Headers

            api-key: c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + data (object)
        + meta (Response__Meta)
            + code: 200 (number)

## Private. Media storage [/api/admin/contracts/media_storage]

### Private. Generate URL to media storage [POST /api/admin/contracts/media_storage/generate_url]

+ Request (application/json)

    + Headers

            api-key: c2778f3064753ea70de870a53795f5c9

    + Attributes (object)
        + action: PUT (string, required)
            - PUT
            - GET
        + resource_id: `f7f817b2-3134-4625-b87d-e2d7fc8e9b90` (string, required) - Folder identifier
        + `resource_name`: `signed_contract` (string, required) - File name

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (object)
            + url: `https://example.com/upload_url` (string, required)

# Group Private. Reimbursement

This group of endpoints is implemented for NHS Admin to manipulate with reimbursement records in ehealth system and prevent matching person with his medical data. In the responses of these endpoints `person_id` is return in hashed form.

## Private. Medication Request [/api/admin/medication_requests]
### Private. Get Medication request by ID [GET /api/admin/medication_requests/{id}]

**Scopes required:** `medication_request_admin:details`

+ Parameters
    + id: `48416485-cc98-46c4-8bba-e321de9e1ecd` (string, required) - `Medication Request identifier OR request_number`

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + meta (Response__Meta)
        + data (object)
            + include `Medication_request_Private_Response_with_Medical_Program_min`

### Private. Get Medication requests [GET /api/admin/medication_requests{?legal_entity_id,employee_id,person_id,status,request_number,created_from,created_to,medication_id,intent,care_plan_id,encounter_id,page,page_size}]

**Scopes required:** `medication_request_admin:read`

+ Parameters
    + `legal_entity_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - legal entity identifier.
    + `employee_id`: `7124259c-eeb1-4cbb-acac-ada2162675d1` (string, optional) - user_id of a doctor.
    + `person_id`: `01352B970879A80E19B60C15C8E488DA26CABC3B9F7FA71684904A99DBD5ACE4` (string, optional) - hash of `person_id` of a patient.
    + `status`: `ACTIVE` (enum, optional). Default `ACTIVE`
        - ACTIVE
        - COMPLETED
        - EXPIRED
        - REJECTED
    + `request_number` : `0000-243P-1X53-EH38` (string, optional) - Public medication request human readable number
    + `created_from`: `2017-08-17` (string, optional) - Medication request creation date period start, which is determined by the external system. Format *DATE '2017-08-17'*
    + `created_to`: `2017-08-30` (string, optional) - Medication request creation date period end, which is determined by the external system. Format *DATE '2017-08-30'*
    + `medication_id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b5b` (string, optional) - innm dosage id
    + intent: order (string, optional) - Medication request intent
    + `care_plan_id`: `8838982b-6a77-4cb5-87cd-cdb82eb55364` (string, optional) - care plan identifier
    + `encounter_id`: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, optional) - encounter identifier
    + page: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 300. Default: 50

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
   + Attributes (`Response_Collection_V2`)
        + data (array)
            + (object)
                + include `Medication_request_Private_Response`

### Private. Block Medication Request [PATCH /api/admin/medication_requests/{id}/actions/block]

**Scopes required:** `medication_request_admin:block`

+ Parameters
    + `id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
    
+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

    + Attributes (object)
       + `block_reason`: `перевищено норми відпуску` (string, required) - Block reason
       + `block_reason_code`: `BLOCK_WRONG_QTY_DRUG` (string, required) - Block reason code `Dictionary MEDICATION_REQUEST_BLOCK_REASON`

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + meta (Response__Meta)
        + data (object)
            + include `Medication_request_Private_Response_with_Medical_Program_min`

### Private. Unblock Medication Request [PATCH /api/admin/medication_requests/{id}/actions/unblock]

**Scopes required:** `medication_request_admin:unblock`

+ Parameters
    + `id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
    
+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

    + Attributes (object)
       + `block_reason`: `помилки відсутні` (string, required) - Unblock reason
       + `block_reason_code`: `UNBLOCK_DEFAULT` (string, required) - Unblock reason code `Dictionary MEDICATION_REQUEST_BLOCK_REASON`

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + meta (Response__Meta)
        + data (object)
            + include `Medication_request_Private_Response_with_Medical_Program_min`

## Private. Medication Dispense [/api/admin/medication_dispenses]

### Private. Get Medication Dispenses List [GET /api/admin/medication_dispenses{?id,medication_request_id,legal_entity_id,division_id,status,dispensed_from,dispensed_to,care_plan_id,page,page_size}]

**Scopes required:** `medication_dispense_admin:read`

+ Parameters
    + id: `a89f6a26-4221-4597-a1d2-542d5e40b565` (string, optional) - Medication dispense ID
    + medication_request_id: `a89f6a26-4221-4597-a1d2-542d5e40b565` (string, optional) - Medication request ID
    + legal_entity_id: `a89f6a26-4221-4597-a1d2-542d5e40b565` (string, optional) - Legal entity ID
    + division_id: `a89f6a26-4221-4597-a1d2-542d5e40b565` (string, optional) - Division ID
    + status: PROCESSED (string, optional) - Status
    + dispensed_from: '2017-09-01' (string, optional) - date of dispense
    + dispensed_to: '2017-10-01' (string, optional) - date of dispense
    + `care_plan_id`: `8838982b-6a77-4cb5-87cd-cdb82eb55364` (string, optional) - care plan identifier
    + page: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 300. Default: 50


+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array)
            + (object)
                + include `Medication_Dispense_Response_Private`

### Private. Get Medication Dispense by ID [GET /api/admin/medication_dispenses/{id}]

**Scopes required:** `medication_dispense_admin:read`

+ Parameters
    + `id`: `a89f6a26-4221-4597-a1d2-542d5e40b565` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (object)
            + include `Medication_Dispense_Response_Private`


# Group Private. Parties and users

## Party users [/party_users]

### Get Party users list [GET /party_users{?user_id,party_id,page,page_size}]
Method returns list of user_id(s) by party_id(s) filtered by parameters.

**Scopes required:** `party_user:read`

+ Parameters
    + `user_id`: `09106b70-18b0-4726-b0ed-6bda1369fd52` (string, optional) - user Identifier
    + `party_id`: `79a91507-d409-49fc-b373-934b59c4f694` (string, optional) - Party Identifier
    + `page`: 2 (number) - Page number.
    + `page_size`: 50 (number) - A limit on the number of objects to be returned, between 1 and 300. Default: 50


+ Request (application/json)

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + meta (Response__Meta)
        + data (array[`Party_user_Response`])

# Group Dummy methods

## Dummy for legal entity [/dummy/legal_entities]

### Create/Update Legal Entity - DEPRECATED [PUT]

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

    + Attributes (object)
        + include (`Legal_Entity_Request_Public`)

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + data (object)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + include (`Legal_Entity_Request_Public`)
            + status: ACTIVE (enum, required)
                - ACTIVE
                - CLOSED
        + urgent (object, optional)
            + security (object)
                + `secret_key`: `secret_key` (string, required)
                + `client_id`: `client_id` (string, required)
                + `redirect_uri`: `redirect_uri` (string, required, fixed) - Redirect uri
            + employee_request_id: `d098aee7-5ab3-4a24-a6ba-811f9cf94c6d` - Employee request identifier

+ Response 201 (application/json)
    + Attributes (`Response__Process_OK`)
        + data (object)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + include (`Legal_Entity_Request_Public`)
            + status: ACTIVE (enum, required)
                - ACTIVE
                - CLOSED
                - SUSPENDED
            + `nhs_verified`: false (boolean, required)
            + `nhs_reviewed`: false (boolean, required) - flag that shows whether legal entity was reviewed by nhs
            + nhs_comment: `comment` (string, optional) - nhs's comment
        + urgent (object, optional)
            + security (object)
                + `secret_key`: `secret_key` (string, required)
                + `client_id`: `client_id` (string, required)
                + `redirect_uri`: `redirect_uri` (string, required, fixed) - Redirect uri
            + employee_request_id: `d098aee7-5ab3-4a24-a6ba-811f9cf94c6d` - Employee request identifier

### Create/Update Legal Entity V2 [PUT /dummy/legal_entities/v2]

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

    + Attributes (object)
        + include (`Legal_Entity_Request_Public_V2`)

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + data (object)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + include (`Legal_Entity_Response_Public_V2`)
            + status: ACTIVE (enum, required)
                - ACTIVE
                - CLOSED
                - SUSPENDED
            + `nhs_verified`: false (boolean, required)
            + `nhs_reviewed`: false (boolean, required) - flag that shows whether legal entity was reviewed by nhs
            + nhs_comment: `comment` (string, optional) - nhs's comment
        + urgent (object, optional)
            + security (object)
                + `secret_key`: `secret_key` (string, required)
                + `client_id`: `client_id` (string, required)
                + `redirect_uri`: `redirect_uri` (string, required, fixed) - Redirect uri
            + employee_request_id: `d098aee7-5ab3-4a24-a6ba-811f9cf94c6d` - Employee request identifier

+ Response 201 (application/json)
    + Attributes (`Response__Process_OK`)
        + data (object)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + include (`Legal_Entity_Response_Public_V2`)
            + status: ACTIVE (enum, required)
                - ACTIVE
                - CLOSED
                - SUSPENDED
        + urgent (object, optional)
            + security (object)
                + `secret_key`: `secret_key` (string, required)
                + `client_id`: `client_id` (string, required)
                + `redirect_uri`: `redirect_uri` (string, required, fixed) - Redirect uri
            + employee_request_id: `d098aee7-5ab3-4a24-a6ba-811f9cf94c6d` - Employee request identifier

## Dummy for person request [/dummy/person_requests]

### Sign person request [PATCH /dummy/person_requests/{id}/actions/sign]


+ Parameters
   + id: `eeebb86d-5cba-43c9-885b-6482ecaf826b` (string, required)
   
+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            api-key: uXhEczJ56adsfh3Ri9SUkc4en
            msp_drfo: 2534157686

    + Attributes (object)
        + status: APPROVED (string, required)
        + id: `eeebb86d-5cba-43c9-885b-6482ecaf826b` (string, required)
        + person (required)
            + id: `13001c60-45a0-4b5a-b425-9505e1de18bd`(string, optional) - MPI id of the person
            + include (`Person_info_Public`, required)
        + patient_signed: true (boolean, required) - Факт подписания заявки на декларацию.
        + `process_disclosure_data_consent`: true (boolean, required) - Согласие на раскрытие персональных данных
        + content: `<html><body><p>signed person data</p></body></html>` (string, required) - HTML document that MUST be shown to a  - Should be defined on the client side.end-user and signed by his key.
        + channel: `MIS` (enum, required) - channel that invoke patient create service
        
+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + data (`Patient_short`)

## Dummy for merge request [/dummy/merge_requests]

### Sign merge request [PATCH /dummy/merge_requests/{id}/actions/sign]


+ Parameters
    + id: `7c3da506-804d-4550-8993-bf17f9ee0404` (string, required) - `Identifier of the merge request`

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            api-key: uXhEczJ56adsfh3Ri9SUkc4en

    + Attributes (`Merge_request_sign_data`, required)
         + patient_signed: true (boolean, required) - Master person's evidence of sign the merge request.
        

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (`Merge_request_response`)
            + status: SIGNED (string, required) - `status of the signed merge request. Merge completed`

## Dummy for declaration request [/dummy/declaration_requests]

### Sign declaration request - DEPRECATED [PATCH /dummy/declaration_requests/{id}/actions/sign]


+ Parameters
   + id: `eeebb86d-5cba-43c9-885b-6482ecaf826b` (string, required)
   
+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            api-key: uXhEczJ56adsfh3Ri9SUkc4en
            msp_drfo: 2534157686

    + Attributes (`Decl_req_data_to_be_signed`, required)
        
+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + data (`Declaration_short`)

## Dummy for medication request requests [/dummy/medication_request_requests]

### Sign medication request requests [PATCH /dummy/medication_request_requests/{id}/actions/sign]


+ Parameters
   + id: `eeebb86d-5cba-43c9-885b-6482ecaf826b` (string, required)
   
+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            api-key: uXhEczJ56adsfh3Ri9SUkc4en
            msp_drfo: 2534157686

    + Attributes (object, required)
        + include `Medication_request_Request_Sign`
    
+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + data (object)
            + include `Medication_request_Public_Response`
            + printout_form: `HTML` (string, required) - Generated printout form
        + meta (Response__Meta)
        
## Dummy for medication request [/dummy/medication_requests]

### Reject medication request [PATCH /dummy/medication_requests/{id}/actions/reject]


+ Parameters
   + id: `eeebb86d-5cba-43c9-885b-6482ecaf826b` (string, required)
   
+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            api-key: uXhEczJ56adsfh3Ri9SUkc4en
            msp_drfo: 2534157686
            
    + Attributes (`Medication_request_Reject`, required)
    
+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + meta (Response__Meta)
        + data (object)
            + include `Medication_request_Reject_Response`

### Dummy Reject medication request by Pharmacy user [PATCH /dummy/pharmacy/medication_requests/{id}/actions/reject]


+ Parameters
   + id: `eeebb86d-5cba-43c9-885b-6482ecaf826b` (string, required)
   
+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            api-key: uXhEczJ56adsfh3Ri9SUkc4en
            msp_drfo: 2534157686
            
    + Attributes (`Medication_request_Reject`, required)
    
+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + meta (Response__Meta)
        + data (object)
            + include `Medication_request_Public_Response_with_Medical_Program_min_for_Pharmacist_block_reason_required`

## Dummy for medication dispense [/dummy/medication_dispenses]

### Process medication dispense [PATCH /dummy/medication_dispenses/{id}/actions/process]

+ Parameters
   + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
   
+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            api-key: uXhEczJ56adsfh3Ri9SUkc4en
            msp_drfo: 2534157686
            
    + Attributes (object, required)
        + include `Medication_Dispense_Process_Request`

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (object)
            + include `Medication_Dispense_Response`
            + status: PROCESSED

### Process medication dispense by Pharmacy User [PATCH /dummy/pharmacy/medication_dispenses/{id}/actions/process]

+ Parameters
   + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
   
+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            api-key: uXhEczJ56adsfh3Ri9SUkc4en
            msp_drfo: 2534157686
            
    + Attributes (object, required)
        + include `Medication_Dispense_Process_Request_for_Pharmacist`

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (object)
            + include `Medication_Dispense_Response_for_Pharmacist`
            + status: PROCESSED
            
## Dummy for employee request [/dummy/v2/employee_requests]

### Create Employee Request v2 [POST]

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

    + Attributes (object)
        + `employee_request` (Employee_Create_v2)


+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (`Employee_Request_Details`)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + inserted_at: `2017-05-05T14:09:59.232112` (string, required)
            + updated_at: `2017-05-05T14:09:59.232112` (string, required)

## Dummy for PIS methods [/dummy/pis]

### Dummy for sign-up validation [POST /dummy/pis/sign-up_validation]

+ Request (application/json)
    + Attributes (object)
        + `person` (object, required)
            + include (`Person_info_Public`, required)
        + `patient_signed`: true (boolean, required)
        + `process_disclosure_data_consent`: true (boolean, required)
        + `jwt`: `eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNwLnZpcm55QGdtYWlsLmNvbSIsInRpbWVzdGFtcCI6IjIwMTgtMDItMjggMTA6Mzg6MDAifQ.LJRLTqK-zf9gxDNMONcI8cMCSYosDtmAIZqhzZUdhz4` (string, required)

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (object, required)
            + person (object, required)
                + include `Person`
                + emergency_contact (object, required)
                    + include `Emergency_Contact`
            + `token`: `eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNwLnZpcm55QGdtYWlsLmNvbSIsInRpbWVzdGFtcCI6IjIwMTgtMDItMjggMTA6Mzg6MDAifQ.LJRLTqK-zf9gxDNMONcI8cMCSYosDtmAIZqhzZUdhz4` (string, required)

### Dummy for register patient [POST /dummy/pis/register]

+ Request (application/json)
    + Attributes (object)
        + `person` (object, required)
            + include `Person`
            + emergency_contact (object, required)
                + include `Emergency_Contact`
        + `patient_signed`: true (boolean, required)
        + `process_disclosure_data_consent`: true (boolean, required)

+ Response 201 (application/json)
    + Attributes (`Response_OK`)
        + meta (`Response__Meta`)
            + code: 201 (number)
        + data (object, required)
            + person (object, required)
                + include `Person`
                + emergency_contact (object, required)
                    + include `Emergency_Contact`
            + user (object, required)
                + `id`: `7673eb5a-0cae-4fa8-9f81-e6da46aa2940` (string, optional)
                + tax_id: 3000080053 (string, required)
            + access_token: `my-oauth-token` (string, required) - access token

### Dummy for sign-up via confidant validation [POST /dummy/pis/confidant/sign-up_validation]

+ Request (application/json)
    + Attributes (object)
        + `person` (object, required)
            + include (`Person_info_Public_PIS`, required)
        + `patient_signed`: true (boolean, required)
        + `process_disclosure_data_consent`: true (boolean, required)

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (object, required)
            + person (object, required)
                + include `Person`
                + emergency_contact (object, required)
                    + include `Emergency_Contact`
            + `token`: `eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNwLnZpcm55QGdtYWlsLmNvbSIsInRpbWVzdGFtcCI6IjIwMTgtMDItMjggMTA6Mzg6MDAifQ.LJRLTqK-zf9gxDNMONcI8cMCSYosDtmAIZqhzZUdhz4` (string, required)

### Dummy for register patient via confidant person [POST /dummy/pis/confidant/register]

+ Request (application/json)
    + Attributes (object)
        + `person` (object, required)
            + include `Person_info_Public_PIS`
        + `patient_signed`: true (boolean, required)
        + `process_disclosure_data_consent`: true (boolean, required)

+ Response 201 (application/json)
    + Attributes (`Response_OK`)
        + meta (`Response__Meta`)
            + code: 201 (number)
        + data (object, required)
            + person (object, required)
                + include `Person`
                + emergency_contact (object, required)
                    + include `Emergency_Contact`
            + user (object, required)
                + `id`: `7673eb5a-0cae-4fa8-9f81-e6da46aa2940` (string, optional)
                + tax_id: 3000080053 (string, required)
            + access_token: `my-oauth-token` (string, required) - access token

### Dummy for Trusted sign-up [POST /dummy/pis/sign-up]

+ Request (application/json)
    + Attributes (object)
        + `person` (object, required)
            + include `Person`
            + emergency_contact (object, required)
                + include `Emergency_Contact`
        + `patient_signed`: true (boolean, required)
        + `process_disclosure_data_consent`: true (boolean, required)
        + `jwt`: `eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InNwLnZpcm55QGdtYWlsLmNvbSIsInRpbWVzdGFtcCI6IjIwMTgtMDItMjggMTA6Mzg6MDAifQ.LJRLTqK-zf9gxDNMONcI8cMCSYosDtmAIZqhzZUdhz4` (string, required)

+ Response 201 (application/json)
    + Attributes (`Response_OK`)
        + meta (`Response__Meta`)
            + code: 201 (number)
        + data (object, required)
            + person (object, required)
                + include `Person`
                + emergency_contact (object, required)
                    + include `Emergency_Contact`
            + user (object, required)
                + `id`: `7673eb5a-0cae-4fa8-9f81-e6da46aa2940` (string, optional)
                + tax_id: 3000080053 (string, required)
            + token (`Access_Token`)

### Dummy for Trusted sign-in as confidant person [POST /dummy/pis/confidant/sign-in]

+ Request (application/json)
    + Attributes (object)
        + `last_name`: `Петров` (string, required)
        + `first_name`: `Петро Петрович` (string, required)
        + `tax_id`: `2323232323` (string, optional)
        + `document` (object, optional)
            + `type`: PASSPORT (string, required) - `Dictionary DOCUMENT_TYPE`
            + `number`: АА120518 (string, required) - document issue number

+ Response 201 (application/json)
    + Attributes (`Response_OK`)
        + meta (`Response__Meta`)
            + code: 201 (number)
        + data (object, required)
            + user (object, required)
                + `id`: `7673eb5a-0cae-4fa8-9f81-e6da46aa2940` (string, optional)
                + tax_id: 3000080053 (string, required)
            + token (`Access_Token`)

### Dummy for Trusted sign-up via confidant person [POST /dummy/pis/confidant/sign-up]

+ Request (application/json)
    + Attributes (object)
        + `person` (object, required)
            + include `Person_info_Public_PIS`
        + `patient_signed`: true (boolean, required)
        + `process_disclosure_data_consent`: true (boolean, required)

+ Response 201 (application/json)
    + Attributes (`Response_OK`)
        + meta (`Response__Meta`)
            + code: 201 (number)
        + data (object, required)
            + user (object, required)
                + `id`: `7673eb5a-0cae-4fa8-9f81-e6da46aa2940` (string, optional)
                + tax_id: 3000080053 (string, required)
            + token (`Access_Token`)
            

### Dummy for Login in the system as confidant person [POST /dummy/pis/confidant/login]

+ Request (application/json)
    + Attributes (object)
        + `last_name`: `Петров` (string, required)
        + `first_name`: `Петро Петрович` (string, required)
        + `tax_id`: `2323232323` (string, optional)
        + `document` (object, optional)
            + `type`: PASSPORT (string, required) - `Dictionary DOCUMENT_TYPE`
            + `number`: АА120518 (string, required) - document issue number

+ Response 201 (application/json)
    + Attributes (`Response_OK`)
        + meta (`Response__Meta`)
            + code: 201 (number)
        + data (object, required)
            + user (object, required)
                + `id`: `7673eb5a-0cae-4fa8-9f81-e6da46aa2940` (string, optional)
                + tax_id: 3000080053 (string, required)
            + access_token: `my-oauth-token` (string, required) - access token

# Group Deprecated methods

## Persons [/api/persons]

### Reset authentication method [PATCH /api/persons/{id}/actions/reset_authentication_method]

This method allows to reset (set to **NA**) person authentication method.


+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Person identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (`Person_Short`)

+ Response 403 (application/json)
    + Attributes (`Response_Error`)
        + meta (Response__Meta, fixed-type)
            + code: 403 (number)
        + error (Response__Error, fixed-type)
            + type: `forbidden`
            + message: `Not found active declaration with person for this legal entity!` (string)

## Declaration Requests [/api/declaration_requests]

### Get Declaration Requests List - Deprecated [GET /api/declaration_requests{?employee_id,legal_entity_id,status,page,page_size}]

Use this method to obtain list of Declaration Requests for an `empolee_id`. If you want to reduce amount of data that is going trough your application, use `status` filter and show only requests that Doctor or Admin is interested in current UI section.


Also we suggest use `employee_id` and `legal_entity_id` to make sure that end-user understands context of actions that he or she will perform.

Method returns shortened details, to obtain full information - get Declaration Request it by it's ID.

**Important**
This endpoint returns all declaration requests that were created through V2 and V3. If the declaration request was created according to version 3, then the block `person` will be empty.

+ Parameters
    + `employee_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - user_id of a doctor.
    + `legal_entity_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - MSP ID.
    + status: active (enum, optional)
        - NEW
        - APPROVED
        - SIGNED
        - REJECTED
        - CANCELLED
    + page: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 300. Default: 50


+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array[`Declaration_Request_Short`])


### Get Declaration Request by ID - Deprecated [GET /api/declaration_requests/{id}]

This endpoint shows the declaration requests which are created by V2 and V3. Due to the fact that structure of declaration request V2 is different from the structure of decl request V3 , so not all fields of decl request v3 can be displayed.
Block `person` has optional `id`.

+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - request identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + status: SIGNED (enum, optional)
                - NEW
                - APPROVED
                - SIGNED
                - CANCELLED
                - REJECTED
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + start_date: `2017-03-02` (string, required) - Should be defined on the client side.
            + end_date: `2017-03-02` (string, required) - Will be defined on eHealth side if it's not set.
            + person(`Person_Request`, required) - Object that described a Patient. Confidant person should be set for disabled persons, underage persons, etc.
                + patient_signed: false (boolean, required) - Факт подписания заявки на декларацию.
                + `process_disclosure_data_consent`: true (boolean, required) - Согласие на раскрытие персональных данных
                + id: `53af47ba-d9eb-4a87-a2f7-4114adcf1fc4` (string, optional)
            + authorize_with: `cc949559-5dfe-420f-ac05-065e443b2cc6` (string, optional)- identifier of person's auth method
            + scope (enum, required)
                - family doctor
            + declaration_number: `0000-12H4-245D` (string, required) - unique number of declaration.
            + declaration_id: `8311ab82-e341-4da0-8a95-235ec9885e23` (string, required) - presetted id for future declaration
            + employee (`Employee_Minimal`)
            + `legal_entity` (`Medical_Service_Provider`)
                + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + division (`Division_Details`)
            + content: `Declaration content` (string, optional) - HTML document that MUST be shown to a  - Should be defined on the client side.end-user and signed by hes key.
            + seed: hash (string, required) - Hash of previous block in declarations chain or other random component that should be signed with declaration.
            + channel: `MIS` (enum, required) - channel that invoke declaration create service
                - MIS
                - CABINET
        + urgent (object, required)
            + `authentication_method_current` (object, required)
                + type: `OTP` (enum, required)
                    - OTP
                    - OFFLINE
                    - NA
                + number: `+38093*****85` (string, required)
            + documents (array[`media_content`], optional)

### Create Declaration Request - Deprecated [POST /api/v2/declaration_requests]

This method is used to create Declaration Request (as part of Declaration creation process). Fields descriptions are listed in request Example view.

Each doctor has its own limit of declarations. In case there is a necessity to create more declarations `overlimit` should be TRUE. By default `overlimit`= FALSE

Methods-independence (Online/Offline) the attacment with scan of declaration must be added. The scan should be single page JPEG document.

After sign new declaration all previously created pending (status one of the following: NEW, APPROVED) declaration request will be cancelled automatically.

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

    + Attributes (object)
        + `declaration_request` (Declaration_Request_Public)

+ Response 201 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + seed: hash (string, required)
            + include `Declaration_Request_Public_Response`
            + status: `NEW` (string, required)
            + employee (`Employee_Minimal`, required)
            + `legal_entity` (`Medical_Service_Provider`, required)
                + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + division (`Division_Declaration`, required)
            + content: `Declaration content` (string, required) - HTML document that MUST be shown to a  - Should be defined on the client side.end-user and signed by hes key.
            + channel: `MIS` (enum, required) - channel that invoke declaration create service
            + `preferred_way_communication`: email (enum, optional)
                - email
                - phone
        + urgent (object, required)
            + `authentication_method_current` (object, required)
                + type: `OTP` (enum, required)
                    - OTP
                    - OFFLINE
                    - NA
                + number: `+38093*****85` (string, required)
            + documents (array[`media_content`], optional)

+ Response 422 (application/json)
    + Attributes (`Response_Error`)
        + meta (Response__Meta)
            + code: 422
        + error
            + type: unverified (string, required)
            + message: `Unverified phone number` (string, required)

### Create Declaration Request V2 - Deprecated [POST /api/v2/declaration_requests]

This method is used to create Declaration Request (as part of Declaration creation process) via new api. New version changes person search and adds new fields to request.

This method makes it possible to update person data.
When you filled `person.id`, you can update person data (for example, last name). If you give `person.id` and get an error, so you are trying to update another person and you need to create a new person (do not send `person.id`)

If declaration_request without field `person.id`, a new person is created. But if such a person is already there, then there is an error that it is necessary to update the person.
+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

    + Attributes (object)
        + `declaration_request` (Declaration_Request_Public_v2)

+ Response 201 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + seed: hash (string, required)
            + include `Declaration_Request_Public_Response_v2`
            + status: `NEW` (string, required)
            + employee (`Employee_Minimal`, required)
            + `legal_entity` (`Medical_Service_Provider`, required)
                + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + division (`Division_Declaration`, required)
            + content: `Declaration content` (string, required) - HTML document that MUST be shown to a  - Should be defined on the client side.end-user and signed by hes key.
            + channel: `MIS` (enum, required) - channel that invoke declaration create service
            + `preferred_way_communication`: email (enum, optional)
                - email
                - phone
        + urgent (object, required)
            + `authentication_method_current` (object, required)
                + type: `OTP` (enum, required)
                    - OTP
                    - OFFLINE
                    - NA
                + number: `+38093*****85` (string, required)
            + documents (array[`media_content`], optional)

+ Response 422 (application/json)
    + Attributes (`Response_Error`)
        + meta (Response__Meta)
            + code: 422
        + error
            + type: unverified (string, required)
            + message: `Unverified phone number` (string, required)
            



### Approve Declaration Request - Deprecated [PATCH /api/declaration_requests/{id}/actions/approve]

Use this method to approve previously created Declaration Request.

In case if authentication_method is OTP, request example:
```
{
  "verification_code": 3748
}
```
In case if authentication_method is OFFLINE or N/A, request body should be empty.
Before approve patient's scanned documents should be uploaded to the ([Signed URL's](https://cloud.google.com/storage/docs/access-control/create-signed-urls-program)).
All links are generated for one one-page document in jpeg format. Document should be no more than 10MB.
If make declaration request via cabinet then nothing must be uploaded to URL.
Clients can use signed URL's to directly access [s3 storage](https://storage.ehealth.gov.ua/) and upload files via API.

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

    + Attributes (object)
        + `verification_code`: 2836 (number, optional) - required if authentication_method is OTP

+ Response 201 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + seed: hash (string, required)
            + include `Declaration_Request_Public_Response`
            + status: `APPROVED` (string, required)
            + employee (`Employee_Minimal`, required)
            + `legal_entity` (`Medical_Service_Provider`, required)
                + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + division (`Division_Details`, required)
            + content: `Declaration content` (string, required) - HTML document that MUST be shown to a  - Should be defined on the client side.end-user and signed by hes key.
            + channel: `MIS` (enum, required) - channel that invoke declaration create service

+ Response 422 (application/json)
    + Attributes (`Response_Error`)
        + meta (Response__Meta)
            + code: 422
        + error
            + type: request_malformed (string, required)
            + message: `This doctor has X declarations and could not sign more` (string, required)

### Reject Declaration Request - Deprecated [PATCH /api/declaration_requests/{id}/actions/reject]

Use this method to reject previously created Declaration Request.

+ Parameters
    + id: b075f148-7f93-4fc2-b2ec-2d81b19a9b7b (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 201 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (object)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + seed: hash (string, required)
            + include `Declaration_Request_Public_Response`
            + status: `REJECTED` (string, required)
            + employee (`Employee_Minimal`, required)
            + `legal_entity` (`Medical_Service_Provider`, required)
                + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + division (`Division_Details`, required)
            + content: `Declaration content` (string, required) - HTML document that MUST be shown to a  - Should be defined on the client side.end-user and signed by hes key.
            + channel: `MIS` (enum, required) - channel that invoke declaration create service

### Resend Authorization OTP on Declaration Request - Deprecated [POST /api/declaration_requests/{id}/actions/resend_otp]

Use this method to resend sms on previously created Declaration Request.

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + data (`OTP`)

### Sign Declaration Request - Deprecated [PATCH /api/declaration_requests/{id}/actions/sign]

This method is used to sign Declaration Request. Method receives signed message (pkcs7) including signed content, digital signature and signer public key in `signed_content` property.
All signature fields will be validated (including signer certificate authority).

This service will store signed copy of Declaration Request in Media Content Storage, created or update MPI records and create declaration if signature is all checks is passed.

Signed content MUST consists of JSON object with Declaration Request data and printout template. Object that need to be signed is returned by `Get Declaration request by ID` response, `JSON.Path: $.data`.
Patient must re-read and sign declaration print form and after that `patient_signed` should be changed to TRUE.

Declaration request can be signed either by doctor or admin (user with scope `declaration_request:sign`) from legal entity as in declaration request.

**Important**
Invoke Get Declaration Request by ID to obtain seed - Hash of previous block in declarations chain or other random component that should be signed with declaration

Look at [**Dummy Sign Declaration Request**](https://uaehealthapi.docs.apiary.io/#reference/dummy-methods/dummy-for-declaration-request/sign-declaration-request) for more details.

+ Parameters
    + id: b075f148-7f93-4fc2-b2ec-2d81b19a9b7b (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

    + Attributes (object)
        + `signed_declaration_request`: `MIIWmAYJKoZIhvcNAQcCoIIWiTCCFoUCAQExCzAJBgUrDgMCGgUAMIISuwYJKoZIhvcNAQcBoIISrASCEqh7XHJ0ZjFcYW5zaVxhbnNpY3BnMTI1Mlxjb2NvYXJ0ZjE1MDRcY29jb2FzdWJydGY4MTANCntcZm9udHRibFxmMFxmc3dpc3NcZmNoYXJzZXQwIEhlbHZldGljYTt9DQp7XGNvbG9ydGJsO1xyZWQyNTVcZ3JlZW4yNTVcYmx1ZTI1NTtccmVkNzBcZ3JlZW41M1xibHVlOTY7XHJlZDI0OVxncmVlbjI0OVxibHVlMjUxO30NCntcKlxleHBhbmRlZGNvbG9ydGJsOztcY3NzcmdiXGMzNDUxMFxjMjc4NDNcYzQ1MDk4O1xjc3NyZ2JcYzk4MDM5XGM5ODAzOVxjOTg4MjQ7fQ0KXG1hcmdsMTQ0MFxtYXJncjE0NDBcdmlld3cxMDgwMFx2aWV3aDg0MDBcdmlld2tpbmQwDQpcZGVmdGFiNzIwDQpccGFyZFxwYXJkZWZ0YWI3MjBccGFydGlnaHRlbmZhY3RvcjANCg0KXGYwXGZzMjggXGNmMiBcY2IzIFxleHBuZDBcZXhwbmR0dzBca2VybmluZzANClx7XA0KICAgImlkIjoiYjA3NWYxNDgiLFwNCiAgICJzdGFydF9kYXRlIjoiMjAxNy0wMy0wMlQxMDo0NToxNi4wMDBaIixcDQogICAiZW5kX2RhdGUiOiIyMDE3LTAzLTAyVDEwOjQ1OjE2LjAwMFoiLFwNCiAgICJwZXJzb24iOlx7XA0KICAgICAgImZpcnN0X25hbWUiOiJcdWMwXHUxMDU1IFx1MTA3NyBcdTEwOTAgXHUxMDg4IFx1MTA4NiAiLFwNCiAgICAgICJsYXN0X25hbWUiOiJcdWMwXHUxMDMwIFx1MTA3NCBcdTEwNzIgXHUxMDg1IFx1MTA4NiBcdTEwNzQgIixcDQogICAgICAic2blic Vjb25kX25hbWUiOiJcdWMwXHUxMDUyIFx1MTA4MCBcdTEwODIgXHUxMDg2IFx1MTA4MyBcdTEwNzIgXHUxMDgxIFx1MTA4NiBcdTEwNzQgXHUxMDgwIFx1MTA5NSAiLFwNCiAgICAgICJiaXJ0aF9kYXRlIjoiMTk5MS0wOC0xOVQwMDowMDowMC4wMDBaIixcDQogICAgICAiYmlydGhfcGxhY2UiOiJcdWMwXHUxMDQyIFx1MTExMCBcdTEwODUgXHUxMDg1IFx1MTA4MCBcdTEwOTQgXHUxMTAzICwgXHUxMDU5IFx1MTA4MiBcdTEwODggXHUxMDcyIFx1MTExMSBcdTEwODUgXHUxMDcyICIsXA0KICAgICAgImdlbmRlciI6Ik1BTEUiLFwNCiAgICAgICJlbWFpbCI6ImVtYWlsQGV4YW1wbGUuY29tIixcDQogICAgICAidGF4X2lkIjoiMzEyNjUwOTgxNiIsXA0KICAgICAgIm5hdGlvbmFsX2lkIjoiQ0M3MTUwOTg1MjQzIixcDQogICAgICAic2VjcmV0Ijoic2VjcmV0IixcDQogICAgICAiZG9jdW1lbnRzIjpbXA0KICAgICAgICAgXHtcDQogICAgICAgICAgICAidHlwZSI6IlBBU1NQT1JUIixcDQogICAgICAgICAgICAibnVtYmVyIjoiMTIwNTE4IixcDQogICAgICAgICAgICAiaXNzdWVfZGF0ZSI6IjIwMTUtMDQtMDdUMDA6MDA6MDAuMDAwWiIsXA0KICAgICAgICAgICAgImV4cGlyeV9kYXRlIjoiMjAxNS0wNC0wN1QwMDowMDowMC4wMDBaIixcDQogICAgICAgICAgICAiaXNzdWVkX2J5IjoiRE1TVSJcDQogICAgICAgICBcfVwNCiAgICAgIF0sXA0KICAgICAgImFkZHJlc3NlcyI6W1wNCiAgICAgICAgIFx7XA0KICAgICAgICAgICAgInR5cGUiOiJSRVNJREVOQ0UiLFwNCiAgICAgICAgICAgICJjb3VudHJ5IjoiVUEiLFwNCiAgICAgICAgICAgICJhcmVhIjoiXHVjMFx1MTA0NiBcdTEwODAgXHUxMDkwIFx1MTA4NiBcdTEwODQgXHUxMDgwIFx1MTA4OCBcdTEwODkgXHUxMTAwIFx1MTA4MiBcdTEwNzIgIixcDQogICAgICAgICAgICAicmVnaW9uIjoiXHVjMFx1MTA0MSBcdTEwNzcgXHUxMDg4IFx1MTA3NiBcdTEwODAgXHUxMDk1IFx1MTExMCBcdTEwNzQgXHUxMDg5IFx1MTEwMCBcdTEwODIgXHUxMDgwIFx1MTA4MSAiLFwNCiAgICAgICAgICAgICJjaXR5IjoiXHVjMFx1MTA1MCBcdTEwODAgXHUxMTExIFx1MTA3NCAiLFwNCiAgICAgICAgICAgICJjaXR5X3R5cGUiOiJDSVRZIixcDQogICAgICAgICAgICAic3RyZWV0IjoiXHVjMFx1MTA3NCBcdTEwOTEgXHUxMDgzIC4gXHUxMDUzIFx1MTExMCBcdTEwNzggXHUxMDgwIFx1MTA4NSBcdTEwODkgXHUxMTAwIFx1MTA4MiBcdTEwNzIgIixcDQogICAgICAgICAgICAiYnVpbGRpbmciOiIxNSIsXA0KICAgICAgICAgICAgImFwYXJ0bWVudCI6IjIzIixcDQogICAgICAgICAgICAiemlwIjoiMDIwOTAiXA0KICAgICAgICAgXH1cDQogICAgICBdLFwNCiAgICAgICJwaG9uZXMiOltcDQogICAgICAgICBce1wNCiAgICAgICAgICAgICJ0eXBlIjoiTU9CSUxFIixcDQogICAgICAgICAgICAibnVtYmVyIjoiKzM4MDUwMzQxMDg3MCJcDQogICAgICAgICBcfVwNCiAgICAgIF0sXA0KICAgICAgImF1dGhlbnRpY2F0aW9uX21ldGhvZHMiOltcDQogICAgICAgICBce1wNCiAgICAgICAgICAgICJ0eXBlIjoiU01TIixcDQogICAgICAgICAgICAicGhvbmVfbnVtYmVyIjoiKzM4MDUwODg4NzcwMCJcDQogICAgICAgICBcfVwNCiAgICAgIF0sXA0KICAgICAgImVtZXJnZW5jeV9jb250YWN0Ijpce1wNCiAgICAgICAgICJmaXJzdF9uYW1lIjoiXHVjMFx1MTA1NSBcdTEwNzcgXHUxMDkwIFx1MTA4OCBcdTEwODYgIixcDQogICAgICAgICAibGFzdF9uYW1lIjoiXHVjMFx1MTAzMCBcdTEwNzQgXHUxMDcyIFx1MTA4NSBcdTEwODYgXHUxMDc0ICIsXA0KICAgICAgICAgInNlY29uZF9uYW1lIjoiXHVjMFx1MTA1MiBcdTEwODAgXHUxMDgyIFx1MTA4NiBcdTEwODMgXHUxMDcyIFx1MTA4MSBcdTEwODYgXHUxMDc0IFx1MTA4MCBcdTEwOTUgIixcDQogICAgICAgICAicGhvbmVzIjpbXA0KICAgICAgICAgICAgXHtcDQogICAgICAgICAgICAgICAidHlwZSI6Ik1PQklMRSIsXA0KICAgICAgICAgICAgICAgIm51bWJlciI6IiszODA1MDM0MTA4NzAiXA0KICAgICAgICAgICAgXH1cDQogICAgICAgICBdXA0KICAgICAgXH0sXA0KICAgICAgImNvbmZpZGFudF9wZXJzb24iOlx7XA0KICAgICAgICAgInJlbGF0aW9uX3R5cGUiOiJ0cnVzdGVlIixcDQogICAgICAgICAiZmlyc3RfbmFtZSI6Ilx1YzBcdTEwNTUgXHUxMDc3IFx1MTA5MCBcdTEwODggXHUxMDg2ICIsXA0KICAgICAgICAgImxhc3RfbmFtZSI6Ilx1YzBcdTEwMzAgXHUxMDc0IFx1MTA3MiBcdTEwODUgXHUxMDg2IFx1MTA3NCAiLFwNCiAgICAgICAgICJzZWNvbmRfbmFtZSI6Ilx1YzBcdTEwNTIgXHUxMDgwIFx1MTA4MiBcdTEwODYgXHUxMDgzIFx1MTA3MiBcdTEwODEgXHUxMDg2IFx1MTA3NCBcdTEwODAgXHUxMDk1ICIsXA0KICAgICAgICAgImJpcnRoX2RhdGUiOiIxOTkxLTA4LTE5VDAwOjAwOjAwLjAwMFoiLFwNCiAgICAgICAgICJiaXJ0aF9wbGFjZSI6Ilx1YzBcdTEwNDIgXHUxMTEwIFx1MTA4NSBcdTEwODUgXHUxMDgwIFx1MTA5NCBcdTExMDMgLCBcdTEwNTkgXHUxMDgyIFx1MTA4OCBcdTEwNzIgXHUxMTExIFx1MTA4NSBcdTEwNzIgIixcDQogICAgICAgICAiZ2VuZGVyIjoiTUFMRSIsXA0KICAgICAgICAgInRheF9pZCI6IjMxMjY1MDk4MTYiLFwNCiAgICAgICAgICJkb2N1bWVudHMiOltcDQogICAgICAgICAgICBce1wNCiAgICAgICAgICAgICAgICJ0eXBlIjoiUEFTU1BPUlQiLFwNCiAgICAgICAgICAgICAgICJudW1iZXIiOiIxMjA1MTgiLFwNCiAgICAgICAgICAgICAgICJpc3N1ZV9kYXRlIjoiMjAxNS0wNC0wN1QwMDowMDowMC4wMDBaIixcDQogICAgICAgICAgICAgICAiZXhwaXJ5X2RhdGUiOiIyMDE1LTA0LTA3VDAwOjAwOjAwLjAwMFoiLFwNCiAgICAgICAgICAgICAgICJpc3N1ZWRfYnkiOiJETVNVIlwNCiAgICAgICAgICAgIFx9XA0KICAgICAgICAgXSxcDQogICAgICAgICAicGhvbmVzIjpbXA0KICAgICAgICAgICAgXHtcDQogICAgICAgICAgICAgICAidHlwZSI6Ik1PQklMRSIsXA0KICAgICAgICAgICAgICAgIm51bWJlciI6IiszODA1MDM0MTA4NzAiXA0KICAgICAgICAgICAgXH1cDQogICAgICAgICBdXA0KICAgICAgXH0sXA0KICAgICAgInJlbmV3YWxfY29uc2VudCI6dHJ1ZSxcDQogICAgICAicGF0aWVudF9zaWduZWQiOnRydWUsXA0KICAgICAgImRpc2Nsb3N1cmVfY29uc2VudCI6dHJ1ZSxcDQogICAgICAicHJvY2Vzc19kYXRhX2NvbnNlbnQiOnRydWVcDQogICBcfSxcDQogICAiZW1wbG95ZWUiOlx7XA0KICAgICAgImlkIjoiZDI5MGYxZWUtNmM1NC00YjAxLTkwZTYtZDcwMTc0OGYwODUxIixcDQogICAgICAidGl0bGUiOiJcdWMwXHUxMDgzIFx1MTExMCBcdTEwODIgXHUxMDcyIFx1MTA4OCAiLFwNCiAgICAgICJwYXJ0eSI6XHtcDQogICAgICAgICAiaWQiOiJiMDc1ZjE0OC03ZjkzLTRmYzItYjJlYy0yZDgxYjE5YTliN2IiLFwNCiAgICAgICAgICJmaXJzdF9uYW1lIjoiXHVjMFx1MTA1NSBcdTEwNzcgXHUxMDkwIFx1MTA4OCBcdTEwODYgIixcDQogICAgICAgICAibGFzdF9uYW1lIjoiXHVjMFx1MTAzMCBcdTEwNzQgXHUxMDcyIFx1MTA4NSBcdTEwODYgXHUxMDc0ICIsXA0KICAgICAgICAgInNlY29uZF9uYW1lIjoiXHVjMFx1MTA1MiBcdTEwODAgXHUxMDgyIFx1MTA4NiBcdTEwODMgXHUxMDcyIFx1MTA4MSBcdTEwODYgXHUxMDc0IFx1MTA4MCBcdTEwOTUgIlwNCiAgICAgIFx9XA0KICAgXH0sXA0KICAgIm1zcCI6XHtcDQogICAgICAiaWQiOiJkMjkwZjFlZSIsXA0KICAgICAgIm5hbWUiOiJcdWMwXHUxMDUwIFx1MTA4MyBcdTExMTAgXHUxMDg1IFx1MTExMCBcdTEwODIgXHUxMDcyICBcdTEwNDEgXHUxMDg2IFx1MTA4OCBcdTEwODAgXHUxMDg5ICIsXA0KICAgICAgInNob3J0X05hbWUiOiJcdWMwXHUxMDQxIFx1MTA4NiBcdTEwODggXHUxMDgwIFx1MTA4OSAiLFwNCiAgICAgICJ0eXBlIjoiXHVjMFx1MTA2MCBcdTEwNTQgXHUxMDU1ICIsXA0KICAgICAgImVkcnBvdSI6IjU0MzIzNDU0MzIiXA0KICAgXH0sXA0KICAgInNjb3BlIjoiZmFtaWx5IGRvY3RvciIsXA0KICAgInBsYWludGV4dF9jb250ZW50IjoiRGVjbGFyYXRpb24gY29udGVudCJcDQpcfX2gggIuMIICKjCCAZOgAwIBAgIJANj0sC/v0hWYMA0GCSqGSIb3DQEBBQUAMBkxFzAVBgNVBAMUDlBLQ1MjNyBleGFtcGxlMB4XDTE3MDMyNzE0NTczM1oXDTE3MDQyNjE0NTczM1owGTEXMBUGA1UEAxQOUEtDUyM3IGV4YW1wbGUwgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAMuqrxE/0txT+ZVRKU1O85a8eaaUAOkbcAIy1mMoxQ+UBwcBeXt07Oxu32+p51HSY93Pp5AlDLKE48sjSNvMbTk5vtZ6g8sqMpZxlBVqHLkXLXYBMf2rmtE4hfV6yTP5YUJEs+a9cotsPN0r5KlI9g8aSpIj9Ie8mML5Vh1taQHNAgMBAAGjejB4MB0GA1UdDgQWBBTET2SwL5UfUMKDyhuBGCA+CaflnzBJBgNVHSMEQjBAgBTET2SwL5UfUMKDyhuBGCA+Cafln6EdpBswGTEXMBUGA1UEAxQOUEtDUyM3IGV4YW1wbGWCCQDY9LAv79IVmDAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBBQUAA4GBAF1uOGjUb6IVS28UqZ2qLc/kd2oNU2hOEuAp1YeaKRL2OaG4bTubJO1ejoxCJNfVj0FFw5PXIgjnw87JzkAy5KLDTiotQl8eknkd1bR3nIWINemck3GeGYkR8giG3gkNxz6ky1+63ZcoJkEiS46aneDhmS6BdH0V2G/3delos8+ZMYIBgDCCAXwCAQEwJjAZMRcwFQYDVQQDFA5QS0NTIzcgZXhhbXBsZQIJANj0sC/v0hWYMAkGBSsOAwIaBQCggbEwGAYJKoZIhvcNAQkDMQsGCSqGSIb3DQEHATAcBgkqhkiG9w0BCQUxDxcNMTcwMzI4MTE1NDEwWjAjBgkqhkiG9w0BCQQxFgQU5NSvVRVYHz5tG1GW8gXrjHSnLj8wUgYJKoZIhvcNAQkPMUUwQzAKBggqhkiG9w0DBzAOBggqhkiG9w0DAgICAIAwDQYIKoZIhvcNAwICAUAwBwYFKw4DAgcwDQYIKoZIhvcNAwICASgwDQYJKoZIhvcNAQEBBQAEgYCdqnN8gGXw9OUmtxOvQQgHK5Ni/4/2WQWj7rxERh5AI6rhXs/hh3DNS5Z5mN6wO8z47SQuedbsMQ5hf6+9BbKhXD7WKeU+DtGyfa1ner5/ubz6BeVvuT98D4PrzHlqNSpe/7AirrA70QVO9kPoFSmGtBG6JjaqaCZBYbvF9InPRw==` (string, required)
        + `signed_content_encoding`: base64 (string, required)

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + data (`Declaration_short`)
        

## Legal Entities [/api/legal_entities]

### Get Legal Entities - Deprecated [GET /api/legal_entities{?edrpou,legal_entity_id,settlement_id,type,owner_property,status,nhs_verified,page,page_size}]

Use this method to get list of legal entities filtering by parameters.
List consists of legal entities with parameter `is_active = true`.

+ Parameters
    + `edrpou`: `341086` (string, optional)
    + `legal_entity_id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, optional)
    + settlement_id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, optional)
    + type: MSP (enum, optional)
        - MSP
        + Default: MSP
    + owner_property: state (enum, optional)
        - state
        - private
    + status: ACTIVE (enum, optional)
        - ACTIVE
        - CLOSED
    + `nhs_verified`: false (boolean, optional)
    + page: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 300. Default: 50

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array)
            + (object)
                + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
                + include `Legal_Entity_Request_Public_Short`
                + status: ACTIVE (enum, required)
                    - ACTIVE
                    - CLOSED
                + `nhs_verified`: false (boolean, required)

### Get Legal Entity by ID - Deprecated [GET /api/legal_entities/{id}]

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + data (object)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + include `Legal_Entity_Request_Public_Short`
            + status: ACTIVE (enum, required)
                - ACTIVE
                - CLOSED
            + `nhs_verified`: false (boolean, required)
            + `nhs_reviewed`: false (boolean, required) - flag that shows whether legal entity was reviewed by nhs
            + nhs_comment: `comment` (string, optional) - nhs's comment
        + urgent (object, optional)
            + security (object)
                + `secret_key`: `secret_key` (string, required)
                + `client_id`: `client_id` (string, required)
                + `redirect_uri`: `redirect_uri` (string, required, fixed) - Redirect uri

### Create/Update Legal Entity - Deprecated [PUT]

Use this method to register a new Legal Entity or update existing one.

New Legal Entity is created with
status = ACTIVE
nhs_verified = false

Method receives signed message (pkcs7) including signed content, digital signature and signer public key.
All signature fields will be validated (including signer certificate authority).
There is a [**dummy method**](https://uaehealthapi.docs.apiary.io/reference/dummy-methods/dummy-for-legal-entity/create/update-legal-entity) that describes the latest legal entity data model and can be used as documentation.
Signed content MUST consists of JSON object with Legal Entity data:

```
{
  "name": "Клініка Ноунейм",
  "short_name": "Ноунейм",
  "public_name": "Ноунейм",
  "type": "MSP",
  "owner_property_type": "STATE",
  "legal_form": "140",
  "edrpou": "32323454",
  "kveds": [
    "86.10"
  ],
  "addresses": [
    {
      "type": "RESIDENCE",
      "country": "UA",
      "area": "Житомирська",
      "region": "Бердичівський",
      "settlement": "Київ",
      "settlement_type": "CITY",
      "settlement_id": "b075f148-7f93-4fc2-b2ec-2d81b19a9b7b",
      "street_type": "STREET",
      "street": "вул. Ніжинська",
      "building": "15",
      "apartment": "23",
      "zip": "02090"
    }
  ],
  "phones": [
    {
      "type": "MOBILE",
      "number": "+380503410870"
    }
  ],
  "email": "email@example.com",
  "website": "www.msp.com.ua",
  "receiver_funds_code": "12345",
  "beneficiary": "Борисов Борис Борисович",
  "owner": {
    "first_name": "Петро",
    "last_name": "Іванов",
    "second_name": "Миколайович",
    "tax_id": "3015492563",
    "birth_date": "1991-08-19",
    "gender": "MALE",
    "email": "email@example.com",
    "documents": [
      {
        "type": "PASSPORT",
        "number": "120518",
        "issued_by": "Рокитнянським РВ ГУ МВС Київської області",
        "issued_at": "2017-02-28"
      }
    ],
    "phones": [
      {
        "type": "MOBILE",
        "number": "+380503410870"
      }
    ],
    "position": "P6"
  },
  "medical_service_provider": {
    "licenses": [
      {
        "license_number": "fd123443",
        "issued_by": "Кваліфікацйна комісія",
        "issued_date": "2017-02-28",
        "expiry_date": "2017-02-28",
        "active_from_date": "2017-02-28",
        "what_licensed": "реалізація наркотичних засобів",
        "order_no": "ВА43234"
      }
    ],
    "accreditation": {
      "category": "SECOND",
      "issued_date": "2017-02-28",
      "expiry_date": "2017-02-28",
      "order_no": "fd123443",
      "order_date": "2017-02-28"
    }
  },
  "archive": [
    {
      "date": "2017-02-28",
      "place": "вул. Грушевського 15"
    }
  ],
  "security": {
    "redirect_uri": "https://example.com"
  },
  "public_offer": {
    "consent_text": "Consent text",
    "consent": true
  }
}
```

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

    + Attributes (object)
        + `signed_legal_entity_request`: `...` (string, required)
        + `signed_content_encoding`: base64 (string, required)

+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + data (object)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + include (`Legal_Entity_Response_Public`)
            + status: ACTIVE (enum, required)
                - ACTIVE
                - CLOSED
            + `nhs_verified`: false (boolean, required)
            + `nhs_reviewed`: false (boolean, required) - flag that shows whether legal entity was reviewed by nhs
            + nhs_comment: `comment` (string, optional) - nhs's comment
        + urgent (object, optional)
            + security (object)
                + `secret_key`: `secret_key` (string, required)
                + `client_id`: `client_id` (string, required)
                + `redirect_uri`: `redirect_uri` (string, required, fixed) - Redirect uri
            + employee_request_id: `d098aee7-5ab3-4a24-a6ba-811f9cf94c6d` - Employee request identifier

+ Response 201 (application/json)
    + Attributes (`Response__Process_OK`)
        + data (object)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + include `Legal_Entity_Response_Public`
            + status: ACTIVE (enum, required)
                - ACTIVE
                - CLOSED
            + `nhs_verified`: false (boolean, required)
            + `nhs_reviewed`: false (boolean, required) - flag that shows whether legal entity was reviewed by nhs
            + nhs_comment: `comment` (string, optional) - nhs's comment
            + is_active: true (boolean, required)
            + inserted_by: `A65C8369-CE3A-44D6-839B-8856E3DC4CA3` (string, required)
            + inserted_at: `2005-10-30 10:45` (string, required) - timestamp
            + created_by_mis_client_id:  `A65C8369-CE3A-44D6-839B-8856E3DC4CA3` (string, required)
            + updated_at: `1991-08-19T00:00:00.000Z` (string, required)
            + updated_by: `userid` (string, required)
        + urgent (object, optional)
            + security (object)
                + `secret_key`: `secret_key` (string, required)
                + `client_id`: `client_id` (string, required)
                + `redirect_uri`: `redirect_uri` (string, required, fixed) - Redirect uri
            + employee_request_id: `d098aee7-5ab3-4a24-a6ba-811f9cf94c6d` - Employee request identifier

## Employee Requests [/api/employee_requests]

### Create Employee Request - Deprecated[POST]

Employee_Request consist of the three mandatory parts:
* Person info
* Employee info
* User Info

**For DOCTOR or PHARMACIST:**
* Doctor ot Pharmacist info

Additionally to register/update Physician the `Doctor info` for Doctors and `Pharmacist info` for Pharmacist should be passed.

When the `Employee_Request` will be posted the Invitation e-mail with a request
secret token will be sent to the User specified in the request.

In case the employee doesn't have tax_id no_tax_id must be true and in fields tax_id input passport number (serial number in cyrillic without spaces)

It can be also used to update employee data. In this case `employee_id` should be passed in the payload.

User may accept or decline Invitation.

For changes to take effect employee must confirm the changes.

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

    + Attributes (object)
        + `employee_request` (Employee_Request)


+ Response 200 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (`Employee_Request_Details`)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + inserted_at: `2017-05-05T14:09:59.232112` (string, required)
            + updated_at: `2017-05-05T14:09:59.232112` (string, required)


## Client secret [/admin/clients]

### Refresh client secret - Deprecated [PATCH /admin/clients/{id}/refresh_secret]

This method is used to refresh client secret for existing client (legal entity)
Only legal entity owner can request new client secret for his own legal entity

**Scopes required:** `secret:refresh`

+ Parameters
    + id: `role-1380df72-275a-11e7-93ae-92361f002671` (string, required)

+ Request (application/json)

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Client_Deprecated`)


## Medication Request Requests [/api/medication_request_requests]

### Get Medication Request Request by ID - Deprecated [GET /api/medication_request_requests/{id}]

Use this method to obtain Medication request Request by ID.

+ Parameters
    + id: `48416485-cc98-46c4-8bba-e321de9e1ecd` (string, required) - request id

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + meta (Response__Meta)
        + data (object)
            + include `Medication_request_Request_Public_Response`



### Get Medication Request Requests - Deprecated [GET /api/medication_request_requests{?employee_id,person_id,status,intent,care_plan_id,encounter_id,page,page_size}]
Use this method to obtain list of Medication request Requests an `employee_id`. If you want to reduce amount of data that is going trough your application, use `status` filter and show only requests that Doctor is interested in current UI section.

Also we suggest use `employee_id` and `legal_entity_id` to make sure that end-user understands context of actions that he or she will perform.

Use [**Get Medication request requests by ID**](https://uaehealthapi.docs.apiary.io/#reference/public.-reimbursement/medication-request-requests/get-medication-request-request-by-id) to get Medication request Request by ID.

+ Parameters
    + `employee_id`: `7124259c-eeb1-4cbb-acac-ada2162675d1` (string, optional) - user_id of a doctor.
    + `person_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - person_id of a patient.
    + `status`: `NEW` (enum, optional). Default `NEW`
        - NEW
        - SIGNED
        - EXPIRED
        - REJECTED
    + intent: order (string, optional) - Medication request request intent
    + `care_plan_id`: `8838982b-6a77-4cb5-87cd-cdb82eb55364` (string, optional) - care plan identifier
    + `encounter_id`: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, optional) - encounter identifier
    + page: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 300. Default: 50

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + meta (Response__Meta)
        + data (object)
            + include `Medication_request_Request_Public_Response`


## Medication Requests [/api/medication_requests]

### Get Medication request by ID - Deprecated [GET /api/medication_requests/{id}]

Use this method to obtain Medication request by ID.

+ Parameters
    + id: `48416485-cc98-46c4-8bba-e321de9e1ecd` (string, required) - `Medication Request identifier OR request_number`

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + meta (Response__Meta)
        + data (object)
            + include `Medication_request_Public_Response_with_Medical_Program_min`
            + `medication_info` (object, required)
                + include `Innm_Dosage_for_Medication_request_Responce`
                + `medication_remaining_qty`: 10.23 (number, optional) - medication quantity allowed to dispense
                



### Get Medication requests - Deprecated [GET /api/medication_requests{?legal_entity_id,employee_id,person_id,status,request_number,created_from,created_to,medication_id,intent,care_plan_id,encounter_id,page,page_size}]

Use this method to obtain list of Medication request an `employee_id` or/and `person_id`. If you want to reduce amount of data that is going trough your application, use `status` filter and show only requests that Doctor is interested in current UI section.

Also we suggest use `employee_id` to make sure that end-user understands context of actions that he or she will perform.

Use [**Get Medication request by ID**](https://uaehealthapi.docs.apiary.io/#reference/public.-reimbursement/medication-request/get-medication-request-by-id) to get Medication Request by ID.

+ Parameters
    + `legal_entity_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - legal entity identifier.
    + `employee_id`: `7124259c-eeb1-4cbb-acac-ada2162675d1` (string, optional) - user_id of a doctor.
    + `person_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - person_id of a patient.
    + `status`: `ACTIVE` (enum, optional). Default `ACTIVE`
        - ACTIVE
        - COMPLETED
        - EXPIRED
        - REJECTED
    + `request_number` : `0000-243P-1X53-EH38` (string, optional) - Public medication request human readable number
    + `created_from`: `2017-08-17` (string, optional) - Medication request creation date period start, which is determined by the external system. Format *DATE '2017-08-17'*
    + `created_to`: `2017-08-30` (string, optional) - Medication request creation date period end, which is determined by the external system. Format *DATE '2017-08-30'*
    + `medication_id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b5b` (string, optional) - innm dosage id
    + intent: order (string, optional) - Medication request intent
    + `care_plan_id`: `8838982b-6a77-4cb5-87cd-cdb82eb55364` (string, optional) - care plan identifier
    + `encounter_id`: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, optional) - encounter identifier
    + page: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 300. Default: 50

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
   + Attributes (`Response_Collection_V2`)
        + data (array[`Medication_request_Public_Response_with_Medical_Program_min`])


## Medication Dispenses [api/medication_dispenses]

### Get Medication Dispenses list by Medication Request ID - Deprecated [GET /api/medication_requests/{id}/dispenses{?status}]

Use this method to obtain list of Medication Dispenses by doctor with Medication Request ID.

Only Medication dispenses linked to medication request id will be shown. If you want to reduce amount of data that is going trough your application, use `status` filter and show only dispenses that Doctor is interested in.

Use [**Get Medication dispense details**](https://uaehealthapi.docs.apiary.io/#reference/public.-reimbursement/medication-dispense/get-medication-dispense-details) to get Medication Dispense by ID.


+ Parameters
    + `id`: `a89f6a26-4221-4597-a1d2-542d5e40b565` (string, required)
    + status: PROCESSED (string, optional) - Status
    + page: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 300. Default: 50
    

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array)
            + (object)
                + include `Medication_Dispense_Response_without_2d_codes`



### Get Medication dispense details - Deprecated [GET /api/medication_dispenses/{id}]

Please see a similar endpoint with role context ("Get Medication dispense details by Pharmacy User") below. 

**Scopes required:** `medication_dispense:read`

+ Parameters
    + `id`: `a89f6a26-4221-4597-a1d2-542d5e40b565` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (object)
            + include `Medication_Dispense_Response`
    



### Get Medication dispenses by search params - Deprecated [GET /api/medication_dispenses{?id,medication_request_id,legal_entity_id,division_id,status,dispensed_from,dispensed_to,care_plan_id,page,page_size}]

Please see a similar endpoint with role context ("Get Medication dispenses by search params by Pharmacy User") below.

Use [**Get Medication dispense details**](https://uaehealthapi.docs.apiary.io/#reference/public.-reimbursement/medication-dispense/get-medication-dispense-details) to get Medication Dispense by ID.

**Scopes required:** `medication_dispense:read`

+ Parameters
    + id: `a89f6a26-4221-4597-a1d2-542d5e40b565` (string, optional) - Medication dispense ID
    + medication_request_id: `a89f6a26-4221-4597-a1d2-542d5e40b565` (string, optional) - Medication request ID
    + legal_entity_id: `a89f6a26-4221-4597-a1d2-542d5e40b565` (string, optional) - Legal entity ID
    + division_id: `a89f6a26-4221-4597-a1d2-542d5e40b565` (string, optional) - Division ID
    + status: PROCESSED (string, optional) - Status
    + dispensed_from: `2017-09-01` (string, optional) - date of dispense
    + dispensed_to: `2017-10-01` (string, optional) - date of dispense
    + `care_plan_id`: `8838982b-6a77-4cb5-87cd-cdb82eb55364` (string, optional) - care plan identifier
    + page: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 300. Default: 50


+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array)
            + (object)
                + include `Medication_Dispense_Response`



### Reject Medication Dispense - Deprecated [PATCH /api/medication_dispenses/{id}/actions/reject]

Please see a similar endpoint with role context ("Reject Medication Dispense by Pharmacy User") below. 

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (object)
            + include `Medication_Dispense_Response`
            
### Reject Medication Dispense by Pharmacy User [PATCH /api/pharmacy/medication_dispenses/{id}/actions/reject]

This method is used to reject medication dispense.

**Scopes required:** `medication_dispense:reject`

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (object)
            + include `Medication_Dispense_Response_for_Pharmacist`



### Process Medication Dispense - Deprecated [PATCH /api/medication_dispenses/{id}/actions/process]

This method is used to process created dispense

**Important**
Invoke Get Medication dispanse details to obtain previously created medication dispense. In order to process dispense `payment_id (optional)` and `payment_amount (optional, if medical program has funding sourse != NHS)` should be added.

Look at [**Dummy Process Medication Dispense**](https://uaehealthapi.docs.apiary.io/#reference/dummy-methods/dummy-for-medication-dispense/process-medication-dispense) for more details.

**Scopes required:** `medication_dispense:process`

+ Parameters
    + `id`: `a89f6a26-4221-4597-a1d2-542d5e40b565` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

    + Attributes (object)
        + `signed_medication_dispense`: `MIIWmAYJKoZIhvcNAQcCoIIWiTCCFoUCAQExCzAJBgUrDgMCGgUAMIISuwYJKoZIhvcNAQcBoIISrASCEqh7XHJ0ZjFcYW5zaVxhbnNpY3BnMTI1Mlxjb2NvYXJ0ZjE1MDRcY29jb2FzdWJydGY4MTANCntcZm9udHRibFxmMFxmc3dpc3NcZmNoYXJzZXQwIEhlbHZldGljYTt9DQp7XGNvbG9ydGJsO1xyZWQyNTVcZ3JlZW4yNTVcYmx1ZTI1NTtccmVkNzBcZ3JlZW41M1xibHVlOTY7XHJlZDI0OVxncmVlbjI0OVxibHVlMjUxO30NCntcKlxleHBhbmRlZGNvbG9ydGJsOztcY3NzcmdiXGMzNDUxMFxjMjc4NDNcYzQ1MDk4O1xjc3NyZ2JcYzk4MDM5XGM5ODAzOVxjOTg4MjQ7fQ0KXG1hcmdsMTQ0MFxtYXJncjE0NDBcdmlld3cxMDgwMFx2aWV3aDg0MDBcdmlld2tpbmQwDQpcZGVmdGFiNzIwDQpccGFyZFxwYXJkZWZ0YWI3MjBccGFydGlnaHRlbmZhY3RvcjANCg0KXGYwXGZzMjggXGNmMiBcY2IzIFxleHBuZDBcZXhwbmR0dzBca2VybmluZzANClx7XA0KICAgImlkIjoiYjA3NWYxNDgiLFwNCiAgICJzdGFydF9kYXRlIjoiMjAxNy0wMy0wMlQxMDo0NToxNi4wMDBaIixcDQogICAiZW5kX2RhdGUiOiIyMDE3LTAzLTAyVDEwOjQ1OjE2LjAwMFoiLFwNCiAgICJwZXJzb24iOlx7XA0KICAgICAgImZpcnN0X25hbWUiOiJcdWMwXHUxMDU1IFx1MTA3NyBcdTEwOTAgXHUxMDg4IFx1MTA4NiAiLFwNCiAgICAgICJsYXN0X25hbWUiOiJcdWMwXHUxMDMwIFx1MTA3NCBcdTEwNzIgXHUxMDg1IFx1MTA4NiBcdTEwNzQgIixcDQogICAgICAic2blic Vjb25kX25hbWUiOiJcdWMwXHUxMDUyIFx1MTA4MCBcdTEwODIgXHUxMDg2IFx1MTA4MyBcdTEwNzIgXHUxMDgxIFx1MTA4NiBcdTEwNzQgXHUxMDgwIFx1MTA5NSAiLFwNCiAgICAgICJiaXJ0aF9kYXRlIjoiMTk5MS0wOC0xOVQwMDowMDowMC4wMDBaIixcDQogICAgICAiYmlydGhfcGxhY2UiOiJcdWMwXHUxMDQyIFx1MTExMCBcdTEwODUgXHUxMDg1IFx1MTA4MCBcdTEwOTQgXHUxMTAzICwgXHUxMDU5IFx1MTA4MiBcdTEwODggXHUxMDcyIFx1MTExMSBcdTEwODUgXHUxMDcyICIsXA0KICAgICAgImdlbmRlciI6Ik1BTEUiLFwNCiAgICAgICJlbWFpbCI6ImVtYWlsQGV4YW1wbGUuY29tIixcDQogICAgICAidGF4X2lkIjoiMzEyNjUwOTgxNiIsXA0KICAgICAgIm5hdGlvbmFsX2lkIjoiQ0M3MTUwOTg1MjQzIixcDQogICAgICAic2VjcmV0Ijoic2VjcmV0IixcDQogICAgICAiZG9jdW1lbnRzIjpbXA0KICAgICAgICAgXHtcDQogICAgICAgICAgICAidHlwZSI6IlBBU1NQT1JUIixcDQogICAgICAgICAgICAibnVtYmVyIjoiMTIwNTE4IixcDQogICAgICAgICAgICAiaXNzdWVfZGF0ZSI6IjIwMTUtMDQtMDdUMDA6MDA6MDAuMDAwWiIsXA0KICAgICAgICAgICAgImV4cGlyeV9kYXRlIjoiMjAxNS0wNC0wN1QwMDowMDowMC4wMDBaIixcDQogICAgICAgICAgICAiaXNzdWVkX2J5IjoiRE1TVSJcDQogICAgICAgICBcfVwNCiAgICAgIF0sXA0KICAgICAgImFkZHJlc3NlcyI6W1wNCiAgICAgICAgIFx7XA0KICAgICAgICAgICAgInR5cGUiOiJSRVNJREVOQ0UiLFwNCiAgICAgICAgICAgICJjb3VudHJ5IjoiVUEiLFwNCiAgICAgICAgICAgICJhcmVhIjoiXHVjMFx1MTA0NiBcdTEwODAgXHUxMDkwIFx1MTA4NiBcdTEwODQgXHUxMDgwIFx1MTA4OCBcdTEwODkgXHUxMTAwIFx1MTA4MiBcdTEwNzIgIixcDQogICAgICAgICAgICAicmVnaW9uIjoiXHVjMFx1MTA0MSBcdTEwNzcgXHUxMDg4IFx1MTA3NiBcdTEwODAgXHUxMDk1IFx1MTExMCBcdTEwNzQgXHUxMDg5IFx1MTEwMCBcdTEwODIgXHUxMDgwIFx1MTA4MSAiLFwNCiAgICAgICAgICAgICJjaXR5IjoiXHVjMFx1MTA1MCBcdTEwODAgXHUxMTExIFx1MTA3NCAiLFwNCiAgICAgICAgICAgICJjaXR5X3R5cGUiOiJDSVRZIixcDQogICAgICAgICAgICAic3RyZWV0IjoiXHVjMFx1MTA3NCBcdTEwOTEgXHUxMDgzIC4gXHUxMDUzIFx1MTExMCBcdTEwNzggXHUxMDgwIFx1MTA4NSBcdTEwODkgXHUxMTAwIFx1MTA4MiBcdTEwNzIgIixcDQogICAgICAgICAgICAiYnVpbGRpbmciOiIxNSIsXA0KICAgICAgICAgICAgImFwYXJ0bWVudCI6IjIzIixcDQogICAgICAgICAgICAiemlwIjoiMDIwOTAiXA0KICAgICAgICAgXH1cDQogICAgICBdLFwNCiAgICAgICJwaG9uZXMiOltcDQogICAgICAgICBce1wNCiAgICAgICAgICAgICJ0eXBlIjoiTU9CSUxFIixcDQogICAgICAgICAgICAibnVtYmVyIjoiKzM4MDUwMzQxMDg3MCJcDQogICAgICAgICBcfVwNCiAgICAgIF0sXA0KICAgICAgImF1dGhlbnRpY2F0aW9uX21ldGhvZHMiOltcDQogICAgICAgICBce1wNCiAgICAgICAgICAgICJ0eXBlIjoiU01TIixcDQogICAgICAgICAgICAicGhvbmVfbnVtYmVyIjoiKzM4MDUwODg4NzcwMCJcDQogICAgICAgICBcfVwNCiAgICAgIF0sXA0KICAgICAgImVtZXJnZW5jeV9jb250YWN0Ijpce1wNCiAgICAgICAgICJmaXJzdF9uYW1lIjoiXHVjMFx1MTA1NSBcdTEwNzcgXHUxMDkwIFx1MTA4OCBcdTEwODYgIixcDQogICAgICAgICAibGFzdF9uYW1lIjoiXHVjMFx1MTAzMCBcdTEwNzQgXHUxMDcyIFx1MTA4NSBcdTEwODYgXHUxMDc0ICIsXA0KICAgICAgICAgInNlY29uZF9uYW1lIjoiXHVjMFx1MTA1MiBcdTEwODAgXHUxMDgyIFx1MTA4NiBcdTEwODMgXHUxMDcyIFx1MTA4MSBcdTEwODYgXHUxMDc0IFx1MTA4MCBcdTEwOTUgIixcDQogICAgICAgICAicGhvbmVzIjpbXA0KICAgICAgICAgICAgXHtcDQogICAgICAgICAgICAgICAidHlwZSI6Ik1PQklMRSIsXA0KICAgICAgICAgICAgICAgIm51bWJlciI6IiszODA1MDM0MTA4NzAiXA0KICAgICAgICAgICAgXH1cDQogICAgICAgICBdXA0KICAgICAgXH0sXA0KICAgICAgImNvbmZpZGFudF9wZXJzb24iOlx7XA0KICAgICAgICAgInJlbGF0aW9uX3R5cGUiOiJ0cnVzdGVlIixcDQogICAgICAgICAiZmlyc3RfbmFtZSI6Ilx1YzBcdTEwNTUgXHUxMDc3IFx1MTA5MCBcdTEwODggXHUxMDg2ICIsXA0KICAgICAgICAgImxhc3RfbmFtZSI6Ilx1YzBcdTEwMzAgXHUxMDc0IFx1MTA3MiBcdTEwODUgXHUxMDg2IFx1MTA3NCAiLFwNCiAgICAgICAgICJzZWNvbmRfbmFtZSI6Ilx1YzBcdTEwNTIgXHUxMDgwIFx1MTA4MiBcdTEwODYgXHUxMDgzIFx1MTA3MiBcdTEwODEgXHUxMDg2IFx1MTA3NCBcdTEwODAgXHUxMDk1ICIsXA0KICAgICAgICAgImJpcnRoX2RhdGUiOiIxOTkxLTA4LTE5VDAwOjAwOjAwLjAwMFoiLFwNCiAgICAgICAgICJiaXJ0aF9wbGFjZSI6Ilx1YzBcdTEwNDIgXHUxMTEwIFx1MTA4NSBcdTEwODUgXHUxMDgwIFx1MTA5NCBcdTExMDMgLCBcdTEwNTkgXHUxMDgyIFx1MTA4OCBcdTEwNzIgXHUxMTExIFx1MTA4NSBcdTEwNzIgIixcDQogICAgICAgICAiZ2VuZGVyIjoiTUFMRSIsXA0KICAgICAgICAgInRheF9pZCI6IjMxMjY1MDk4MTYiLFwNCiAgICAgICAgICJkb2N1bWVudHMiOltcDQogICAgICAgICAgICBce1wNCiAgICAgICAgICAgICAgICJ0eXBlIjoiUEFTU1BPUlQiLFwNCiAgICAgICAgICAgICAgICJudW1iZXIiOiIxMjA1MTgiLFwNCiAgICAgICAgICAgICAgICJpc3N1ZV9kYXRlIjoiMjAxNS0wNC0wN1QwMDowMDowMC4wMDBaIixcDQogICAgICAgICAgICAgICAiZXhwaXJ5X2RhdGUiOiIyMDE1LTA0LTA3VDAwOjAwOjAwLjAwMFoiLFwNCiAgICAgICAgICAgICAgICJpc3N1ZWRfYnkiOiJETVNVIlwNCiAgICAgICAgICAgIFx9XA0KICAgICAgICAgXSxcDQogICAgICAgICAicGhvbmVzIjpbXA0KICAgICAgICAgICAgXHtcDQogICAgICAgICAgICAgICAidHlwZSI6Ik1PQklMRSIsXA0KICAgICAgICAgICAgICAgIm51bWJlciI6IiszODA1MDM0MTA4NzAiXA0KICAgICAgICAgICAgXH1cDQogICAgICAgICBdXA0KICAgICAgXH0sXA0KICAgICAgInJlbmV3YWxfY29uc2VudCI6dHJ1ZSxcDQogICAgICAicGF0aWVudF9zaWduZWQiOnRydWUsXA0KICAgICAgImRpc2Nsb3N1cmVfY29uc2VudCI6dHJ1ZSxcDQogICAgICAicHJvY2Vzc19kYXRhX2NvbnNlbnQiOnRydWVcDQogICBcfSxcDQogICAiZW1wbG95ZWUiOlx7XA0KICAgICAgImlkIjoiZDI5MGYxZWUtNmM1NC00YjAxLTkwZTYtZDcwMTc0OGYwODUxIixcDQogICAgICAidGl0bGUiOiJcdWMwXHUxMDgzIFx1MTExMCBcdTEwODIgXHUxMDcyIFx1MTA4OCAiLFwNCiAgICAgICJwYXJ0eSI6XHtcDQogICAgICAgICAiaWQiOiJiMDc1ZjE0OC03ZjkzLTRmYzItYjJlYy0yZDgxYjE5YTliN2IiLFwNCiAgICAgICAgICJmaXJzdF9uYW1lIjoiXHVjMFx1MTA1NSBcdTEwNzcgXHUxMDkwIFx1MTA4OCBcdTEwODYgIixcDQogICAgICAgICAibGFzdF9uYW1lIjoiXHVjMFx1MTAzMCBcdTEwNzQgXHUxMDcyIFx1MTA4NSBcdTEwODYgXHUxMDc0ICIsXA0KICAgICAgICAgInNlY29uZF9uYW1lIjoiXHVjMFx1MTA1MiBcdTEwODAgXHUxMDgyIFx1MTA4NiBcdTEwODMgXHUxMDcyIFx1MTA4MSBcdTEwODYgXHUxMDc0IFx1MTA4MCBcdTEwOTUgIlwNCiAgICAgIFx9XA0KICAgXH0sXA0KICAgIm1zcCI6XHtcDQogICAgICAiaWQiOiJkMjkwZjFlZSIsXA0KICAgICAgIm5hbWUiOiJcdWMwXHUxMDUwIFx1MTA4MyBcdTExMTAgXHUxMDg1IFx1MTExMCBcdTEwODIgXHUxMDcyICBcdTEwNDEgXHUxMDg2IFx1MTA4OCBcdTEwODAgXHUxMDg5ICIsXA0KICAgICAgInNob3J0X05hbWUiOiJcdWMwXHUxMDQxIFx1MTA4NiBcdTEwODggXHUxMDgwIFx1MTA4OSAiLFwNCiAgICAgICJ0eXBlIjoiXHVjMFx1MTA2MCBcdTEwNTQgXHUxMDU1ICIsXA0KICAgICAgImVkcnBvdSI6IjU0MzIzNDU0MzIiXA0KICAgXH0sXA0KICAgInNjb3BlIjoiZmFtaWx5IGRvY3RvciIsXA0KICAgInBsYWludGV4dF9jb250ZW50IjoiRGVjbGFyYXRpb24gY29udGVudCJcDQpcfX2gggIuMIICKjCCAZOgAwIBAgIJANj0sC/v0hWYMA0GCSqGSIb3DQEBBQUAMBkxFzAVBgNVBAMUDlBLQ1MjNyBleGFtcGxlMB4XDTE3MDMyNzE0NTczM1oXDTE3MDQyNjE0NTczM1owGTEXMBUGA1UEAxQOUEtDUyM3IGV4YW1wbGUwgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAMuqrxE/0txT+ZVRKU1O85a8eaaUAOkbcAIy1mMoxQ+UBwcBeXt07Oxu32+p51HSY93Pp5AlDLKE48sjSNvMbTk5vtZ6g8sqMpZxlBVqHLkXLXYBMf2rmtE4hfV6yTP5YUJEs+a9cotsPN0r5KlI9g8aSpIj9Ie8mML5Vh1taQHNAgMBAAGjejB4MB0GA1UdDgQWBBTET2SwL5UfUMKDyhuBGCA+CaflnzBJBgNVHSMEQjBAgBTET2SwL5UfUMKDyhuBGCA+Cafln6EdpBswGTEXMBUGA1UEAxQOUEtDUyM3IGV4YW1wbGWCCQDY9LAv79IVmDAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBBQUAA4GBAF1uOGjUb6IVS28UqZ2qLc/kd2oNU2hOEuAp1YeaKRL2OaG4bTubJO1ejoxCJNfVj0FFw5PXIgjnw87JzkAy5KLDTiotQl8eknkd1bR3nIWINemck3GeGYkR8giG3gkNxz6ky1+63ZcoJkEiS46aneDhmS6BdH0V2G/3delos8+ZMYIBgDCCAXwCAQEwJjAZMRcwFQYDVQQDFA5QS0NTIzcgZXhhbXBsZQIJANj0sC/v0hWYMAkGBSsOAwIaBQCggbEwGAYJKoZIhvcNAQkDMQsGCSqGSIb3DQEHATAcBgkqhkiG9w0BCQUxDxcNMTcwMzI4MTE1NDEwWjAjBgkqhkiG9w0BCQQxFgQU5NSvVRVYHz5tG1GW8gXrjHSnLj8wUgYJKoZIhvcNAQkPMUUwQzAKBggqhkiG9w0DBzAOBggqhkiG9w0DAgICAIAwDQYIKoZIhvcNAwICAUAwBwYFKw4DAgcwDQYIKoZIhvcNAwICASgwDQYJKoZIhvcNAQEBBQAEgYCdqnN8gGXw9OUmtxOvQQgHK5Ni/4/2WQWj7rxERh5AI6rhXs/hh3DNS5Z5mN6wO8z47SQuedbsMQ5hf6+9BbKhXD7WKeU+DtGyfa1ner5/ubz6BeVvuT98D4PrzHlqNSpe/7AirrA70QVO9kPoFSmGtBG6JjaqaCZBYbvF9InPRw==` (string, required)
        + `signed_content_encoding`: base64 (string, required)


+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (object)
            + include `Medication_Dispense_Response`
            


### Create Medication Dispense - Deprecated [POST /api/medication_dispenses{?code}]

This method is used to dispense medications to patient
Full list of all validations can be found [here](https://e-health-ua.atlassian.net/wiki/spaces/EH/pages/583403856/Create+Medication+Dispense)

If medical program has setting with parameter `skip_medication_dispense_sign` = true then  fields `payment_amount (optional, if medical program has funding sourse != NHS)` and `payment_id (optional)` should be submitted. In this case process of medication dispense will be performed on create (w/o using digital sign)

If medical program has funding sourse NHS, fields `sell_amount`, `sell_price`, `payment_amount`, `discount_amount` must be submitted.

**Important** In case medications are dispensed to patient under specific medical program, program participant id must be provided also

**Scopes required:** `medication_dispense:write`

+ Parameters
    + `code`: `3114` (string, optional)

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9

    + Attributes (object)
        + medication_dispense (object)
            + include `Medication_Dispense_Request`

+ Response 201 (application/json)
    + Attributes (`Response__Process_OK`)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (`Medication_Dispense_Response`)

+ Response 409 (application/json)
    + Attributes (`Response_Error`)
        + meta (Response__Meta)
            + code: 409 (number)
        + error (Response__Error)
            + message: `Invalid division dls status` (string)
            + type: `request_conflict` (string)







# Data Structures
## Responses
### `Response_Collection`
+ meta (Response__Meta, fixed-type)
+ data (array[], fixed-type)
+ paging (Response__Pagination, fixed-type)

### `Response_Collection_V2`
+ meta (Response__Meta, fixed-type)
+ data (array[], fixed-type)
+ paging (`Response__Pagination__V2`, fixed-type)

### `Response_Collection_OK`
+ meta (Response__Meta, fixed-type)
+ data (array[], fixed-type)

### `Response_OK`
+ meta (Response__Meta, fixed-type)
+ data (object, fixed-type)

### `Response__Process_OK`
+ meta (Response__Meta, fixed-type)

### `Response_verification_by_phone`
+ `phone_number`: `+380508887700` (string, required)

### `Response_Error`
+ meta (Response__Meta, fixed-type)
    + code: 400 (number)
+ error (Response__Error, fixed-type)

### `Response__Meta`
+ code: 200 (number) - HTTP response code.
+ url: https://example.com/resource (string) - URL to requested resource.
+ type (enum) - Type of data that is located in `data` attribute.
    - object (string) - `data` attribute is a JSON object.
    - list (string) - `data` attribute is a list.
+ `request_id`: `6617aeec-15e2-4d6f-b9bd-53559c358f97#17810` (string) - [Request ID](https://docs.apimanifest.apiary.io/#introduction/interacting-with-api/request-id). Send it with `X-Request-ID` header.

### `Response__Error`
+ type: type_atom (string) - Atom that represents error type.
+ message: Error description (string) - Human-readable error message. This is for developers, not end-users.

### `Response__Error_DuplicateEntity`
+ type: `object_already_exists` (string) - Atom that represents error type.
+ message: This API already exists (string) - Human-readable error message. This is for developers, not end-users.

### `Response__Error_ValidationFailed`
+ type: validation_failed (string) - type of an error.
+ message: Validation failed. You can find validators description at our API Manifest: https://docs.apimanifest.apiary.io/#introduction/interacting-with-api/errors. (string)
+ invalid (array)
    + `entry_type`: `json_data_proprty` (string) - Type of error.
    + entry: $.cvv (string) - JSON Path to an invalid property.
    + rules (array)
        + rule: required (string) - String constant that represents validation rule type. List of all types can be found in [API Manifest](https://docs.apimanifest.apiary.io/#introduction/interacting-with-api/errors).
        + params (array) - Validation Parameters.
        
### `Response__Error_ValidationFailed_Extended`
+ `error` (object)
    + type: validation_failed (string) - type of an error.
    + message: Validation failed. You can find validators description at our API Manifest: https://docs.apimanifest.apiary.io/#introduction/interacting-with-api/errors. (string)
    + invalid (array)
        + (object)
            + `entry`: `$.cvv` (string, required) - JSON Path to an invalid property.
            + `entry_type`: `json_data_property` (string, required) - Type of error.
            + `rules` (array)
                + (object)
                    + `description`: `value is not allowed in enum` (string, required) - value of error might be different
                    + params (object) - Validation Parameters.
                        + `values` (array)
                    + `raw_description`: `value is not allowed in enum` (string, required) - value of error might be different
                    + `rule`: required (string) - String constant that represents validation rule type. List of all types can be found in [API Manifest](https://docs.apimanifest.apiary.io/#introduction/interacting-with-api/errors).
                            - required
                            - inclusion

### `Response__Pagination`
+ limit: 20 (number) - A limit on the number of objects to be returned, between 1 and 100. Default: 50.
+ cursors (object)
    + `starting_after`: 56c31536a60ad644060041af (string) - A cursor for use in pagination. An object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    + `ending_before`: 56c31536a60ad644060041aa (string) - A cursor for use in pagination. An object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
+ size: 50 (number) - Total number of objects in collection.
+ has_more: false (boolean) - Is this collection have more data to load in the same style as last request loaded it.

### `Response__Pagination__V2`
+ page_number: 2 (number) - Page number.
+ page_size: 50 (number) - A limit on the number of objects to be returned, between 1 and 300. Default: 50
+ total_entries: 1000 (number) - Total number of objects in collection.
+ total_pages: 23 (number) - Total number of pages.

## Persons
### `Person`
+ first_name: Петро (string, required)
+ last_name: Іванов (string, required)
+ second_name: Миколайович (string, optional)
+ birth_date: `1991-08-19` (string, required)
+ birth_country: `Україна` (string, required)
+ birth_settlement: `Вінниця` (string, required)
+ gender: MALE, FEMALE (enum[string], required)
+ email: email@example.com (string, optional)
+ tax_id: 3126509816 (string, optional)
+ secret: secret (string, required)
+ documents (array[`Document`], required)
+ addresses (array[`Address`], required)
+ phones (array[`Phone`], optional)
+ `authentication_methods` (array[`Authentication_Method`], required)
+ preferred_way_communication: email (enum, optional) - the way how a patient wants to be reached
    - email
    - phone

### `Person_v2`
+ id: `13001c60-45a0-4b5a-b425-9505e1de18bd` (string, optional)
+ first_name: Петро (string, required)
+ last_name: Іванов (string, required)
+ second_name: Миколайович (string, optional)
+ birth_date: `1991-08-19` (string, required)
+ birth_country: `Україна` (string, required)
+ birth_settlement: `Вінниця` (string, required)
+ gender: MALE, FEMALE (enum[string], required)
+ email: email@example.com (string, optional)
+ tax_id: 3126509816 (string, optional)
+ secret: secret (string, required)
+ documents (array[`Document`], required)
+ addresses (array[`Address`], required)
+ phones (array[`Phone`], optional)
+ `authentication_methods` (array[`Authentication_Method_Patient_Request`], required)
+ preferred_way_communication: email (enum, optional) - the way how a patient wants to be reached
    - email
    - phone
    

### `Person_for_update`
+ id: `14b8f6fa-dc59-4e86-9bbd-dfb35a4b1713` (string, required)
+ first_name: Петро (string, required)
+ last_name: Іванов (string, required)
+ second_name: Миколайович (string, optional)
+ birth_date: `1991-08-19` (string, required)
+ birth_country: `Україна` (string, required)
+ birth_settlement: `Вінниця` (string, required)
+ gender: MALE, FEMALE (enum[string], required)
+ email: email@example.com (string, optional)
+ tax_id: 3126509816 (string, optional)
+ secret: secret (string, required)
+ documents (array[`Document`], required)
+ addresses (array[`Address`], required)
+ phones (array[`Phone`], optional)
+ preferred_way_communication: email (enum, optional) - the way how a patient wants to be reached
    - email
    - phone
    

### `Confidant_Person`
+ relation_type: PRIMARY (enum, required)
    - PRIMARY
    - SECONDARY
+ first_name: Петро (string, required)
+ last_name: Іванов (string, required)
+ second_name: Миколайович (string, optional)
+ birth_date: `1991-08-19` (string, required)
+ birth_country: `Україна` (string, required)
+ birth_settlement: `Вінниця` (string, required)
+ gender: MALE, FEMALE (enum[string], required)
+ email: confidant_person@example.com (string, optional)
+ tax_id: 3126509816 (string, optional)
+ secret: `secret` (string, required)
+ unzr: `19900101-00099` (string, optional)
+ preferred_way_communication: email (enum, optional) - the way how a patient wants to be reached
    - email
    - phone
+ documents_person (array[`Document`], required)
+ documents_relationship (array[`RelationshipDocument`], required)
+ phones (array[`Phone`], optional)

### `Confidant_Person_v2`
+ relation_type: PRIMARY (enum, required)
    - PRIMARY
    - SECONDARY
+ first_name: Петро (string, required)
+ last_name: Іванов (string, required)
+ second_name: Миколайович (string, optional)
+ birth_date: `1972-10-26` (string, required)
+ birth_country: `Україна` (string, required)
+ birth_settlement: `Вінниця` (string, required)
+ gender: MALE, FEMALE (enum[string], required)
+ tax_id: 2659719350 (string, optional)
+ secret: `secret` (string, required)
+ unzr: `19900101-00099` (string, optional)
+ preferred_way_communication: email (enum, optional) - the way how a patient wants to be reached
    - email
    - phone
+ documents_person (array[`Document`], required)
+ documents_relationship (array[`RelationshipDocument`], required)
+ phones (array[`Phone`], optional)
+ email: emaill@example.com (string, optional)

### `Confidant_Person_v3`
+ person_id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, optional)
+ relation_type: PRIMARY (enum, required)
    - PRIMARY
    - SECONDARY
+ documents_relationship (array[`RelationshipDocument`], required)
+ first_name: Петро (string, optional)
+ last_name: Іванов (string, optional)
+ second_name: Миколайович (string, optional)
+ birth_date: `1972-10-26` (string, optional)
+ birth_country: `Україна` (string, optional)
+ birth_settlement: `Вінниця` (string, optional)
+ gender: MALE, FEMALE (enum[string], optional)
+ tax_id: 2659719350 (string, optional)
+ secret: `secret` (string, optional)
+ unzr: `19900101-00099` (string, optional)
+ preferred_way_communication: email (enum, optional) - the way how a patient wants to be reached
    - email
    - phone
+ documents_person (array[`Document`], optional)
+ phones (array[`Phone`], optional)
+ email: emaill@example.com (string, optional)

### `Confidant_Person_PIS`
+ person_id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ documents_relationship (array[`RelationshipDocument`], required)

### `Confidant_Person_Masked`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ relationship_verification_details (object, required)
    + `verification_status`: `VERIFICATION_NEEDED` (string, required) - status of relationship verification according to `PERSONS_RELATIONSHIP_VERIFICATION_STATUSES` dictionary
    + `verification_reason`: `MANUAL_CREATED_BY_DOCTOR` (string, required) - how current relationship verification status has been set according to `PERSONS_RELATIONSHIP_VERIFICATION_STATUSES` dictionary
    + `verification_comment`: `Підтверджено на підставі свідоцтва про народження` (string, optional) - Relationship verification status description set by NHS or Doctor
+ confidant_person (object, required)
    + person_id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - confidant person identifier
    + name: Петров А.А. (string, required) - confidant person name, masked
    + gender: MALE, FEMALE (enum[string], optional)
    + tax_id: ******50 (string, optional) - confidant person tax id, masked
    + no_tax_id: false (boolean, required) - fact of declining tax_id
    + unzr: `**********99` (string, optional) - unzr (if exists), masked
    + documents_person (array)
        + (object)
            + type: PASSPORT (string, required) - `Dictionary DOCUMENT_TYPE`
            + number: ******18 (string, required) - confidant person document issue number, masked
    + phones (array)
        + (object)
            + type: MOBILE (string, required) - `Dictionary PHONE_TYPE` type of phone Land Line or Mobile. At least one of type must be present. Each type can be represented only once.
            + number: +38093*****85 (string, required) - confidant person phone number, masked

### `Create_Confidant_Person_request`
+ confidant_person_relationship (object, required)
    + confidant_person_id: `7b100a9c-daaa-490e-b88d-2a911059b055` (string, required) - identifier of person who will become confidant
    + documents_relationship (array, required)
        + (object)
            + type: DEPRIVATION_OF_PARENTAL_RIGHTS (string, required) - `Dictionary DOCUMENT_DEPRIVATION_OF_CONFIDANT_RIGHTS_TYPE`
            + number: АА120518 (string, required) - document issue number
            + issued_by: `Рокитнянським РВ ГУ МВС Київської області` (string, optional) - authority which issued the document
            + issued_at: `2017-02-28` (string, optional) - the date when document was issued
            + active_to: `2025-08-19` (string, optional) - the date then period of document validity ends.

### `Deactivate_Confidant_Person_request`
+ confidant_person_relationship (object, required)
    + id: `7b100a9c-daaa-490e-b88d-2a911059b055` (string, required) - identifier of person relationship that will be deactivated
    + documents_relationship (array, required)
        + (object)
            + type: DEPRIVATION_OF_PARENTAL_RIGHTS (string, required) - `Dictionary DOCUMENT_DEPRIVATION_OF_CONFIDANT_RIGHTS_TYPE`
            + number: АА120518 (string, required) - document issue number
            + issued_by: `Рокитнянським РВ ГУ МВС Київської області` (string, optional) - authority which issued the document
            + issued_at: `2017-02-28` (string, optional) - the date when document was issued
+ authorize_with: `cc949559-5dfe-420f-ac05-065e443b2cc6` (string, required) - identifier of person's auth method

### `Emergency_Contact`
+ first_name: Петро (string, required)
+ last_name: Іванов (string, required)
+ second_name: Миколайович (string, optional)
+ phones (array[`Phone`], required)

### `Person_Request`
+ include `Person`
+ emergency_contact (object, required)
    + include `Emergency_Contact`
+ `confidant_person` (array[`Confidant_Person`], optional) - Should be set if this Person is disabled, underage, etc.

### `Person_Full`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ Include Person_Request
+ confident_persons (array[`Person`])  - Should be set if this Person is disabled, underage, etc.
+ is_active: true (boolean, required)
+ merged_ids (array)
    + (object)
        + id: `7bca069f-21e4-4546-90cf-b65e3f39d93d` (string, required)
+ inserted_at: `2017-03-02T10:45:16.000Z` (string, optional)
+ updated_at: `2017-03-02T10:45:16.000Z` (string, optional)

### `Person_Minimal`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ first_name: Петро (string, required)
+ last_name: Іванов (string, required)
+ second_name: Миколайович (string, optional)

### `Person_Minimal_Declaration_List`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ first_name: Петро (string, required)
+ last_name: Іванов (string, required)
+ second_name: Миколайович (string, optional)
+ birth_date: 1991-08-19 (string, required)
+ `verification_status`: `NOT_VERIFIED` (string, required) - Search declarations by person verification status(according to `PERSON_VERIFICATION_STATUSES` dictionary)

### `Person_Minimal_Declaration_Request`
+ first_name: Петро (string, optional)
+ last_name: Іванов (string, optional)
+ second_name: Миколайович (string, optional)
+ id: `9402935f-39bf-4636-a61e-5fe3227b8d39`(string, optional)

### `Person_Minimal_Contract`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ party (object)
    + first_name: Петро (string, required)
    + last_name: Іванов (string, required)
    + second_name: Миколайович (string, optional)

### `Person_Short`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ first_name: Петро (string, required)
+ last_name: Іванов (string, required)
+ second_name: Миколайович (string, optional)
+ birth_date: `1991-08-19` (string, required) - ISO Datetime.
+ gender (enum, required)
    - FEMALE
    - MALE
+ tax_id: 3126509816 (string, optional)
+ phones (array[`Phone`], optional)
+ birth_settlement: Вінниця (string, required)
+ birth_country: Україна (string, required) - країна народження

### `Person_Short_Declaration`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ first_name: Петро (string, required)
+ last_name: Іванов (string, required)
+ second_name: Миколайович (string, optional)
+ birth_date: `1991-08-19` (string, required) - ISO Datetime.
+ gender (enum, required)
    - FEMALE
    - MALE
+ tax_id: 3126509816 (string, optional)
+ phones (array[`Phone`], optional)
+ birth_settlement: Вінниця (string, required)
+ birth_country: Україна (string, required) - країна народження
+ `verification_status`: `NOT_VERIFIED` (string, required)
+ `emergency_contact` (Emergency_Contact, required)
+ `confidant_person` (array[`Confidant_Person`], optional) - Should be set if this Person is disabled, underage, etc

### `Person_Medication_Request`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ short_name: Петро І. І. (string, required)
+ age: 35 (number, required) - full years between medication request date and birth date

### `Person_Medication_Request_Private`
+ id: `01352B970879A80E19B60C15C8E488DA26CABC3B9F7FA71684904A99DBD5ACE4` (string, required)
+ short_name: Петро І. І. (string, required)
+ age: 35 (number, required) - full years between medication request date and birth date

### `Person_Medication_Request_for_Pharmacist`
+ short_name: Петро І. І. (string, required)
+ age: 35 (number, required) - full years between medication request date and birth date

### `Person_Medication_Request_Sign`
+ age: 35 (number, required) - full years between medication request date and birth date
+ first_name: Петро (string, required)
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ last_name: Іванов (string, required)
+ second_name: Миколайович (string, optional)

### `Authentication_Method`
+ type (enum, required)
    - OTP
    - OFFLINE
    - NA
+ phone_number: `+38093*****85` (string, optional)

### `Authentication_Method_for_request`
+ type (enum, required)
    - OTP
    - OFFLINE
+ phone_number: `+38093*****81` (string, optional)


### `Authentication_Method_Patient_Request`
+ type (enum, required)
    - THIRD_PERSON
    - OTP
    - OFFLINE
    - NA
+ phone_number: `+380508887700` (string, optional) - required for type = OTP
+ value: `c282f8a9-e709-40aa-94b4-dde1402bf4b6` (string, optional) - requered for type = THIRD_PERSON
+ alias: `husband` (string, optional) - required it type = THIRD_PERSON,  and optional for type = OTP or OFFLINE

### `Authentication_Methods_Patient_Response`
- One of
    + object()
        + type (enum, required)
            - OTP
            - OFFLINE
            - NA
        + phone_number: `+38093*****85` (string, optional)
    + object()
        + type: THIRD_PERSON
        + alias: `husband` (string, required)
        + authentication_reference (object, optional)
            + type (enum, required)
                - OTP
                - OFFLINE
            + phone_number: `+38093*****91` (string, optional)

### `Authentication_Method_Patient_Response`
+ type (enum, required)
    - OTP
    - THIRD_PERSON
    - OFFLINE
    - NA
+ phone_number: `+380508887700` (string, optional)
+ alias: `husband` (string, optional)

### `Person_auth_methods`

+ id: `b94893f5-b66b-4431-b023-d5b5c037caef` (string, required)
+ type (enum, required)
    - THIRD_PERSON
+ value: `34d4aca0-ee15-4d2d-9ab8-336e5ba1f9c7` (string, optional) - mpi identifier of `third_person`. It s required for type = `THIRD_PERSON`
+ alias: `husband` (string, optional)
+ ended_at: `2020-01-10 18:23:34.217335` (string, optional) - ISO Datetime
+ started_at: `2020-01-01 18:23:34.217335` (string, optional) - ISO Datetime
+ is_active: true (boolean, required)
+ person_id: `50320ee5-2bca-472c-a1a0-28e2e003ec2a` (string, optional)
+ confidant_person (object, optional)
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - confidant person identifier
    + name: Петров А.А. (string, required) - confidant person name, masked
    + gender: MALE, FEMALE (enum[string], optional)
    + tax_id: ******50 (string, optional) - confidant person tax id, masked
    + no_tax_id: false (boolean, required) - fact of declining tax_id
    + unzr: `**********99` (string, optional) - unzr (if exists), masked
    + documents_person (array)
        + (object)
            + type: PASSPORT (string, required) - `Dictionary DOCUMENT_TYPE`
            + number: ******18 (string, required) - confidant person document issue number, masked
    + phones (array)
        + (object)
            + type: MOBILE (string, required) - `Dictionary PHONE_TYPE` type of phone Land Line or Mobile. At least one of type must be present. Each type can be represented only once.
            + number: +38093*****85 (string, required) - confidant person phone number, masked
+ inserted_at: `2021-11-09T00:00:00.000Z` (string, required) - ISO Datetime
+ updated_at: `2021-11-09T00:00:00.000Z` (string, optional) - ISO Datetime
+ inserted_by: `A65C8369-CE3A-44D6-839B-8856E3DC4CA3` (string, required)
+ updated_by: `A65C8369-CE3A-44D6-839B-8856E3DC4CA3` (string, optional)

### `Person_auth_methods_v2`

+ id: `b84893f5-b66b-4431-b023-d5b5c037caef` (string, required)
+ type (enum, required)
    - OTP
+ phone_number: `+38093*****85` (string, optional) - it's required for type = OTP
+ ended_at: `2020-01-10 18:23:34.217335` (string, optional) - ISO Datetime
+ started_at: `2020-01-01 18:23:34.217335` (string, optional) - ISO Datetime
+ is_active: true (boolean, required)
+ inserted_by: `A65C8369-CE3A-44D6-839B-8856E3DC4CA3` (string, required)
+ updated_by: `A65C8369-CE3A-44D6-839B-8856E3DC4CA3` (string, optional)
+ person_id: `50320ee5-2bca-472c-a1a0-28e2e003ec2a` (string, optional)
+ inserted_at: `2021-11-09T00:00:00.000Z` (string, required) - ISO Datetime
+ updated_at: `2021-11-09T00:00:00.000Z` (string, optional) - ISO Datetime

### `cabinet_person_response`
+ include `Person`
+ unzr: `19900101-00099` (string, optional)
+ `emergency_contact`(`Emergency_Contact`)
+ `process_disclosure_data_consent`: true (boolean, required)
+ `verification`(`Person_Verification_Details`)

### `Authentication_methods_request`
  - One of
    + object()
        + action: DEACTIVATE (string, required)
        + authentication_method(object)
            + id: `7b100a9c-daaa-490e-b88d-2a911059b055` (string, required)
    + object()
        + action: INSERT (string, required)
        + authentication_method(object)
            + type(enum, required)
                - THIRD_PERSON
                - OTP
                - OFFLINE
            + phone_number: `+380976549872` (string, optional)
            + value: `7b100a9c-daaa-490e-b88d-2a911059b0d2` (string, optional) - identifier of active person. It's required when type= THIRd_PERSON 
            + alias: `husband` (string, optional) - it's required id type = THIRD_PERSON
    + object()
        + action: UPDATE (string, required)
        + authentication_method(object)
            + id: `7b100a9c-daaa-490e-b88d-2a911059b055` (string, required)
            + alias: `wife` (string, optional)

### `Justification_Response`
+ id: `b94893f5-b66b-4431-b023-d5b5c037caef` (string, required) - identifier of justification in the system
+ expires_at: `2021-11-10T18:23:34.217Z` (string, required) - date and time when justification expires, ISO Datetime.
+ consumer(object, required)
    + client_id: `b94893f5-b66b-4431-b023-d5b5c037cae1` (string, required) - identifier of the client which consumed patient's data
    + client_name: `Національна служба здоров'я України` (string, required) - client's name
+ reason: `Просмотр медичних даних пацієнта Олександрова Олександра Володимировича 12.12.2012 р.н згідно судового рішення №АБ-23234234-434` (string, required) - reason why patient's data has been monitored by consumer
+ `reason_type`(Codeable_Concept,required)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/justification_reason_types` (string, required)
            + code: `default` (string, required)
    + text: `Інше` (string, optional)
+ status: `active` (enum, required) - justification status
    - active
    - terminated
+ inserted_at: `2021-11-09T00:00:00.000Z` (string, required) - ISO Datetime.
+ updated_at: `2021-11-09T00:00:00.000Z` (string, required) - ISO Datetime.

### `Person_Verification_Details`
+ `verification_status`: `NOT_VERIFIED` (string, required) - status of person verification according to `PERSON_VERIFICATION_STATUSES` dictionary
+ `details` (object)
    + `drfo` (object)
        + `verification_status`: `NOT_VERIFIED` (string, required) - status of person DRFO verification according to `PERSON_VERIFICATION_STATUSES` dictionary
        + `verification_reason`: `AUTO` (string, required) - how current DRFO verification status has been set according to `PERSON_VERIFICATION_STATUS_REASONS` dictionary
        + `result`: `12` (string, optional) - result of person DRFO synchronization according to `DRFO_RESULT` dictionary
    + `dracs_death` (object)
        + `verification_status`: `NOT_VERIFIED` (string, required) - status of person DRACS death verification according to `PERSON_VERIFICATION_STATUSES` dictionary
        + `verification_reason`: `AUTO` (string, required) - how current DRACS death verification status has been set according to `PERSON_VERIFICATION_STATUS_REASONS` dictionary
        + `verification_comment`: `Необхідно повторно підтвердити факт смерті у пацієнта` (string, optional) - DRACS death verification status description set by NHS or Doctor
    + `nhs` (object)
        + `verification_status`: `NOT_VERIFIED` (string, required) - status of person manual NHS verification according to `PERSON_VERIFICATION_STATUSES` dictionary
        + `verification_reason`: `AUTO` (string, required) - how current manual NHS verification status has been set according to `PERSON_VERIFICATION_STATUS_REASONS` dictionary
        + `verification_comment`: `Бракує даних паспорту пацієнта та його ІПН` (string, optional) - verification status description set by NHS in case NOT_VERIFIED


## `Merge_Candidates`
### `Merge_Candidate`
+ id: `8aa4d353-a58f-45f6-b5ce-a89a9cc39391` (string, optional) - Unique record identifier
+ person_id: `50320ee5-2bca-472c-a1a0-28e2e003ec2a` (string, optional) - Merge candidate identifier
+ `master_person_id`: `cb553981-4b7f-45ec-8f73-f77faf2dcb22` (string, optional) - Master person identifier
+ status: NEW (enum, optional) - Record status
        - NEW
        - MERGED
+ inserted_at: `1991-08-19T00:00:00.000Z` (string, required) - ISO Datetime.
+ updated_at: `1991-08-19T00:00:00.000Z` (string, required) - ISO Datetime.


## DeclarationRequests
### `crud_Declaration_request_get`
+ id: `73FF38F0-A873-4DB4-A47A-CC0F3D7A6D6A` (string, required)
+ data: `json structure` (string, required)
+ status: `pending` (string, required)
+ inserted_by: `A65C8369-CE3A-44D6-839B-8856E3DC4CA3` (string, required)
+ inserted_at: `2005-10-30 10:45` (string, required) - timestamp
+ updated_at: `2005-10-30 10:45` (string, required) - timestamp

### `declaration_request_patch`
+ id: `73FF38F0-A873-4DB4-A47A-CC0F3D7A6D6A` (string, required)
+ status: `pending` (string, required)

### `media_content`
+ type: `PASSPORT` (string, required)
+ url: `https://storage.ehealth.world` (string, required)

### `contract_media_content`
+ type: `SIGNED_CONTENT` (string, required)
+ url: `https://storage.ehealth.world` (string, required)

## Declarations
### Declaration
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - id of the signed document stored on the Media content storage
+ person_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ employee_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ division_id: `d290f1ee-6c54-4b01-90e6-d701748f0851`m (string, required)
+ `legal_entity_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851`m (string, required)
+ scope (enum, required)
    - family_doctor
+ start_date: `2017-03-02` (string, required)
+ end_date: `2017-03-02` (string, required)
+ signed_at: `2017-03-02T10:45:16.000Z` (string, required)
+ status (enum, optional)
    - active
    - closed

### `crud_Declaration_patch`
+ status (enum, optional)
    - active
    - closed

### `crud_Declaration_get`
+ include `Declaration`
+ inserted_at: `1991-08-19T00:00:00.000Z` (string, required)
+ inserted_by: `userid` (string, required)
+ updated_at: `1991-08-19T00:00:00.000Z` (string, required)
+ updated_by: `userid` (string, required)

### `Declaration_Request_Public`
+ person(`Person_Request`, required) - Object that described a Patient. Confidant person should be set for disabled persons, underage persons, etc.
    + person_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - person id, that should be changed.
    + patient_signed: false (boolean, required) - Факт подписания заявки на декларацию.
    + `process_disclosure_data_consent`: true (boolean, required) - Согласие на раскрытие персональных данных
+ `employee_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - Employee ID with `type=DOCTOR` selected from available Employees as a third contract party.
+ division_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - Registered Medical Service Provider Division identifier.
+ scope (enum, required)
    - family_doctor
+ overlimit: false (boolean, optional) - when doctor needs more declaration then in declaration_limit is, overlimit should be true

### `Declaration_Request_Public_v2`
+ person (object, required) - Object that described a Patient. Confidant person should be set for disabled persons, underage persons, etc.
    + id: `3b1d9e46-1c47-4ce8-89f9-15658f77d784` (string, optional) - person id, that should be changed.
    + first_name: Петро (string, required)
    + last_name: Іванов (string, required)
    + second_name: Миколайович (string, optional)
    + birth_date: `1991-08-19` (string, required)
    + birth_country: `Україна` (string, required)
    + birth_settlement: `Вінниця` (string, required)
    + gender: MALE, FEMALE (enum[string], required)
    + email: email@example.com (string, optional)
    + tax_id: 3126509816 (string, optional)
    + secret: secret (string, required)
    + documents (array, required)
        + (object)
            + type: PASSPORT (string, required) - `Dictionary DOCUMENT_TYPE`
            + number: АА120518 (string, required) - document issue number
            + issued_by: `Рокитнянським РВ ГУ МВС Київської області` (string, required) - authority which issued the document
            + issued_at: `2017-02-28` (string, required) - the date when document was issued
            + expiration_date: `2027-02-28` (string, optional) - the date when document expired, is necessery for those documents which has this date, ex, Temporary certificate, etc.
    + addresses (array[`Address`], required)
    + phones (array[`Phone`], optional)
    + `authentication_methods` (array[`Authentication_Method`], required)
    + preferred_way_communication: email (enum, optional) - the way how a patient wants to be reached
        - email
        - phone
    + `no_tax_id`: false (boolean, required) - fact of declining tax_id
    + unzr: `19900101-00011` (string, optional) - the record number in the demographic register
    + emergency_contact (object, required)
        + include `Emergency_Contact`
    + `confidant_person` (array[`Confidant_Person_v2`], optional) - Should be set if this Person is disabled, underage, etc.
    + patient_signed: false (boolean, required) - Факт подписания заявки на декларацию.
    + `process_disclosure_data_consent`: true (boolean, required) - Согласие на раскрытие персональных данных
+ `employee_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - Employee ID with `type=DOCTOR` selected from available Employees as a third contract party.
+ division_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - Registered Medical Service Provider Division identifier.
+ scope (enum, required)
    - family_doctor
+ overlimit: false (boolean, optional) - when doctor needs more declaration then in declaration_limit is, overlimit should be true

### `Declaration_Request_Public_Response`
+ start_date: `2017-03-02` (string, required) - Should be defined on the client side.
+ end_date: `2017-03-02` (string, required) - Will be defined on eHealth side if it's not set.
+ person(`Person_Request`, required) - Object that described a Patient. Confidant person should be set for disabled persons, underage persons, etc.
    + patient_signed: false (boolean, required) - Факт подписания заявки на декларацию.
    + `process_disclosure_data_consent`: true (boolean, required) - Согласие на раскрытие персональных данных
+ scope (enum, required)
    - family doctor
+ declaration_number: `0000-12H4-245D` (string, required) - unique number of declaration.
+ declaration_id: `8311ab82-e341-4da0-8a95-235ec9885e23` (string, required) - presetted id for future declaration

### `Declaration_Request_Public_Response_v2`
+ start_date: `2017-03-02` (string, required) - Should be defined on the client side.
+ end_date: `2017-03-02` (string, required) - Will be defined on eHealth side if it's not set.
+ person (object, required) - Object that described a Patient. Confidant person should be set for disabled persons, underage persons, etc.
    + include `Person`
    + `no_tax_id`: false (boolean, required) - fact of declining tax_id
    + unzr: `19900101-00011` (string, optional) - the record number in the demographic register
    + emergency_contact (object, required)
        + include `Emergency_Contact`
    + `confidant_person` (array[`Confidant_Person_v2`], optional) - Should be set if this Person is disabled, underage, etc.
    + patient_signed: false (boolean, required) - Факт подписания заявки на декларацию.
    + `process_disclosure_data_consent`: true (boolean, required) - Согласие на раскрытие персональных данных
+ scope (enum, required)
    - family doctor
+ declaration_number: `0000-12H4-245D` (string, required) - unique number of declaration.
+ declaration_id: `8311ab82-e341-4da0-8a95-235ec9885e23` (string, required) - presetted id for future declaration

### `Declaration_Request_Details_Public`
+ start_date: `2017-03-02` (string, required)
+ end_date: `2017-03-02` (string, required)
+ person(`Person_Request`, required)
    + patient_signed: false (boolean, required) - Факт подписания заявки на декларацию.
    + `process_disclosure_data_consent`: true (boolean, required) - Согласие на раскрытие персональных данных
+ employee (`Employee_Minimal`)
+ `legal_entity` (`Medical_Service_Provider`)
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ division (`Division_Details`)
+ scope (enum, required)
    - family doctor
+ overlimit: false (boolean, optional) - when doctor needs more declaration then in declaration_limit is, overlimit should be true
+ `declaration_request_id`: `74a6fae6-4207-4e03-a136-f2e70c6b0c02` (string, required)

### `Declaration_Request_Online`
+ `person_id`: `4d0d790c-cbf1-44f5-ab21-ba8db67da161` (string, required) - Person ID
+ `employee_id`: `1a8b10ea-ba09-40f2-8f9e-55608e9208c6` (string, required) - Employee ID with `type=DOCTOR` selected from available Employees as a third contract party.
+ `division_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - Registered Medical Service Provider Division identifier.

### `Declaration_Request_Online_Response`
+ start_date: `2017-03-02` (string, required) - Should be defined on the client side.
+ end_date: `2017-03-02` (string, required) - Will be defined on eHealth side if it's not set.
+ person(object, required) - Object that described a Patient. Confidant person should be set for disabled persons, underage persons, etc.
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Person ID
+ overlimit: false (boolean, optional) - when doctor needs more declaration then in declaration_limit is, overlimit should be true

### `Declaration_Request_Short`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - unique id of declaration
+ start_date: `2017-03-02` (string, required)
+ end_date: `2025-03-02` (string, required)
+ status (enum, required)
    - active
    - pending_verification
    - terminated
+ person (Person_Minimal_Declaration_Request)
+ employee (`Employee_Minimal`)
+ `legal_entity` (`MSP_Short`)
+ division (`Division_Short_List`)

### `Declaration_Response_Short_v3`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - unique id of declaration
+ start_date: `2017-03-02` (string, required)
+ end_date: `2025-03-02` (string, required)
+ status (enum, required)
    - NEW
    - APPROVED
    - SIGNED
    - REJECTED
    - CANCELLED
+ status_reason: `not relevant` (string, optional) - `Dictionary DECLARATION_REQUEST_STATUS_REASON`
+ channel: `MIS` (enum, required) - channel where declaration request was originated
    - MIS
    - PIS
    - CABINET
+ person_id: `4fa9cac7-8950-44db-9294-0daba56eed58` (string, optional) - unique id of person
+ employee_id: `60a797bb-43c5-463d-86ee-68e354cb626b` (string, required) - unique id of employee
+ division_id : `4c9c9c6e-5230-444d-8b65-7678da1c1ab3` (string, required) - unique id of dividion
+ `legal_entity_id` : `56b8bcd7-78b8-4ff7-8a60-a48e54a6ef57` (string, required) unique id of LE
+ authorize_with: `cc949559-5dfe-420f-ac05-065e443b2cc6` (string, optional)- identifier of person's auth method
+ parent_declaration_id: `8c7753fc-a647-435f-8e43-4ff4546431f6` (string, optional) - identifier of parent declaration  

### `Declaration_short`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ start_date: `2017-03-02` (string, required)
+ end_date: `2017-03-02` (string, required)
+ signed_at: `2017-03-02T00:00:00.000Z` (string, required)
+ status (enum, required)
    - active
    - pending_verification
    - terminated
+ scope (enum, required)
    - family doctor
+ `declaration_request_id`: `74a6fae6-4207-4e03-a136-f2e70c6b0c02` (string, required)
+ person_id: `5fb57a5d-1457-430e-9678-c81cec72779f` (string, required)
+ `legal_entity_id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ employee_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ division_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ inserted_at: `2017-07-06T16:54:05.161571Z` (string, required)
+ is_active: true (boolean, required)
+ reason: `manual_employee` (string, optional)
+ reason_description: `Згідно постанови 1 від 10.01.2017` (string, optional)

### `Declaration_short_v3`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ start_date: `2017-03-02` (string, required)
+ end_date: `2017-03-02` (string, required)
+ signed_at: `2017-03-02T00:00:00.000Z` (string, required)
+ status (enum, required)
    - active
    - pending_verification
    - terminated
+ `declaration_request_id`: `74a6fae6-4207-4e03-a136-f2e70c6b0c02` (string, required)
+ person_id: `5fb57a5d-1457-430e-9678-c81cec72779f` (string, required)
+ `legal_entity_id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ employee_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ division_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ inserted_at: `2017-07-06T16:54:05.161571Z` (string, required)
+ is_active: true (boolean, required)
+ reason: `manual_employee` (string, optional)
+ reason_description: `Згідно постанови 1 від 10.01.2017` (string, optional)

### `Declaration_Details`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ declaration_number: `0000-12H4-245D` (string, required) - unique number of declaration.
+ start_date: `2017-03-02` (string, required)
+ end_date: `2017-03-02` (string, required)
+ signed_at: `2017-03-02T00:00:00.000Z` (string, required)
+ person(`Person_Short_Declaration`)
+ employee (`Employee_Declaration_Short`)
+ division (`Division_Short`)
+ `legal_entity` (MSP_Details)
+ status (enum, required)
    - active
    - pending_verification
    - terminated
+ scope (enum, optional)
    - family_doctor
+ `declaration_request_id`: `74a6fae6-4207-4e03-a136-f2e70c6b0c02` (string, required)
+ inserted_at: `2017-03-02T10:45:16.000Z` (string, optional)
+ updated_at: `2017-03-02T10:45:16.000Z` (string, optional)
+ reason: `manual_employee` (string, optional)
+ reason_description: `Згідно постанови 1 від 10.01.2017` (string, optional)

### `Declaration_Details_Cabinet`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ declaration_number: `0000-12H4-245D` (string, required) - unique number of declaration.
+ start_date: `2017-03-02` (string, required)
+ end_date: `2017-03-02` (string, required)
+ person (`Person_Short`)
    + unzr: `19910819-00011` (string, optional) - the record number in the demographic register
    + `emergency_contact` (`Emergency_Contact`, required)
    + `confidant_person` (array[`Confidant_Person`], optional) - Should be set if this Person is disabled, underage, etc.
+ employee (`Employee_Declaration_Short`)
+ division (`Division_Details_Cabinet`)
+ `legal_entity` (MSP_Details)
+ status (enum, required)
    - active
    - pending_verification
    - terminated
+ scope (enum, required)
    - family_doctor
+ `declaration_request_id`: `74a6fae6-4207-4e03-a136-f2e70c6b0c02` (string, required)
+ content: `Declaration content` (string, required) - HTML document that MUST be shown to a end-user and signed by hes key. - Should be defined on the client side.
+ inserted_at: `2017-03-02T10:45:16.000Z` (string, optional)
+ updated_at: `2017-03-02T10:45:16.000Z` (string, optional)

### `Declaration_Request_Details_Cabinet`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ declaration_number: `0000-12H4-245D` (string, required) - unique number of declaration.
+ start_date: `2017-03-02` (string, required)
+ end_date: `2017-03-02` (string, required)
+ seed: hash (string, required)
+ person_id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ person(`Person`)
    + `emergency_contact` (`Emergency_Contact`, required)
    + `confidant_person` (array[`Confidant_Person`], optional) - Should be set if this Person is disabled, underage, etc.
+ employee (Employee_Declaration_Short)
+ `legal_entity` (`MSP_Details`)
+ division (`Division_Details_Cabinet`)
+ status (enum, required)
    - new
    - approved
    - signed
    - expired
+ scope (enum, required)
    - family_doctor
+ `declaration_id`: `74a6fae6-4207-4e03-a136-f2e70c6b0c02` (string, required)
+ content: `Declaration content` (string, required) - HTML document that MUST be shown to a end-user and signed by hes key. - Should be defined on the client side.
+ inserted_at: `2017-03-02T10:45:16.000Z` (string, optional)
+ updated_at: `2017-03-02T10:45:16.000Z` (string, optional)
+ channel: `CABINET` (enum, required) - channel that invoke declaration create service

### `Declaration_list_cabinet`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - unique id of declaration
+ declaration_number: `0000-12H4-245D` (string, required) - unique number of declaration.
+ start_date: `2017-03-02` (string, required)
+ status (enum, required)
    - active
    - pending_verification
    - terminated
+ person (Person_Minimal)
+ employee (`Employee_Minimal_cabinet`)
+ `legal_entity` (`MSP_Short`)
+ division (`Division_Short_List`)

### `Declaration_requests_list_cabinet`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - unique id of declaration request
+ declaration_number: `0000-12H4-245D` (string, required) - unique number of declaration.
+ start_date: `2017-03-02` (string, required)
+ status (enum, required)
    - new
    - approved
    - signed
    - expired
+ person (Person_Minimal)
+ employee (`Employee_Minimal_cabinet`)
+ `legal_entity` (`MSP_Short`)
+ division (`Division_Short_List`)

### `Declaration_Details_Public`
+ start_date: `2017-03-02` (string, required)
+ end_date: `2017-03-02` (string, required)
+ person(`Person_Request`, required)
    + id: `5fb57a5d-1457-430e-9678-c81cec72779f` (string)
    + patient_signed: false (boolean, required) - Факт подписания заявки на декларацию.
    + `process_disclosure_data_consent`: true (boolean, required) - Согласие на раскрытие персональных данных
    + `legal_entity` (`Medical_Service_Provider`)
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ division (`Division_Details`)
+ scope (enum, required)
    - family doctor
+ `declaration_request_id`: `74a6fae6-4207-4e03-a136-f2e70c6b0c02` (string, required)

### `Decl_req_data_to_be_signed`
+ id: `b099f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
status: `APPROVED` (string, required)
+ declaration_number: `0000-12H4-245D` (string, required) - unique number of declaration.
+ declaration_id: `8311ab82-e341-4da0-8a95-235ec9885e23` (string, required) - presetted id for future declaration
+ start_date: `2017-03-02` (string, required) - Should be defined on the client side.
+ end_date: `2017-03-02` (string, required) - Will be defined on eHealth side if it's not set.
+ content: `Declaration content` (string, required) - HTML document that MUST be shown to a  - Should be defined on the client side.end-user and signed by hes key.
+ channel: `MIS` (enum, required) - channel that invoke declaration create service
+ person (object, required) - Object that described a Patient. Confidant person should be set for disabled persons, underage persons, etc.
    + id: `5fb57a5d-1457-430e-9678-c81cec72779f` (string,required )
    + include `Person_info_Public_DRv3`
    + patient_signed: false (boolean, required) - Факт подписания заявки на декларацию.
    + `process_disclosure_data_consent`: true (boolean, required) - Согласие на раскрытие персональных данных
+ employee (`Employee_Minimal`, required)
+ `legal_entity` (`Medical_Service_Provider`, required)
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ division (`Division_Declaration`, required)
+ seed: hash (string, required) - Hash of previous block in declarations chain or other random component that should be signed with declaration.
+ authorize_with: `cc949559-5dfe-420f-ac05-065e443b2cc6` (string, optional)- identifier of person's auth method




### `Person_info_Public`
+ first_name: Петро (string, required)
+ last_name: Іванов (string, required)
+ second_name: Миколайович (string, optional)
+ birth_date: `2009-07-05` (string, required)
+ birth_country: `Україна` (string, required)
+ birth_settlement: `Вінниця` (string, required)
+ gender: MALE, FEMALE (enum[string], required)
+ email: email@example.com (string, optional)
+ no_tax_id: false (boolean, required)
+ tax_id: 3999869394 (string, optional)
+ secret: secret (string, required)
+ documents (array, required)
    + (object)
        + type: BIRTH_CERTIFICATE (string, required) - `Dictionary DOCUMENT_TYPE`
        + number: АА120518 (string, required) - document issue number
        + issued_by: `Рокитнянським РВ ГУ МВС Київської області` (string, required) - authority which issued the document
        + issued_at: `2017-02-28` (string, required) - the date when document was issued
        + expiration_date: `2027-02-28` (string, optional) - the date when document expired, is necessery for those documents which has this date, ex, Temporary certificate, etc.
+ addresses (array[`Address`], required)
+ phones (array[`Phone`], optional)
+ `authentication_methods` (array[`Authentication_Method_Patient_Request`], optional)
+ unzr: `20090705-00011` (string, optional) - the record number in the demographic register
+ emergency_contact (object, required)
    + include `Emergency_Contact`
+ `confidant_person` (array[`Confidant_Person_v2`], optional) - Should be set if this Person is disabled, underage, etc.


### `Person_info_Public_request_v2_with_new_confidant_data`
+ first_name: Петро (string, required)
+ last_name: Іванов (string, required)
+ second_name: Миколайович (string, optional)
+ birth_date: `2009-07-05` (string, required)
+ birth_country: `Україна` (string, required)
+ birth_settlement: `Вінниця` (string, required)
+ gender: MALE, FEMALE (enum[string], required)
+ email: email@example.com (string, optional)
+ no_tax_id: false (boolean, required)
+ tax_id: 3999869394 (string, optional)
+ secret: secret (string, required)
+ documents (array, required)
    + (object)
        + type: BIRTH_CERTIFICATE (string, required) - `Dictionary DOCUMENT_TYPE`
        + number: АА120518 (string, required) - document issue number
        + issued_by: `Рокитнянським РВ ГУ МВС Київської області` (string, required) - authority which issued the document
        + issued_at: `2017-02-28` (string, required) - the date when document was issued
        + expiration_date: `2027-02-28` (string, optional) - the date when document expired, is necessery for those documents which has this date, ex, Temporary certificate, etc.
+ addresses (array[`Address`], required)
+ phones (array[`Phone`], optional)
+ `authentication_methods` (array[`Authentication_Method_Patient_Request`], optional)
+ unzr: `20090705-00011` (string, optional) - the record number in the demographic register
+ emergency_contact (object, required)
    + include `Emergency_Contact`
+ `confidant_person` (object, optional) - Must be set if this Person is disabled, underage, etc.
    + include `Confidant_Person_PIS`

   
### `Person_info_Public_response_v2_with_new_confidant_data`
+ first_name: Петро (string, required)
+ last_name: Іванов (string, required)
+ second_name: Миколайович (string, optional)
+ birth_date: `2009-07-05` (string, required)
+ birth_country: `Україна` (string, required)
+ birth_settlement: `Вінниця` (string, required)
+ gender: MALE, FEMALE (enum[string], required)
+ email: email@example.com (string, optional)
+ no_tax_id: false (boolean, required)
+ tax_id: 3999869394 (string, optional)
+ secret: secret (string, required)
+ documents (array, required)
    + (object)
        + type: BIRTH_CERTIFICATE (string, required) - `Dictionary DOCUMENT_TYPE`
        + number: АА120518 (string, required) - document issue number
        + issued_by: `Рокитнянським РВ ГУ МВС Київської області` (string, required) - authority which issued the document
        + issued_at: `2017-02-28` (string, required) - the date when document was issued
        + expiration_date: `2027-02-28` (string, optional) - the date when document expired, is necessery for those documents which has this date, ex, Temporary certificate, etc.
+ addresses (array[`Address`], required)
+ phones (array[`Phone`], optional)
+ `authentication_methods` (array[`Authentication_Method_Patient_Request`], optional)
+ unzr: `20090705-00011` (string, optional) - the record number in the demographic register
+ emergency_contact (object, required)
    + include `Emergency_Contact`
+ `confidant_person` (array, optional) - Must be set if this Person is disabled, underage, etc.
    + (object)
        + include `Confidant_Person_PIS`

### `Patient_short`
+ person_id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Id створеної персони
+ updated_at: `2017-03-02T00:00:00.000Z` (string, required)
+ status: SIGNED (string, optional)
+ id: `74a6fae6-4207-4e03-a136-f2e70c6b0c02` (string, required) - request id
+ inserted_at: `2017-07-06T16:54:05.161571Z` (string, required)


### `Patient_Request_Short`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - unique id of declaration
+ status: APPROVED (enum, required)
    - NEW
    - APPROVED
    - SIGNED
    - REJECTED
    - CANCELLED
+ person (object, optional) - Object that described a Patient
    + first_name: Петро (string, required)
    + last_name: Іванов (string, required)
    + second_name: Миколайович (string, optional)


### `Person_info_Public_DRv3`
+ first_name: Петро (string, required)
+ last_name: Іванов (string, required)
+ second_name: Миколайович (string, optional)
+ birth_date: `2009-07-05` (string, required)
+ birth_country: `Україна` (string, required)
+ birth_settlement: `Вінниця` (string, required)
+ gender: MALE, FEMALE (enum[string], required)
+ email: email@example.com (string, optional)
+ `no_tax_id`: false (boolean, required)
+ tax_id: 3999869394 (string, optional)
+ secret: secret (string, required)
+ documents (array, required)
    + (object)
        + type: BIRTH_CERTIFICATE (string, required) - `Dictionary DOCUMENT_TYPE`
        + number: АА120518 (string, required) - document issue number
        + issued_by: `Рокитнянським РВ ГУ МВС Київської області` (string, required) - authority which issued the document
        + issued_at: `2017-02-28` (string, required) - the date when document was issued
        + expiration_date: `2027-02-28` (string, optional) - the date when document expired, is necessery for those documents which has this date, ex, Temporary certificate, etc.
+ addresses (array[`Address`], required)
+ phones (array[`Phone`], optional)
+ `authentication_methods` (array, required)
    + (object)
        + type (enum, required)
            - OTP
            - OFFLINE
        + phone_number: `+38093*****85` (string, optional)
+ unzr: `20090705-00011` (string, optional) - the record number in the demographic register
+ emergency_contact (object, required)
    + include `Emergency_Contact`
+ `confidant_person` (array[`Confidant_Person_v2`], optional) - Should be set if this Person is disabled, underage, etc.
+ preferred_way_communication: email (enum, optional) - the way how a patient wants to be reached
    - email
    - phone

### `Person_info_Public_PIS`
+ first_name: Петро (string, required)
+ last_name: Іванов (string, required)
+ second_name: Миколайович (string, optional)
+ birth_date: `2009-07-05` (string, required)
+ birth_country: `Україна` (string, required)
+ birth_settlement: `Вінниця` (string, required)
+ gender: MALE, FEMALE (enum[string], required)
+ email: email@example.com (string, optional)
+ no_tax_id: false (boolean, required)
+ tax_id: 3999869394 (string, optional)
+ secret: secret (string, required)
+ documents (array, required)
    + (object)
        + type: BIRTH_CERTIFICATE (string, required) - `Dictionary DOCUMENT_TYPE`
        + number: АА120518 (string, required) - document issue number
        + issued_by: `Рокитнянським РВ ГУ МВС Київської області` (string, required) - authority which issued the document
        + issued_at: `2017-02-28` (string, required) - the date when document was issued
        + expiration_date: `2027-02-28` (string, optional) - the date when document expired, is necessery for those documents which has this date, ex, Temporary certificate, etc.
+ addresses (array[`Address`], required)
+ phones (array[`Phone`], optional)
+ `authentication_methods` (array[`Authentication_Method_Patient_Request`], optional)
+ unzr: `20090705-00011` (string, optional) - the record number in the demographic register
+ emergency_contact (object, required)
    + include `Emergency_Contact`
+ `confidant_person` (object, required)
    + include `Confidant_Person_PIS`
+ preferred_way_communication: email (enum, optional) - the way how a patient wants to be reached
    - email
    - phone

  
## Party
### `Party_Short`
+ first_name: Петро (string, required)
+ last_name: Іванов (string, required)
+ second_name: Миколайович (string, optional)

### `Party_Request`
+ include `Party_Short`
+ birth_date: `1991-08-19T00:00:00.000Z` (string, required)
+ gender: MALE (string, required) - `Dictionary GENDER`
+ `no_tax_id`: false (boolean, optional)
+ tax_id: 3126509816 (string, required)
+ email: email@example.com (string, optional)
+ documents (array[`PartyDocument`], optional)
+ phones (array[`Phone`], optional)
+ educations (array[`Education`], optional)  - освіта
+ qualifications (array[`Qualification`], optional) - підвищення кваліфікації
+ specialities (array[`Speciality_party`], optional)  - блок інформації про отримання сертифікату спеціалісту та проходження атестацій
+ science_degree (ScienceDegree, optional)

### `Party_Request_old`
+ include `Party_Short`
+ birth_date: `1991-08-19T00:00:00.000Z` (string, required)
+ gender: MALE (string, required) - `Dictionary GENDER`
+ `no_tax_id`: false (boolean, optional) - true if employee doesn't have tax_id and false otherwise
+ tax_id: 3126509816 (string, required) - if no_tax_id=true then passport number, otherwise tax_id
+ email: email@example.com (string, optional)
+ documents (array[`PartyDocument`], optional)
+ phones (array[`Phone`], optional)
+ working_experience: 10 (number, optional) - full years of working experience
+ about_myself: `Закінчив всі можливі курси` (string, optional) - field for medical employee to describe the most important statements.

### `Party_Response_old`
+ id:`b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ include `Party_Short`
+ birth_date: `1991-08-19T00:00:00.000Z` (string, required)
+ gender: MALE (string, required) - `Dictionary GENDER`
+ `no_tax_id`: false (boolean, optional)
+ tax_id: 3126509816 (string, required)
+ documents (array[`PartyDocument`], optional)
+ phones (array[`Phone`], optional)
+ working_experience: 10 (number, optional) - full years of working experience
+ about_myself: `Закінчив всі можливі курси` (string, optional) - field for medical employee to describe the most important statements.
+ `verification_status`: `NOT_VERIFIED` (string, required) - status of party verification according to `PARTY_VERIFICATION_STATUSES` dictionary
+ declaration_limit: `0` (number) - TO BE DEPRECATED, always zero! maximum number of declaration with a doctor.
+ declaration_count: `0` (number) - TO BE DEPRECATED, always zero! current number of declaration with a doctor.

### `Party_Create_v2`
+ include `Party_Short`
+ no_tax_id: false (boolean, optional)
+ tax_id: 3126509816 (string, required)
+ email: email@example.com (string, required)
+ birth_date: `1991-08-19` (string, required)
+ gender: MALE(string, required) - `Dictionary GENDER`
+ documents (array[`PartyDocument`], optional)
+ phones (array[`Phone`], optional)
+ working_experience: 10 (number, optional) - full years of working experience
+ about_myself: `Закінчив всі можливі курси` (string, optional) - field for medical employee to describe the most important statements.


### `Party_Update`
+ include `Party_Short`
+ no_tax_id: false (boolean, optional)
+ tax_id: 3126509816 (string, required)
+ birth_date: `1991-08-19T00:00:00.000Z` (string, required)
+ gender: MALE(string, required) - `Dictionary GENDER`
+ documents (array[`PartyDocument`], optional)
+ phones (array[`Phone`], optional)
+ working_experience: 10 (number, optional) - full years of working experience
+ about_myself: `Закінчив всі можливі курси` (string, optional) - field for medical employee to describe the most important statements.
+ declaration_limit: `2000` (number) - maximum number of declaration with a doctor.
+ educations (array[`Education`], optional)  - освіта
+ qualifications (array[`Qualification`], optional) - підвищення кваліфікації
+ specialities (array[`Speciality_party`], optional)  - блок інформації про отримання сертифікату спеціалісту та проходження атестацій
+ science_degree (ScienceDegree, optional)

### `Party_Update_v2`
+ include `Party_Short`
+ no_tax_id: false (boolean, optional)
+ tax_id: 3126509816 (string, required)
+ birth_date: `1991-08-19T00:00:00.000Z` (string, required)
+ gender: MALE(string, required) - `Dictionary GENDER`
+ documents (array[`PartyDocument`], optional)
+ phones (array[`Phone`], optional)
+ working_experience: 10 (number, optional) - full years of working experience
+ about_myself: `Закінчив всі можливі курси` (string, optional) - field for medical employee to describe the most important statements.
+ educations (array[`Education`], optional)  - освіта
+ qualifications (array[`Qualification`], optional) - підвищення кваліфікації
+ specialities (array[`Speciality_party`], optional)  - блок інформації про отримання сертифікату спеціалісту та проходження атестацій
+ science_degree (ScienceDegree, optional)

### `crud_party`
+ first_name: Петро (string, required)
+ last_name: Іванов (string, required)
+ second_name: Миколайович (string, optional)
+ birth_date: `1991-08-19T00:00:00.000Z` (string, required)
+ gender: MALE(string, required) - `Dictionary GENDER`
+ no_tax_id: false (boolean, optional)
+ tax_id: 3126509816 (string, required)
+ documents (array[`PartyDocument`], optional)
+ phones (array[`Phone`], optional)
+ working_experience: 10 (number, optional) - full years of working experience
+ about_myself: `Закінчив всі можливі курси` (string, optional) - field for medical employee to describe the most important statements.
+ educations (array[`Education`], optional)  - освіта
+ qualifications (array[`Qualification`], optional) - підвищення кваліфікації
+ specialities (array[`Speciality_party`], optional)  - блок інформації про отримання сертифікату спеціалісту та проходження атестацій
+ science_degree (ScienceDegree, optional)

### `crud_party_post`
+ include `crud_party`

### `crud_party_get`
+ id: d290f1ee-6c54-4b01-90e6-d701748f0851 (string, required)
+ include `crud_party`
+ inserted_at: `1991-08-19T00:00:00.000Z` (string, required)
+ inserted_by: `userid` (string, required)
+ updated_at: `1991-08-19T00:00:00.000Z` (string, required)
+ updated_by: `userid` (string, required)

##2FA

### `authentication_factor`
+ id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ type: `sms` (string, required) - 2fa type
+ factor: `+380881234567` (string, required) - 2fa factor, ex. phone number
+ is_active: true (boolean)
+ user_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)

## Employees
### `crud_employee`
+ party_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ no_tax_id: true (boolean, optional) - true if employee doesn't have tax_id and false otherwise
+ legal_entity_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ division_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional)
+ `employee_type`: DOCTOR (string) - `Dictionary EMPLOYEE_TYPE`
+ position: P1 (string, required) - `Dictionary POSITION`
+ start_date: 2017-02-28 (string, required)
+ end_date: 2017-02-28 (string, optional)
+ status: NEW, APPROVED (enum, required)
+ speciality (`Speciality`, optional)  - блок інформації про отримання сертифікату спеціалісту та проходження атестацій
+ `status_reason`: `new_employee` (string, optional)

### `crud_employee_get`
+ id: d290f1ee-6c54-4b01-90e6-d701748f0851 (string, required)
+ include `crud_employee`
+ inserted_at: `1991-08-19T00:00:00.000Z` (string, required)
+ inserted_by: `userid` (string, required)
+ updated_at: `1991-08-19T00:00:00.000Z` (string, required)
+ updated_by: `userid` (string, required)

### `crud_employee_post`
+ include `crud_employee`


### `Employee`
+ user_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ msp_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ `employee_type`: doctor (enum) - `Dictionary EMPLOYEE_TYPE`
+ position: P6 (string, required) - `Dictionary POSITION`
+ speciality: THERAPIST (string) - `Dictionary SPECIALITY_TYPE`
+ employee_details (DoctorNew, optional)
+ start_date: 2017-02-28 (string, required)
+ expiry_date: 2017-02-28 (string, optional)

### `Employee_Minimal`
+ id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ position: P6 (string, required) - `Dictionary POSITION`
+ party (object)
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
    + no_tax_id: true (boolean, required)
    + include `Party_Short`
    + email: email@example.com (string, optional)
    + phones (array[`Phone`], optional)

### `Employee_Minimal_cabinet`
+ id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ position: P6 (string, required) - `Dictionary POSITION`
+ party (object)
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
    + include `Party_Short`

### `Employee_For_Declaration_Minimal`
+ id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ position: P6 (string, required) - `Dictionary POSITION`
+ `employee_type`: doctor (enum) - `Dictionary EMPLOYEE_TYPE`

### `Employee_Response`
+ id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ position: P8 (string, required) - `Dictionary POSITION`
+ start_date: `2017-03-02T10:45:16.000Z` (string, required)
+ end_date: `2018-03-02T10:45:16.000Z` (string, optional)
+ status: APPROVED, DISMISSED, REORGANIZED (enum, required)
+ `is_active`: `true` (boolean, required)
+ `employee_type`: DOCTOR (string, required) - `Dictionary EMPLOYEE_TYPE`
+ party (`Party_Response_old`)
+ doctor (DoctorNew, optional) - `Field's name depends on employee type name.

### `Employee_Update`
+ division_id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, optional)
+ position: лікар (string, required)
+ start_date: `2017-03-02T10:45:16.000Z` (string, required)
+ end_date: `2018-03-02T10:45:16.000Z` (string, optional)
+ status: APPROVED, DISMISSED (enum, required)
+ party (Party_Update)
+ doctor (DoctorNew, optional)

### `Employee_Update_v2`
+ division_id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, optional)
+ position: P164 (string, required)
+ start_date: `2017-03-02T10:45:16.000Z` (string, required)
+ end_date: `2018-03-02T10:45:16.000Z` (string, optional)
+ status: 'NEW' (string, required) 
+ party (Party_Update_v2)
+ doctor (DoctorNew, optional)

### `Employee_Create_v2`
+ division_id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, optional)
+ position: P164 (string, required)
+ start_date: `2017-03-02` (string, required)
+ status: NEW (string, required)
+ employee_type: DOCTOR (string, required),
+ party (Party_Create_v2)
+ doctor (DoctorNew, optional)

### `Employee_Request`
+ division_id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, optional) - mandatory for Pharmacy employees
+ `legal_entity_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional)
+ position: P8 (string, required) - `Dictionary POSITION`
+ start_date: `2017-03-02T10:45:16.000Z` (string, optional) - required on update an employee
+ end_date: `2018-03-02T10:45:16.000Z` (string, optional)
+ status: NEW, REJECTED, APPROVED (enum, required)
+ `employee_type`: DOCTOR (string, required) - `Dictionary EMPLOYEE_TYPE`
+ party (Party_Request_old)
+ doctor (DoctorNew, optional)

### `Employee_Request_Short`
+ id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ status: NEW, REJECTED, APPROVED (enum, required)
+ inserted_at: `2018-03-02T10:45:16.000Z` (string, required)
+ edrpou: 5432345432 (string, required)
+ `legal_entity_name`: Клініка Ноунейм (string, required)
+ `no_tax_id`: true (boolean, optional) - true if employee doesn't have tax_id and false otherwise
+ include `Party_Short`

### `Employee_Request_Details`
+ include `Employee_Request`

### `Employee_Request_Approve`
+ include `Employee_Request`
+ employee_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)

### `Employee_Short`
+ id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ position: P1 (string, required) - `Dictionary: POSITION`
+ `employee_type`: DOCTOR (string) - `Dictionary: EMPLOYEE_TYPE`
+ status: APPROVED, DISMISSED, REORGANIZED (enum, required) - Employee status
+ start_date: `2017-03-02T10:45:16.000Z` (string, required)
+ end_date: `2018-03-02T10:45:16.000Z` (string, optional)
+ party (object)
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
    + no_tax_id: true (boolean, optional) - true if employee doesn't have tax_id and false otherwise
    + include `Party_Short`
    + `verification_status`: `NOT_VERIFIED` (string, required) - status of party verification according to `PARTY_VERIFICATION_STATUSES` dictionary
    + declaration_limit: `0` (number) - TO BE DEPRECATED, always zero! maximum number of declaration with a doctor.
    + declaration_count: `0` (number) - TO BE DEPRECATED, always zero! current number of declaration with a doctor.
+ division (`Division_Short`)
+ `legal_entity` (`Legal_Entity_Short`)
+ doctor (DoctorNew_Short)

### `Employee_Declaration_Short`
+ id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ position: P1 (string, required) - `Dictionary: POSITION`
+ `employee_type`: DOCTOR (string) - `Dictionary: EMPLOYEE_TYPE`
+ status: APPROVED, DISMISSED (enum, required) - Employee status
+ start_date: `2017-03-02T10:45:16.000Z` (string, required)
+ end_date: `2018-03-02T10:45:16.000Z` (string, optional)
+ party (object)
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
    + include `Party_Short`
+ division_id: `4cffa825-8b5b-4cba-9a38-fb57733e14b2` (string, optional) - division identifier
+ `legal_entity_id`: `be3a154c-3e07-496d-9680-f22c443f5d0c` (string, required) - legal entity identifier
+ doctor (DoctorNew)

### `Party_Verification_Details`
+ `verification_status`: `NOT_VERIFIED` (string, required) - status of party verification according to `PARTY_VERIFICATION_STATUSES` dictionary
+ details (object)
    + drfo (object)
        + `verification_status`: `NOT_VERIFIED` (string, required) - status of party DRFO verification according to `PARTY_VERIFICATION_STATUSES` dictionary
        + `verification_reason`: `AUTO` (string, required) - how current DRFO verification status has been set according to `PARTY_VERIFICATION_STATUS_REASONS` dictionary
        + `result`: `12` (string, optional) - result of party DRFO synchronization according to `DRFO_RESULT` dictionary
    + dracs_death (object)
        + `verification_status`: `NOT_VERIFIED` (string, required) - status of party DRACS death verification according to `PARTY_VERIFICATION_STATUSES` dictionary
        + `verification_reason`: `AUTO` (string, required) - how current DRACS death verification status has been set according to `PARTY_VERIFICATION_STATUS_REASONS` dictionary
        + `verification_comment`: `Необхідно повторно підтвердити факт смерті у співробітника` (string, optional) - DRACS death verification status description set by OWNER in case NOT_VERIFIED


## `Legal_Entities`

### `crud_legal_entity`
+ name: Клініка ноунейм (string, required)
+ short_name: Ноунейм (string, required)
+ type: MSP (string, required) - `Dictionary LEGAL_ENTITY_TYPE`
+ edrpou: 5432345432 (string, required)
+ addresses (array[`Address`], required)
+ phones (array[`Phone`], required)
+ email: email@example.com (array[`Email`], required)
+ is_active: true (boolean)
+ public_name: Клініка Ноунейм (string, required)
+ kveds: 86.1 (array, required)
+ status: VERIFIED (enum, required)
    - VERIFIED
    - NOT_VERIFIED
+ `owner_property_type`: STATE (string, required) - `Dictionary OWNER_PROPERTY_TYPE`
+ `legal_form`: 140 (enum, required) - `Dictionary LEGAL_FORM`
+ `medical_service_provider` (MSP, optional)
+ `created_via_mis_id`: d290f1ee-6c54-4b01-90e6-d701748f0851 (string, required)

### `crud_legal_entity_get`
+ id: d290f1ee-6c54-4b01-90e6-d701748f0851 (string, required)
+ include `crud_legal_entity`
+ inserted_at: `1991-08-19T00:00:00.000Z` (string, required)
+ inserted_by: `userid` (string, required)
+ updated_at: `1991-08-19T00:00:00.000Z` (string, required)
+ updated_by: `userid` (string, required)

### `crud_legal_entity_post`
+ include `crud_legal_entity`

### `crud_legal_entity_patch`
+ name: Клініка Ноунейм (string, optional)
+ short_name: Ноунейм (string, optional)
+ public_name: Клініка Ноунейм (string, required)
+ type: MSP (string, optional) - `Dictionary LEGAL_ENTITY_TYPE`
+ addresses (array[`Address`], optional)
+ phones (array[`Phone`], optional)
+ email: email@example.com (array[`Email`], optional)
+ is_active: true (boolean)
+ public_name: Клініка Ноунейм (string, optional)
+ status: VERIFIED (enum, optional)
    - VERIFIED
    - NOT_VERIFIED
+ `owner_property_type`: STATE (string, required) - `Dictionary OWNER_PROPERTY_TYPE`
+ `legal_form`: 140 (enum, required) - `Dictionary LEGAL_FORM`
+ `medical_service_provider` (MSP, optional)

### `Legal_Entity_Short`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ name: Клініка Ноунейм (string, required)
+ short_name: Ноунейм (string, required)
+ public_name: Клініка Ноунейм (string, required)
+ type: MSP (string, required)
+ edrpou: 5432345432 (string, required)
+ status: ACTIVE (enum, required)
    - ACTIVE
    - CLOSED

### `Legal_Entity_For_Declaration_Short`
+ short_name: Ноунейм (string, required)
+ name: Клініка Ноунейм (string, required)
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ edrpou: 5432345432 (string, required)

### `Legal_Entity_Short_Cabinet`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ name: Клініка Ноунейм (string, required)

## `Legal_Entity_Requests`

### `Legal_Entity_Request_Public`
+ name: Клініка Ноунейм (string, required) - full official name of legal entity also the name to show on public sources [as map, portal etc]
+ short_name: Ноунейм (string, optional) - short name of legal entity
+ public_name: Ноунейм (string, optional)
+ type: MSP (string, required) - type of legal entity [MSP/PHARMACY]. MIS can't be created using this WS.
+ `owner_property_type`: STATE (string, required) - `Dictionary OWNER_PROPERTY_TYPE` State or private type of legal entity
+ `legal_form`: 140 (string, required) - `Dictionary LEGAL_FORM`  - business form [as ТОВ/ФОП/ДП/КП]
+ edrpou: 32323454 (string, required) - Unified Register of Businesses and Organizations
+ kveds: 86.10 (array, required) - Ukrainian Industry Classification System, there is a check that at least one of next kveds is input: 86.10, 86.21, 47.73.
+ addresses (array[`Address`], required) - The max items of array is 2: REGISTRATION - required, RESIDENCE - optional. DIVISION is exception: REGISTRATION - optional, RESIDENCE - required
+ phones (array[`Phone`], required)
+ email: email@example.com (string, required) - email to contact person in charge from legal entity
+ website: `www.msp.com.ua` (string, optional) - legal entity website
+ receiver_funds_code: `12345` (string, optional) - treasury registration code [Код одержувача/розпорядника бюджетних коштів для Казначейства. Вказується за наявності.]
+ beneficiary: `Борисов Борис Борисович` (string, optional) - legal owner of legal entity [нформація про власника ЗОЗ, для ФОП не заповнюється]
+ owner(`Owner`,required)
+ `medical_service_provider` (MSP)
+ `archive`(array[`Archive`], optional)
+ security (object, required, fixed-type)
    + `redirect_uri`: `https://example.com` (string, required, fixed) - Redirect uri is used in oauth2.0 flow
+ public_offer(object, fixed-type)
    + `consent_text`: `Consent text` (string, required)
    + `consent`: `true` (boolean, required)

### `Legal_Entity_Request_Public_V2`
+ edrpou: 32323454 (string, required) - Unified Register of Businesses and Organizations
+ type: PRIMARY_CARE (string, required) - type of legal entity
+ residence_address (Address, optional, required) - address where the legal entity is physically located
+ phones (array[`Phone`], required)
+ email: email@example.com (string, required) - email to contact person in charge from legal entity
+ website: `www.msp.com.ua` (string, optional) - legal entity website
+ receiver_funds_code: `12345` (string, optional) - treasury registration code [Код одержувача/розпорядника бюджетних коштів для Казначейства. Вказується за наявності.]
+ beneficiary: `Борисов Борис Борисович` (string, optional) - legal owner of legal entity [нформація про власника ЗОЗ, для ФОП не заповнюється]
+ owner(`Owner_V2`,required)
+ accreditation (MSP_Accreditation, optional)
- One of
    + license (object, required)
        + type: MSP (string, required) - License type `Dictionary LICENSE_TYPE`
        + license_number: fd123443 (string, optional)
        + issued_by: Кваліфікацйна комісія (string, required)
        + issued_date: `2017-02-28` (string, required)
        + expiry_date: `2017-02-28` (string, optional)
        + `active_from_date`: `2017-02-28` (string, required)
        + what_licensed: реалізація наркотичних засобів (string, optional)
        + order_no: ВА43234 (string, required) - номер наказу
    + license (object, required)
        + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ `archive`(array[`Archive`], optional)
+ security (object, required, fixed-type)
    + `redirect_uri`: `https://example.com` (string, required, fixed) - Redirect uri is used in oauth2.0 flow
+ public_offer(object, fixed-type, required)
    + `consent_text`: `Consent text` (string, required)
    + `consent`: `true` (boolean, required)

### `Legal_Entity_Response_Public`
+ name: Клініка Ноунейм (string, required) - full official name of legal entity also the name to show on public sources [as map, portal etc]
+ short_name: Ноунейм (string, optional) - short name of legal entity
+ public_name: Ноунейм (string, optional)
+ type: MSP (string, required) - type of legal entity [MSP/PHARMACY]. MIS can't be created using this WS.
+ `owner_property_type`: STATE (string, required) - `Dictionary OWNER_PROPERTY_TYPE` State or private type of legal entity
+ `legal_form`: 140 (string, required) - `Dictionary LEGAL_FORM`  - business form [as ТОВ/ФОП/ДП/КП]
+ edrpou: 32323454 (string, required) - Unified Register of Businesses and Organizations
+ kveds: 86.10 (array, required) - Ukrainian Industry Classification System, there is a check that at least one of next kveds is input: 86.10, 86.21, 47.73.
+ addresses (array[`Address`], required) - The max items of array is 2: REGISTRATION - required, RESIDENCE - optional. DIVISION is exception: REGISTRATION - optional, RESIDENCE - required
+ phones (array[`Phone`], required)
+ email: email@example.com (string, required) - email to contact person in charge from legal entity
+ website: `www.msp.com.ua` (string, optional) - legal entity website
+ receiver_funds_code: `12345` (string, optional) - treasury registration code [Код одержувача/розпорядника бюджетних коштів для Казначейства. Вказується за наявності.]
+ beneficiary: `Борисов Борис Борисович` (string, optional) - legal owner of legal entity [нформація про власника ЗОЗ, для ФОП не заповнюється]
+ `medical_service_provider` (object, required)
    + licenses (array, required, fixed)
        + (object)
            + license_number: fd123443 (string, optional)
            + type: MSP (string, optional) - License type `Dictionary LICENSE_TYPE`
            + kveds: 86.10 (array, optional) - Ukrainian Industry Classification System, there is a check that at least one of required kveds provided for specific license type
            + issued_by: Кваліфікацйна комісія (string, required)
            + issued_date: `2017-02-28` (string, required)
            + expiry_date: `2017-02-28` (string, optional)
            + `active_from_date`: `2017-02-28` (string, required)
            + what_licensed: реалізація наркотичних засобів (string, optional)
            + order_no: ВА43234 (string, required) - номер наказу
    + accreditation (MSP_Accreditation, optional)
+ `archive`(array[`Archive`], optional)
+ security (object, fixed-type)
    + `redirect_uri`: `https://example.com` (string, required, fixed) - Redirect uri is used in oauth2.0 flow
+ public_offer(object, fixed-type)
    + `consent_text`: `Consent text` (string, required)
    + `consent`: `true` (boolean, required)

### `Legal_Entity_Response_Public_V2`
+ `edr` (edr_data, required)
+ edrpou: 32323454 (string, required) - Unified Register of Businesses and Organizations
+ type: PRIMARY_CARE (string, required) - type of legal entity [PRIMARY_CARE/OUTPATIENT/PHARMACY]. MIS can't be created using this WS.
+ residence_address (Address, optional, required) - address where the legal entity is physically located
+ phones (array[`Phone`], required)
+ email: email@example.com (string, required) - email to contact person in charge from legal entity
+ website: `www.msp.com.ua` (string, optional) - legal entity website
+ receiver_funds_code: `12345` (string, optional) - treasury registration code [Код одержувача/розпорядника бюджетних коштів для Казначейства. Вказується за наявності.]
+ beneficiary: `Борисов Борис Борисович` (string, optional) - legal owner of legal entity [нформація про власника ЗОЗ, для ФОП не заповнюється]
+ accreditation (MSP_Accreditation, optional)
+ license (object)
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string)
    + type: MSP (string, optional) - License type `Dictionary LICENSE_TYPE`
    + license_number: fd123443 (string, optional)
    + issued_by: Кваліфікацйна комісія (string)
    + issued_date: `2017-02-28` (string)
    + expiry_date: `2017-02-28` (string)
    + `active_from_date`: `2017-02-28` (string)
    + what_licensed: реалізація наркотичних засобів (string, optional)
    + order_no: ВА43234 (string) - номер наказу
+ `archive`(array[`Archive`], optional)
+ public_offer(object, fixed-type, required)
    + `consent_text`: `Consent text` (string, required)
    + `consent`: `true` (boolean, required)

### `Legal_Entity_Request_Public_Short`
+ name: Клініка Ноунейм (string, required) - full official name of legal entity
+ short_name: Ноунейм (string, optional) - short name of legal entity
+ public_name: Ноунейм (string, optional) - the name to show on public sources
+ type: MSP (string, required) - type of legal entity [MSP/PHARMACY]. MIS can't be created using this WS.
+ `owner_property_type`: STATE (string, required) - `Dictionary OWNER_PROPERTY_TYPE`
+ `legal_form`: 140 (string, required) - `Dictionary LEGAL_FORM`
+ edrpou: 5432345432 (string, required) -  Unified Register of Businesses and Organizations
+ kveds: 86.1 (array, required) - Ukrainian Industry Classification System, there is a check for required kved: 86.10, 86.21, 47.73
+ addresses (array[`Address`], required)
+ phones (array[`Phone`], required)
+ email: email@example.com (string, required) - email to contact person in charge from legal entity
+ website: `www.msp.com.ua` (string, optional) - legal entity website
+ receiver_funds_code: `12345` (string, optional) - treasure code [Код одержувача/розпорядника бюджетних коштів для Казначейства. Вказується за наявності.]
+ beneficiary: `Борисов Борис Борисович` (string, optional) - legal owner of legal entity [нформація про власника ЗОЗ, для ФОП не заповнюється]
+ `medical_service_provider` (MSP)
+ `archive`(array[`Archive`], optional)
+ security (object, fixed-type)
    + `redirect_uri`: `redirect_uri` (string, required, fixed) - Redirect uri is used in oauth2.0 flow
+ is_active: true (boolean, required)
+ inserted_by: `A65C8369-CE3A-44D6-839B-8856E3DC4CA3` (string, required)
+ inserted_at: `2005-10-30 10:45` (string, required) - timestamp
+ created_by_mis_client_id:  `A65C8369-CE3A-44D6-839B-8856E3DC4CA3` (string, required)
+ updated_at: `1991-08-19T00:00:00.000Z` (string, required)
+ updated_by: `userid` (string, required)


### `Legal_Entity_Related`
+ merged_from_legal_entity (object, required)
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - merged_from legal entity id
    + name: Клініка Ноунейм (string, required) - full official name of legal entity
    + edrpou: 5432345432 (string, required) -  Unified Register of Businesses and Organizations
+ reason: на підставі наказу №1111 (string, required) - the legit documents which prove the relationship between legal entities
+ reason_date: `2022-02-10` (string, optional) - the legit documents date
+ type: `ACCESSION` (enum, required) - reorganization type, dictionary `LEGAL_ENTITY_REORGANIZATION_TYPES`
+ is_active: true (boolean, required) - whether relationship between legal entities is active
    - Default: true
+ inserted_at: `2005-10-30 10:45` (string, required) - timestamp
+ inserted_by: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - user id

## `EDR`
### `edr_data`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ name: Клініка Ноунейм (string, required) - full official name of legal entity also the name to show on public sources [as map, portal etc]
+ short_name: Ноунейм (string, optional) - short name of legal entity
+ public_name: Ноунейм (string, optional)
+ `legal_form`: 140 (string, optional) - `Business form of legal entity received from edr - Use dictionary LEGAL_FORM to show the name`
+ edrpou: 54323454 (string, required) -  Unified Register of Businesses and Organizations
+ kveds (array, required)
    + (object)
        + name: `Діяльність лікарняних закладів` (string, required)
        + code: `86.10` (string, required)
        + is_primary: true (boolean, required)
+ `registration_address` (`registration_address`, required)
+ state: 1 (number, required)

### `registration_address`
+ zip: `02090`
+ country: `УКРАЇНА`
+ address: `Волинська обл., місто Луцьк ВУЛИЦЯ КОНЯКІНА буд. 14 кв. 144`
+ parts (object)
    + atu: `Волинська обл., місто Луцьк`
    + atu_code: `0710100000`
    + street: `ВУЛИЦЯ КОНЯКІНА`
    + house_type: `буд.`
    + house: `14`
    + building_type: null
    + building: ``
    + num_type: `кв.`
    + num: `144`

## `Divisions`
### `Division`
+ name: Бориспільське відділення Клініки Ноунейм (string, required) - the full name of division
+ addresses (array[`Address`], required)
+ phones (array[`Phone`], required)
+ email: email@example.com (string, required) - division's email
+ working_hours (`workinghours`) - optional field, business hours by each day weekly, doesn't make any influence on business process and will be shown on portal and map.
+ type: CLINIC (enum, required) - `Dictionary DIVISION_TYPE`
+ legal_entity_id: `c8aadb87-ecb9-41ca-9ad4-ffdfe1dd89c9` (string, optional)
+ external_id: `3213213` (string, optional)
+ location (Location, optional) - optional field. geographical location, if it's empty, division won't be shown on a map.

### workinghours
+ mon (array, optional)
    - 08.00,12.00 (array[string])
    - 14.00,18.00 (array[string])
+ tue (array, optional)
    - 08.00,12.00 (array[string])
+ wed (array, optional)
    - 08.00,12.00 (array[string])
+ thu (array, optional)
    - 08.00,12.00 (array[string])
+ fri (array, optional)
    - 08.00,12.00 (array[string])
+ sat (array, optional)
+ sun (array, optional)

### `Division_Details`
+ id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ legal_entity_id: `c8aadb87-ecb9-41ca-9ad4-ffdfe1dd89c9` (string, required)
+ include (`Division`)
+ dls_id: `2872985` (string, optional)
+ dls_verified: true (boolean, optional)

### `Division_Declaration`
+ id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ `legal_entity_id`: `c8aadb87-ecb9-41ca-9ad4-ffdfe1dd89c9` (string, required)
+ name: Бориспільське відділення Клініки Ноунейм (string, required) - the full name of division
+ addresses (array[`Address`], required)
+ phones (array[`Phone`], required)
+ email: email@example.com (string, required) - division's email
+ type: clinic (enum, required) - division type
    - CLINIC
    - AMBULANT_CLINIC
    - FAP
+ external_id: `3213213` (string, optional)
+ dls_id: `2872985` (string, optional)
+ dls_verified: true (boolean, optional)


### `Division_Details_Cabinet`
+ id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ name: Бориспільське відділення Клініки Ноунейм (string, required) - the full name of division
+ addresses (array[`Address`], required)
+ phones (array[`Phone`], required)
+ email: email@example.com (string, required) - division's email
+ location (Location, optional) - geographical location, if it's empty, division won't be shown on a map.


### `Division_Short_List`
+ id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ name: Бориспільське відділення Клініки Ноунейм (string, required)
+ type: clinic (enum, required)
    - CLINIC
    - AMBULANT_CLINIC
    - FAP
+ status: ACTIVE (enum, required)
    - ACTIVE
    - INACTIVE
+ dls_id: `2872985` (string, optional)
+ dls_verified: true (boolean, optional)

### `Division_Short`
+ id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ name: Бориспільське відділення Клініки Ноунейм (string, required)
+ `legal_entity_id`: d290f1ee-6c54-4b01-90e6-d701748f0851 (string, required)
+ type: CLINIC (enum, required)
    - CLINIC
    - AMBULANT_CLINIC
    - FAP
+ status: ACTIVE (enum, required)
    - ACTIVE
    - INACTIVE
+ mountain_group: false (boolean, optional)
+ dls_id: `2872985` (string, optional)
+ dls_verified: true (boolean, optional)

### `crud_division_post`
+ include `Division`

### `crud_division_get`
+ id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ include `Division`
+ status: ACTIVE (enum, required)
    - ACTIVE
    - INACTIVE
+ mountain_group: false (boolean, optional)
+ dls_id: `2872985` (string, optional)
+ dls_verified: true (boolean, optional)

## `Owners`
### `Owner`
+ first_name: Петро (string, required)
+ last_name: Іванов (string, required)
+ second_name: Миколайович (string, optional)
+ tax_id: 3015492563 (string, required)
+ birth_date: `1991-08-19T00:00:00.000Z` (string, required)
+ gender: MALE (string, required) - `Dictionary GENDER`
+ email: `email@example.com` (string, required)
+ documents (array[`PartyDocument`], optional)
+ phones (array[`Phone`], optional)
+ position (string, required): `P6`- `Dictionary POSITION`

### `Owner_V2`
+ first_name: Петро (string, required)
+ last_name: Іванов (string, required)
+ second_name: Миколайович (string, optional)
+ tax_id: 3015492563 (string, required)
+ `no_tax_id`: false (boolean, optional) - true if owner doesn't have tax_id and false otherwise
+ birth_date: `1991-08-19` (string, required)
+ gender: MALE (string, required) - `Dictionary GENDER`
+ email: `email@example.com` (string, required)
+ documents (array[`PartyDocument`], optional)
+ phones (array[`Phone`], optional)
+ position (string, required): `P6`- `Dictionary POSITION`

## `Medical_Service_Providers`

### `crud_msp`
+ `legal_entity_id`: 5432345432 (string, required)
+ accreditation (MSP_Accreditation, optional)
+ licenses (array[`MSP_License`], required)

### `crud_msp_get`
+ include `crud_msp`

### `crud_msp_post`
+ include `crud_msp`

### `crud_msp_patch`
+ accreditation (MSP_Accreditation, optional)
+ licenses (array[`MSP_License`], required)

### `Medical_Service_Provider`
+ name: Клініка Ноунейм (string, required)
+ short_name: Ноунейм (string, required)
+ `legal_form`: 140 (string, required) - `Dictionary LEGAL_FORM`
+ public_name: ЦПМСД №1 (string, optional)
+ edrpou: 5432345432 (string, required)
+ licenses (array[`MSP_License`], required)
+ accreditation (MSP_Accreditation, optional)
+ addresses (array[`Address`], required)
+ phones (array[`Phone`], required)
+ email: `email@example.com` (string, required)

### `MSP_Short`
+ id: d290f1ee-6c54-4b01-90e6-d701748f0851
+ name: Клініка Ноунейм (string, required)
+ short_name: Ноунейм (string, required)
+ `legal_form`: 140 (string, required) - `Dictionary LEGAL_FORM`
+ edrpou: 5432345432 (string, required)

### `MSP_Details`
+ id: d290f1ee-6c54-4b01-90e6-d701748f0851
+ name: Клініка ЦПМСД №1 (string, required)
+ short_name: ЦПМСД №1 (string, required)
+ `legal_form`: 140 (string, required) - `Dictionary LEGAL_FORM`
+ public_name: ЦПМСД №1 (string, optional)
+ edrpou: 5432345432 (string, required)
+ status: `ACTIVE` (enum, required)
    + ACTIVE
    + CLOSED
+ email: `email@example.com` (string, required)
+ phones (array[`Phone`], required)
+ addresses (array[`Address`], optional)

### `MSP`
+ licenses (array[`MSP_License`], required)
+ accreditation (MSP_Accreditation, optional)

### `MSP_V2`
+ licenses (array[`MSP_License_V2`], required)
+ accreditation (MSP_Accreditation, optional)

## `Ukr_med_registries`
### `ukr_med_registry`
+ edrpou: 5432345432 (string, required)
+ name: Клініка Ноунейм (string, optional)

### `crud_ukr_med_registry_post`
+ include `ukr_med_registry`

### `crud_ukr_med_registry_get`
+ id: d290f1ee-6c54-4b01-90e6-d701748f0851 (string, required)
+ include `ukr_med_registry`
+ inserted_at: `1991-08-19T00:00:00.000Z` (string, required)
+ inserted_by: `userid` (string, required)
+ updated_at: `1991-08-19T00:00:00.000Z` (string, required)
+ updated_by: `userid` (string, required)

## `Access_Tokens`
### `Access_Token`
+ value: `SnNRdCtvU0tTOENBV2dLRUZwNmIzZz09` (string, required) - oAuth access token.
+ user_id: `3ff33ced-69dc-415a-b231-c6446898335a` (string, required) - User identifier
+ name: `access_token` (string, required) - oAuth token name
+ id: `3ff33ced-69dc-415a-b231-c6446898335a` - oAuth token identifier
+ expires_at: 1498749591 (number, required) - expiration date-time timestamp
+ details (object)
    + scope: `capitation_contracts:view capitation_contracts:create patients:view patients:create` (string, required) - List of scopes that is required in application business logic, separated by space
    + refresh_token: `my-oauth-refresh-token` (string, required) - oAuth refresh token
    + redirect_uri: `https://example.com/` (string, required) - Redirect URI
    + `grant_type`: `authorization_code`
    + client_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - Client ID of authorized user.

### `Access_Token_1`
+ value: `SnNRdCtvU0tTOENBV2dLRUZwNmIzZz09` (string, required) - oAuth access token.
+ user_id: `3ff33ced-69dc-415a-b231-c6446898335a` (string, required) - User identifier
+ name: `change_password_token` (string, required) - oAuth token name
+ id: `3ff33ced-69dc-415a-b231-c6446898335a` - oAuth token identifier
+ expires_at: 1498749591 (number, required) - expiration date-time timestamp
+ details (object)
    + scope: `capitation_contracts:view capitation_contracts:create patients:view patients:create` (string, required) - List of scopes that is required in application business logic, separated by space
    + `grant_type`: `refresh_token`
    + client_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - Client ID of authorized user.


## Shared

### `System_Logging`
+ inserted_at: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ inserted_by: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, required)
+ updated_at: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ updated_by: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required)

### Address
+ type: RESIDENCE (string, required) - `Dictionary ADDRESS_TYPE`. 
+ country: UA (enum[string], required) - `Dictionary COUNTRY`
+ area: Житомирська (string, required) - one of Ukraianian area
+ region: Бердичівський (string, optional) - district of area
+ settlement: Київ (string, required) - city name
+ `settlement_type`: CITY (string, required) - `Dictionary SETTLEMENT_TYPE` - type of settlement as city/town/village etc
+ `settlement_id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - settlement identificator from uaadresses
+ `street_type`: STREET (string, optional) - `Dictionary STREET_TYPE` - type of street as street/road/line etc
+ street: `вул. Ніжинська` (string, optional) - street name
+ building: 15 (string, optional) - number of building
+ apartment: 23 (string, optional) - number of appartment
+ zip: 02090 (string, optional) - system of postal codes


### Phone
+ type: MOBILE (string, required) - `Dictionary PHONE_TYPE` type of phone Land Line or Mobile. At least one of type must be present. Each type can be represented only once.
+ number: `+380503410870` (string, required) - phone number in format '+38/'

### Email
+ type: PERSONAL, PUBLIC (enum[string], required)
+ email: `email@example.com` (string, required)

### Document
+ type: PASSPORT (string, required) - `Dictionary DOCUMENT_TYPE`
+ number: АА120518 (string, required) - document issue number
+ `expiration_date`: `2021-02-28` (string, optional) - `document expiration date. Required for NATIONAL_ID document type`
+ issued_by: `Рокитнянським РВ ГУ МВС Київської області` (string, optional) - authority which issued the document
+ issued_at: `2017-02-28` (string, optional) - the date when document was issued

### PartyDocument
+ type: PASSPORT (string, required) - `Dictionary DOCUMENT_TYPE`
+ number: АА120518 (string, required) - document issue number
+ issued_by: `Рокитнянським РВ ГУ МВС Київської області` (string, optional) - authority which issued the document
+ issued_at: `2017-02-28` (string, optional) - the date when document was issued

### RelationshipDocument
+ type: BIRTH_CERTIFICATE (string, required) - `Dictionary DOCUMENT_RELATIONSHIP_TYPE`
+ number: АА120518 (string, required) - document issue number
+ issued_by: `Рокитнянським РВ ГУ МВС Київської області` (string, optional) - authority which issued the document
+ issued_at: `2017-02-28` (string, optional) - the date when document was issued
+ active_to: `2025-08-19` (string, optional) - the date then period of document validity ends.

### `Medical_Certificate`
+ name: Диплом доктора медицини (string, required)
+ number: AA1234BC (string, required)
+ degree: `Doctor of Medicine (MD, Dr.MuD, Dr.Med)` (string, required)
+ issue_date: 2017-02-28 (string, required)
+ issued_by: Національний медичний університет імені О.О. Богомольця (string, required)
+ started_date: 2016-08-29T09:12:33.001Z (string, optional)
+ expiration_date: 2016-08-29T09:12:33.001Z (string, optional)

### `Medical_License`
+ category (enum, required)
    - Атестація на визначення знань і практичних навиків
+ type (enum, required)
    - диплом
+ issued_by: Кваліфікацйна комісія (string, required)
+ order_no: DV4312324 (string, required)
+ issued_date: 2017-02-28 (string, required)
+ expiry_date: 2017-02-28 (string, required)

### `Medical_Education`
+ institution_name: Академія Богомольця (string, required)
+ certificate_Number: DD123543 (string, required)
+ degree (enum, required)
    - Doctor of Medicine
    - Bachelor of Medicine
    - Bachelor of Surgery
    - Doctor of Osteopathic Medicine
    - Master of Clinical Medicine
+ start_date: 2017-02-28 (string, required)
+ finished_date: 2017-02-28 (string, required)
+ speciality (enum, required)
    - Загальна практика - сімейна медицина
    - Педіатрія
    - Підліткова терапія
    - Терапія

### `MSP_Accreditation`
+ category: SECOND (string, required) - `Dictionary ACCREDITATION_CATEGORY` category of accreditation legal entity. At least one of type must be present. Each type can be represented only once.
+ issued_date: `2017-02-28` (string, optional) - дата видачі
+ expiry_date: `2017-02-28` (string, optional)
+ order_no: fd123443 (string, required) - номер наказу МОЗ
+ order_date: `2017-02-28` (string, required) - дата наказу МОЗ


### `MSP_License`
+ license_number: fd123443 (string, optional)
+ issued_by: Кваліфікацйна комісія (string, required)
+ issued_date: `2017-02-28` (string, required)
+ expiry_date: `2017-02-28` (string, optional)
+ `active_from_date`: `2017-02-28` (string, required)
+ what_licensed: реалізація наркотичних засобів (string, optional)
+ order_no: ВА43234 (string, required) - номер наказу

### `MSP_License_V2`
+ license_number: fd123443 (string, optional)
+ type: MSP (string, required) - License type `Dictionary LICENSE_TYPE`
+ kveds: 86.10 (array, required) - Ukrainian Industry Classification System, there is a check that at least one of required kveds provided for specific license type
+ issued_by: Кваліфікацйна комісія (string, required)
+ issued_date: `2017-02-28` (string, required)
+ expiry_date: `2017-02-28` (string, optional)
+ `active_from_date`: `2017-02-28` (string, required)
+ what_licensed: реалізація наркотичних засобів (string, optional)
+ order_no: ВА43234 (string, required) - номер наказу

### `Bank_Details`
+ MFO: `351005` (string, required) - bank code
+ name: `Публічне акціонерне товариство «УкрСиббанк»` (string, required) - bank name
+ account_number(array, required)
    + `32009102701026` (string, required) - banks account number

### `Archive`
+ date: `2017-02-28` (string, required) - the date when paper documents were transferred to archive
+ place: `вул. Грушевського 15` (string, required) - the address of building where paper documents are

## OTPs
### OTP
+ id: `7d23bebb-1cf3-4221-bf21-18aada444756` (string, required)
+ status: `NEW` (enum, required)
    - NEW
    - CANCELED
    - VERIFIED
    - UNVERIFIED
+ `code_expired_at`: `2017-07-10T12:20:16.300597Z` (string, required)
+ active: true (boolean, required)

## Dashboards

### StatsByRegion
+ regions (array, required)
    + (object)
        + include (`StatsByRegionadd`)

### StatsByRegionadd
+ `region` (object, required)
    + include `Region`
+ `stats` (object, required)
    + include `RegionStats`


### RegionStats
+ declarations_total: 100 (number, required)
+ declarations_created: 102 (number, required)
+ declarations_closed: 2 (number, required)
+ msps: 2 (number, required)
+ doctors: 15 (number, required)
+ pharmacies: 2 (number, required)
+ pharmacists: 6 (number, required)

### Region
+ id: `asSbcy12sYs8c` (string, required)
+ name: `Київ` (string, required)

### HistogramStats
+ period_type: MONTH (string, required)
+ period_name: `2017-09` (string, required)
+ declarations_created: 0 (number, required)
+ declarations_closed: 0 (number, required)
+ declarations_active_start: 1 (number, required)
+ declarations_active_end: 1 (number, required)
+ medication_requests_created: 0 (number, required)
+ medication_requests_closed: 0 (number, required)
+ medication_requests_active_start: 1 (number, required)
+ medication_requests_active_end: 1 (number, required)

### Interval
+ from_date: `2017-02-01` (string, required)
+ to_date: `2017-02-30` (string, required)

### MainStats
+ declarations: 100 (number, required)
+ msps: 2 (number, required)
+ doctors: 15 (number, required)

### `MainStats_Division`
+ stats (DivisionStats, required)
+ division (DivisionName, required)

### DivisionStats
+ declarations: 100 (number, required)
+ msps: 2 (number, required)
+ doctors: 15 (number, required)
+ medication_requests_active: 2 (number, required)
+ medication_requests_completed: 3 (number, required)

### DivisionName
+ id: `asSbcy12sYs8c` (string, required)
+ name: `Пединовка` (string, required)

### RegionReport
+ id: `asSbcy12sYs8c` (string, required)
+ name: `Київ` (string, required)

### DataEntriesDivisionMap
+ total_pages (number, required)
+ total_entries (number, required)
+ page_size (number, required)
+ page (number, required)
+ entries (array[`EntriesDivisionMap`], optional)

### DataEntriesEmployeesListMap
+ total_pages (number, required)
+ total_entries (number, required)
+ page_size (number, required)
+ page (number, required)
+ entries (array[`EntriesEmployeesListMap`], optional)

### EntriesDivisionMap
+ id: `asSbcy12sYs8c` (string, required)
+ name: `Aдоніс` (string, required)
+ type: CLINIC, AMBULANT_CLINIC, FAP (enum, required)
+ addresses (Address, optional)
+ contacts (ContactInfo, optional)
+ coordinates (Location, optional)
+ `legal_entity` (`LegalEntityMap`, required)
+ `healthcare_services` (array[`Healthcare_service_response`], required, fixed-type)

### EntriesEmployeesListMap
+ id: `7d23bebb-1cf3-4221-bf21-18aada444756` (string, required) - employee id
+ party (PartyMap)
    + specialities (array[`Speciality`], required)  - блок інформації про отримання сертифікату спеціалісту та проходження атестацій
    + is_available: true (boolean, required)
+ division(object, required)
    + id: `7d23bebb-1cf3-4221-bf21-18aada444756` (string, required)
    + name: `Aдоніс` (string, required)
    + addresses (Address, optional)
+ `legal_entity` (object, required)
    + id: `7d23bebb-1cf3-4221-bf21-18aada444756` (string, required)
    + name: Клініка Ноунейм (string, required)
    + status: ACTIVE (enum, required)
        - ACTIVE
        - SUSPENDED
        - CLOSED

### EntriesEmployeeMap
+ id: `7d23bebb-1cf3-4221-bf21-18aada444756` (string, required) - employee id
+ position: P1 (string, required) - employee position
+ employee_type: DOCTOR (string, required)
+ party (PartyDoctorMap)
+ division(object, required)
    + id: `asSbcy12sYs8c` (string, required)
    + name: `Aдоніс` (string, required)
    + type: CLINIC, AMBULANT_CLINIC, FAP (enum, required)
    + addresses (Address, required)
+ `legal_entity` (object, required)
    + id: `7d23bebb-1cf3-4221-bf21-18aada444756` (string, required)
    + name: Клініка Ноунейм (string, required)
    + status: ACTIVE (enum, required)
        - ACTIVE
        - SUSPENDED
        - CLOSED

### EntriesParties (PartyDoctorMap)
+ employees (array[`EntriesPartyEmployees`], required, fixed-type)

### EntriesPartyEmployees
+ id: `7d23bebb-1cf3-4221-bf21-18aada444756` (string, required) - employee id
+ position: P1 (string, required) - employee position
+ employee_type: DOCTOR (string, required)
+ `healthcare_services` (array[`EntriesHealthcareServices`], required, fixed-type)

### EntriesHealthcareServices
+ id: `7c3da506-804d-4550-8993-bf17f9ee0402` (string, required)
+ division (EntriesHealthcareServiceDivision)
+ `speciality_type`: `FAMILY_DOCTOR` (string, required) - `Dictionary SPECIALITY_TYPE`
+ `providing_condition`: OUTPATIENT (string, required) - `Dictionary PROVIDING_CONDITION`
+ category (array, optional)
    - `0742d949-1492-4864-9494-60fd7102abfd` (string)
+ type (array, optional)
    - `2c0110a9-0bea-4b16-af8e-6e2e149a5bfc` (string)
+ status: ACTIVE (string, required)
    - ACTIVE
    - INACTIVE
+ comment: `Заведено помилково` (string, optional)
+ coverage_area (array, optional)
    - `2c0110a9-0bea-4b16-af8e-6e2e149a5bfc` (string)
+ `available_time` (array[`Available_time`], optional)
+ `not_available` (array[`Restricted_period`], optional)

### EntriesHealthcareServiceDivision
+ id: `asSbcy12sYs8c` (string, required)
+ name: `Aдоніс` (string, required)
+ type: CLINIC, AMBULANT_CLINIC, FAP (enum, required)
+ addresses (Address, optional)
+ contacts (ContactInfo, optional)
+ coordinates (Location, optional)
+ `legal_entity` (`LegalEntityMap`, required)

### LegalEntityMap
+ name:  Заклад Ноунейм (string, required)
+ short_name: Ноунейм (string, optional)
+ public_name: Ноунейм (string, optional)
+ type: PRIMARY_CARE (string, required)
+ `owner_property_type`: STATE (string, required) - `Dictionary OWNER_PROPERTY_TYPE`
+ `legal_form`: 140 (string, required) - `Dictionary LEGAL_FORM`
+ edrpou: 5432345432 (string, required)
+ kveds: `["86.10", "47.73"]` (string, optional)
+ addresses (array[`Address`], required)
+ phones (array[`Phone`], required)
+ email: email@example.com (string, required)
+ nhs_verified: false (string, optional)
+ owner (OwnerMap)

### OwnerMap
+ id: `7d23bebb-1cf3-4221-bf21-18aada444756` (string, required) - employee id
+ position: P1 (string, required) - employee position
+ employee_type: OWNER (string, required)
+ party (PartyMap)

### PartyMap
+ id: `7d23bebb-1cf3-4221-bf21-18aada444756` (string, required)
+ first_name: Петро (string, required)
+ second_name: Миколайович (string, required)
+ last_name: Іванов (string, required)

### PartyDoctorMap
+ id: `7d23bebb-1cf3-4221-bf21-18aada444756` (string, required)
+ first_name: Петро (string, required)
+ second_name: Миколайович (string, required)
+ last_name: Іванов (string, required)
+ educations (array[`Education`], required)  - освіта
+ qualifications (array[`Qualification`], optional) - підвищення кваліфікації
+ specialities (array[`Speciality`], required)  - блок інформації про отримання сертифікату спеціалісту та проходження атестацій
+ is_available: true (boolean, required)
+ science_degree (ScienceDegree, optional)
+ working_experience: 10 (number, optional)
+ about_myself: `Закінчив всі можливі курси` (string, optional)
+ `verification_status`: `NOT_VERIFIED` (string, optional) - status of party verification according to `PARTY_VERIFICATION_STATUSES` dictionary


### EmployeeMap
+ id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - Employee identifier with `type=DOCTOR` who issued Medication Request.
+ last_name: `Іванов` (string, required)
+ first_name: `Петро` (string, required)
+ second_name: `Миколайович` (string, optional)
+ position: `P6` (string, required) - `Dictionary POSITION`
+ employee_type: `DOCTOR` (string, required) - `Dictionary: EMPLOYEE_TYPE`

### ContactInfo
+ email: email@example.com (string, optional)
+ phones (array[`Phone`], optional)

### Location
+ latitude: 30.1233 (number, required)
+ longitude: 50.32423 (number, required)

### EntriesMedicalProgramProvisionMap
+ id: `3e34da3d-9b8c-4aaf-be8e-24a161279b6a` (string, required) - identifier of the Medical program provision
+ medical_program(object, required) - medical program that is provided
    + `id`: `c7d52544-0bd4-4129-97b0-2d72633e0490` (string, required) - Internal medical program ID, a UUID string.
    + `name`: `Доступні ліки` (string, required) - medical program name that is used on govermental level
    + `medical_program_settings` (`Medical_program_settings`, required) - some conditions for using program
    + `medical_program_settings_text`: `Some text` (string, required) - justification of the possibility or impossibility of using the program on medication request with some settings
    + `is_active`: `true` (boolean, required) - Is medical program active or not. True - Active; False - Inactive
    + `medication_dispense_allowed`: true (boolean, required) - posibility to create medication dispense with program
    + `medication_dispense_allowed_text`: `Some text` (string, required) - justification of the possibility or impossibility of using the program on medication dispense
    + `medication_request_allowed`: true (boolean, required) - posibility to create medication request with program
    + `medication_request_allowed_text`: `Some text` (string, required) - justification of the possibility or impossibility of using the program on medication request
    + `type`: `MEDICATION` (string, required) - `Dictionary MEDICAL_PROGRAM_TYPE`
    + `funding_source`: `NHS` (string, required) - `Dictionary FUNDING_SOURCE`
    + `mr_blank_type`: `F-1` (string, required) - `Dictionary MR_BLANK_TYPES`
+ division(object, required) - division that provide a medical program
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
    + name: `Aдоніс` (string, required)
    + type: DRUGSTORE, DRUGSTORE_POINT (enum, required)
    + addresses (Address, optional)
    + contacts (ContactInfo, optional)
    + coordinates (Location, optional)
    + legal_entity(object, required) - PHARMACY legal entity
        + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
        + edrpou: 32323454 (string, required) - Unified Register of Businesses and Organizations
        + type: PRIMARY_CARE, OUTPATIENT, EMERGENCY (enum, required) - type of MSP legal entity
        + residence_address (Address, optional, required) - address where the legal entity is physically located
        + phones (array[`Phone`], required)
        + email: email@example.com (string, required) - email to contact person in charge from legal entity
        + website: `www.msp.com.ua` (string, optional) - legal entity website
        + status: ACTIVE (enum, required)
            - ACTIVE
            - CLOSED
            - SUSPENDED
    + status: ACTIVE (enum, required) - division status
        - ACTIVE
        - INACTIVE
    + dls_id: `2872985` (string, optional)
    + dls_verified: true (boolean, optional)
+ `is_active`: true (boolean, required) - status of the Medical program provision
+ `deactivate_reason`: `MANUAL_DEACTIVATION` (string, required, nullable) - the reason of deactivated status
+ `inserted_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `inserted_by`: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, required)
+ `updated_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `updated_by`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required)


## DoctorsNew
### DoctorNew
+ educations (array[`Education`], required)  - освіта
+ qualifications (array[`Qualification`], optional) - підвищення кваліфікації
+ specialities (array[`Speciality`], required)  - блок інформації про отримання сертифікату спеціалісту та проходження атестацій
+ science_degree (ScienceDegree, optional)

### `DoctorNew_Short`
+ specialities (array[`Speciality`], required)

### `DoctorNew_Short_Single`
+ speciality (Speciality, required)

### Education
+ country: UA (string, required) - `Dictionary COUNTRY`
+ city: Київ (string, required)
+ institution_name: Академія Богомольця (string, required)
+ issued_date: `2017-02-28` (string, optional)
+ diploma_number: DD123543 (string, required)
+ degree: MASTER (string, required) - `Dictionary EDUCATION_DEGREE`
+ speciality: Педіатр (string, required)


### ScienceDegree
+ country: UA (string, required) - `Dictionary COUNTRY`
+ city: Київ (string, required)
+ degree (string, required) - `Dictionary SCIENCE_DEGREE`
+ institution_name: Академія Богомольця (string, required)
+ diploma_number: DD123543 (string, required)
+ speciality: Педіатр (string, required)
+ issued_date: `2017-02-28` (string, optional)

### Qualification
+ type: SPECIALIZATION (string, required) - `Dictionary QUALIFICATION_TYPE`
+ institution_name: Академія Богомольця (string, required)
+ speciality: Педіатр (string, required)
+ issued_date: `2017-02-28` (string, required) - дата отримання сертифікату
+ certificate_number: `2017-02-28` (string, required)
+ valid_to: `2017-02-28` (string, optional) - дійсний до
+ additional_info: додаткова інофрмація (string, optional) - додаткова інформація

### Speciality
+ speciality: THERAPIST (string, required) - `Dictionary SPECIALITY_TYPE`
+ speciality_officio: true (boolean, required) - основна спеціалазація, лише одна має бути true
+ level: FIRST (string, required) - `Dictionary SPECIALITY_LEVEL`
+ `qualification_type`: AWARDING (string, required) - `Dictionary SPEC_QUALIFICATION_TYPE`
+ attestation_name: Академія Богомольця (string, required) - орган що видав
+ attestation_date: `2017-02-28` (string, required) - дата отримання
+ valid_to_date: `2020-02-28` (string, optional) - дата дії до
+ certificate_number: AB/21331 (string, required)

### `Speciality_party`
+ speciality: THERAPIST (string, required) - `Dictionary SPECIALITY_TYPE`
+ level: FIRST (string, required) - `Dictionary SPECIALITY_LEVEL`
+ `qualification_type`: AWARDING (string, required) - `Dictionary SPEC_QUALIFICATION_TYPE`
+ attestation_name: Академія Богомольця (string, required) - орган що видав
+ attestation_date: `2017-02-28` (string, required) - дата отримання
+ valid_to_date: `2020-02-28` (string, required) - дата дії до
+ certificate_number: AB/21331 (string, required)

### Affordance
+ action (string, required) - Affordance action.
+ url (string, required)

## Dictionaries
### `Dictionary`
+ name: DOCUMENT_TYPE (string, required) - Unique dictionary name
+ values (object)
    + key: value (string, optional) - List of dictionary entries as Key:Value pairs
+ labels (array)
    - SYSTEM
    - EXTERNAL
+ is_active: true (boolean, required)

### `Dictionary_value`
+ code: `b1142` (string, required) - code of the dictionary value
+ description: `Орієнтація в особі` (string, required) - description of the code
+ is_active: true (boolean, required) - status of the dictionary value
+ child_values(array) - subordinate values of the dictionary

### `Dictionary_v2`
+ name: `eHealth/ICF/classifiers` (string, required) - Unique dictionary name
+ description: `Класифікатори МКФ` (string, required) - dictionary description for a user
+ values (array, required)
    + (Dictionary_value)
        + child_values (array)
            + (object)
                + include `Dictionary_value`
                + code: `b11429` (string, required) - code of the dictionary value
                + description: `Орієнтація в особі неуточнена` (string, required) - description of the code
+ labels (array)
    - SYSTEM
    - EXTERNAL
+ is_active: true (boolean, required)

## NHS Portal
### `nhs_declaration_list`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - id of the signed document stored on the Media content storage
+ employee_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ division_id: `d290f1ee-6c54-4b01-90e6-d701748f0851`m (string, required)
+ scope (enum, required)
    - family_doctor
+ start_date: `2017-03-02` (string, required)
+ end_date: `2017-03-02` (string, required)
+ signed_at: `2017-03-02T10:45:16.000Z` (string, required)
+ status (enum, optional)
    - active
    - closed
+ person (`Person_Minimal`, required)
+ `legal_entity` (`Legal_Entity_Short`, required)
+ `declaration_request_id`: `74a6fae6-4207-4e03-a136-f2e70c6b0c02` (string, required)
+ reason: `manual_employee` (string, optional)
+ reason_description: `Згідно постанови 1 від 10.01.2017` (string, optional)

### `nhs_declaration_list_Public`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - id of the signed document stored on the Media content storage
+ declaration_number: `0000-12H4-245D` (string, required) - unique number of declaration.
+ `employee` (`Employee_For_Declaration_Minimal`, required)
+ `division` (`DivisionName`, required)
+ start_date: `2017-03-02` (string, required)
+ end_date: `2017-03-02` (string, required)
+ status (enum, optional)
    - active
    - closed
    - terminated
+ reason: `manual_employee` (string, optional)
+ reason_description: `Згідно постанови 1 від 10.01.20171111` (string, optional)
+ person (`Person_Minimal_Declaration_List`, required)
+ `legal_entity` (`Legal_Entity_For_Declaration_Short`, required)
+ `declaration_request_id`: `74a6fae6-4207-4e03-a136-f2e70c6b0c02` (string, required)
+ `inserted_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `updated_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.

### `nhs_declaration`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ include `Declaration_Request_Details_Public`
+ `media_content`: `https://cs5.pikabu.ru/post_img/big/2015/12/04/5/1449210847155432089.jpg`,`https://www.readersdigest.ca/wp-content/uploads/2011/01/4-ways-cheer-up-depressed-cat.jpg`  (array, required)

## NHS Portal v2

### `person_short_v2`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ status: `active` (enum, required)
  - active
  - inactive
+ first_name: Петро (string, required)
+ last_name: Іванов (string, required)
+ second_name: Миколайович (string, optional)
+ birth_date: `1991-08-19` (string, required) - ISO Datetime.
+ birth_country: Україна (string, required) - країна народження
+ birth_settlement: Вінниця (string, required)
+ tax_id: 3126509816 (string, optional)
+ unzr: `19910819-00011` (string, optional)
+ gender (enum, required)
    - FEMALE
    - MALE
+ `authentication_method_current` (object, required)
    + type: `OTP` (enum, required)
        - OTP
        - OFFLINE
        - NA
    + number: `+380937777785` (string, required)
+ documents (array[`Document`],optional)

### `Nhs_Declaration_v2`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - id of the signed document stored on the Media content storage
+ declaration_number: `0000-12H4-245D` (string, required) - unique number of declaration.
+ `legal_entity` (`Legal_Entity_Short`, required)
  + addresses (array[`Address`], optional)
+ start_date: `2017-03-02` (string, required)
+ end_date: `2017-03-02` (string, required)
+ signed_at: `2017-03-02T10:45:16.000Z` (string, required)
+ status (enum, optional)
    - active
    - closed
+ person (`Person_Minimal`, required)
    + birth_date: `1991-08-19` (string, required)
    + birth_country: `Україна` (string, required)
    + birth_settlement: `Вінниця` (string, required)
    + gender: MALE, FEMALE (enum[string], required) + tax_id: 3126509816 (string, optional)
+ secret: secret (string, required)
+ documents (array[`Document`], required)
+ addresses (array[`Address`], required)
+ phones (array[`Phone`], optional)
+ `authentication_methods` (array[`Authentication_Method`], required)
+ preferred_way_communication: email (enum, optional) - the way how a patient wants to be reached
    - email
    - phone
+ `division` (`DivisionName`, required)
  + addresses (array[`Address`], optional)
  + phones (array[`Phone`], required)
  + email: email@example.com (string, required) - division's email
  + status: ACTIVE (enum, required)
    - ACTIVE
    - INACTIVE
  + type: clinic (enum, required) - division type
    - CLINIC
    - AMBULANT_CLINIC
    - FAP
  + mountain_group: false (boolean, optional)
+ `employee` (object, required)
   + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
   + position: P8 (string, required) - `Dictionary POSITION`
   + start_date: `2017-03-02T10:45:16.000Z` (string, required)
   + end_date: `2018-03-02T10:45:16.000Z` (string, optional)
   + status: APPROVED, DISMISSED (enum, required)
   + `employee_type`: DOCTOR (string, required) - `Dictionary EMPLOYEE_TYPE`
   + party (`Party_Short`)
   + doctor (DoctorNew_Short, optional)
+ scope (enum, required)
    - family_doctor
+ `declaration_request_id`: `74a6fae6-4207-4e03-a136-f2e70c6b0c02` (string, required)
+ reason: `manual_employee` (string, optional)
+ reason_description: `Згідно постанови 1 від 10.01.2017` (string, optional)


## Global Parameters and Products
### `Global_Parameters`
+ `declaration_term`: `30` (string, required) - термін дії декларації
+ `declaration_request_expiration`: `30` (string, required) - термін дії заявки на створення декларації
+ `employ_request_expiration`: `30` (string, required) - термін дії заявки на створення працівника
+ `verification_request_expiration`: `30` (string, required) - термін дії заявки на верифікацію декларації
+ adult_age: `18` (string, required) - вік повноліття
+ billing_date: `2` (string, required) - дата біллінгу (1-28)

## UAddresses
### `Response_Street`
+ id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string) - Address ID
+ settlement_name: Новосілки (string) - City name
+ street_type: вул (string) - Type of street
+ street_name: `Єрмоленка Володимира` (string) - Street name
+ aliases (array, optional)

### `Response_Settlement_Short`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string) - Settlement ID
+ settlement_name: Новосілки (string) - City name

### `Response_Settlement`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string) - Settlement ID
+ region_id: `99310bc4-ac7c-4f1f-bc29-b3ae25bd96bc` (string)
+ region: Київ (string) -  Region name
+ district: `Києво-Святошинський` (string) - District name
+ district_id: `99310bc4-ac7c-4f1f-bc29-b3ae25bd96bc` (string)
+ settlement_name: Новосілки (string) - City name
+ mountain_group: 0 (string) - Mountain group
+ type: `СITY` (string, optional) - Settlement type
+ koatuu: 3520380802 (string, optional) - KOATUU code
+ parent_settlement: Берегово (string, optional) - Parent settlement name
+ parent_settlement_id: `99310bc4-ac7c-4f1f-bc29-b3ae25bd96bc` (string)

### `Response_Region`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string) - Region ID
+ region: Київ (string) -  Region name
+ koatuu: 3520380802 (string, optional) - KOATUU code

### `Response_District_Short`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string) - District ID
+ district: `Києво-Святошинський` (string) - District name

### `Response_District`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string) - District ID
+ region: Київ (string) -  Region name
+ region_id: `c4c0f907-8b60-483e-bbf6-dfb34ab91574` (string)
+ district: `Києво-Святошинський` (string) - District name
+ koatuu: 3520380802 (string, optional) - KOATUU code

### `Create_Settlement`
+ region: Київ (string, required) -  Region name
+ district: `Києво-Святошинський` (string, required) - District name
+ settlement_name: Новосілки (string, required) - City name

### `Create_Street`
+ region: Київ (string, required) -  Region name
+ district: `Києво-Святошинський` (string, required) - District name
+ settlement_name: Новосілки (string, required) - City name
+ street_type: вул (string, required) - Type of street
+ street_name: `Єрмоленка Володимира` (string, required) - Street name
+ street_number: 67 (string, required) - Number of building
+ postal_code: 02140 (string, required) - Postal code

## Users
### User (object)
+ email: `john@example.com` (string, required) - User email.

### `User_Data` (User)
+ settings (object) - User settings.
+ priv_settings (object) - User private settings.

### `User_Response` (User_Data)
+ id: `user-1380df72-275a-11e7-93ae-92361f002671` (string) - Internal user ID, a UUID string.
+ `created_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `updated_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.

## Medical programs
### `Medical_Program_Response`
+ `id`: `c7d52544-0bd4-4129-97b0-2d72633e0490` (string, required) - Internal medical program ID, a UUID string.
+ `name`: `Доступні ліки` (string, required) - medical program name that is used on govermental level
+ `medical_program_settings` (`Medical_program_settings`, required) - some conditions for using program
+ `medical_program_settings_text`: `Some text` (string, optional) - justification of the possibility or impossibility of using the program on medication request with some settings
+ `is_active`: `true` (boolean, optional) - Is medical program active or not. True - Active; False - Inactive
+ `medication_dispense_allowed`: true (boolean, optional) - posibility to create medication dispense with program
+ `medication_dispense_allowed_text`: `Some text` (string, optional) - justification of the possibility or impossibility of using the program on medication dispense
+ `medication_request_allowed`: true (boolean, optional) - posibility to create medication request with program
+ `medication_request_allowed_text`: `Some text` (string, optional) - justification of the possibility or impossibility of using the program on medication request
+ `type`: `MEDICATION` (string, optional) - `Dictionary MEDICAL_PROGRAM_TYPE`
+ `funding_source`: `NHS` (string, required) - `Dictionary FUNDING_SOURCE`
+ `mr_blank_type`: `F-1` (string, required) - `Dictionary MR_BLANK_TYPES`
+ `inserted_at`: `2017-04-20T19:14:13Z` (string, optional) - ISO 8601 date and time in UTC timezone.
+ `inserted_by`: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, optional)
+ `updated_at`: `2017-04-20T19:14:13Z` (string, optional) - ISO 8601 date and time in UTC timezone.
+ `updated_by`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, optional)

### `Medical_Program_Response_without_settings`
+ `id`: `c7d52544-0bd4-4129-97b0-2d72633e0490` (string, required) - Internal medical program ID, a UUID string.
+ `name`: `Доступні ліки` (string, required) - medical program name that is used on govermental level
+ `is_active`: `true` (boolean, optional) - Is medical program active or not. True - Active; False - Inactive
+ `medication_dispense_allowed`: true (boolean, optional) - posibility to create medication dispense with program
+ `medication_dispense_allowed_text`: `Some text` (string, optional) - justification of the possibility or impossibility of using the program on medication dispense
+ `medication_request_allowed`: true (boolean, optional) - posibility to create medication request with program
+ `medication_request_allowed_text`: `Some text` (string, optional) - justification of the possibility or impossibility of using the program on medication request
+ `type`: `MEDICATION` (string, optional) - `Dictionary MEDICAL_PROGRAM_TYPE`
+ `funding_source`: `NHS` (string, required) - `Dictionary FUNDING_SOURCE`
+ `mr_blank_type`: `F-1` (string, required) - `Dictionary MR_BLANK_TYPES`
+ `inserted_at`: `2017-04-20T19:14:13Z` (string, optional) - ISO 8601 date and time in UTC timezone.
+ `inserted_by`: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, optional)
+ `updated_at`: `2017-04-20T19:14:13Z` (string, optional) - ISO 8601 date and time in UTC timezone.
+ `updated_by`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, optional)

### `Medical_Program_Response_Report`
+ `id`: `c7d52544-0bd4-4129-97b0-2d72633e0490` (string, required) - Internal medical program ID, a UUID string.
+ `name`: `Доступні ліки` (string, required) - medical program name that is used on govermental level
+ `mr_blank_type`: `F-1` (string, required) - `Dictionary MR_BLANK_TYPES`

### `Medical_Program_Response_min`
+ `id`: `c7d52544-0bd4-4129-97b0-2d72633e0490` (string, required) - Internal medical program ID, a UUID string.
+ `name`: `Доступні ліки` (string, required) - medical program name that is used on govermental level
+ `medical_program_settings`: (`Medical_program_settings`, required) - some conditions for using program
+ `funding_source`: `NHS` (string, required) - `Dictionary FUNDING_SOURCE`
+ `mr_blank_type`: `F-1` (string, required) - `Dictionary MR_BLANK_TYPES`

### `Medical_Program_Response_min_without_settings`
+ `id`: `c7d52544-0bd4-4129-97b0-2d72633e0490` (string, required) - Internal medical program ID, a UUID string.
+ `name`: `Доступні ліки` (string, required) - medical program name that is used on govermental level
+ `funding_source`: `NHS` (string, required) - `Dictionary FUNDING_SOURCE`
+ `mr_blank_type`: `F-1` (string, required) - `Dictionary MR_BLANK_TYPES`

### `Program_Service_Response`
+ id: `c290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ medical_program_id: `b290f1ee-6c54-4b01-90e6-d701748f0852` (string, required)
+ service_id: `d290f1ee-6c54-4b01-90e6-d701748f0853` (string, required)
+ service_group_id: null (string, required)
+ consumer_price: 15 (number, required)
+ description: `text` (string, required)
+ request_allowed: true (boolean, required)
+ is_active: true (boolean, required)
+ inserted_at: `2019-04-20T19:14:13Z` (string, required)
+ inserted_by: `f290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ updated_at: `2019-04-20T19:14:13Z` (string, required)
+ updated_by: `f290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)

## `Service_dictionary`
### `Service`
+ id: `d5a5d991-0bf7-476f-b3cf-bec73f044b2e` (string, required)
+ name: `Ультразвукове дослідження черевного відділу стравоходу' (string, required)
+ code: `JF2 01` (string, required)
+ is_active: true (boolean, required)
+ parent_id: null (string, optional)
+ category: `imaging` (string, required)
+ is_composition: false (boolean, required)
+ request_allowed: true (boolean, required)
+ `inserted_at`: `2018-08-02T10:45:16.000Z` (string, required)
+ `inserted_by`: `d5a5d991-0bf7-476f-b3cf-bec73f044b2e` (string, required) - id of user who has inserted record
+ `updated_at`: `2018-08-02T10:45:16.000Z` (string, required)
+ `updated_by`: `d5a5d991-0bf7-476f-b3cf-bec73f044b2e` (string, required) - id of user who has inserted record

### `Service_group`
+ id: `e5a5d991-0bf7-476f-b3cf-bec73f044b2e` (string, required)
+ name: `Ультразвукові дослідження' (string, required)
+ code: `FJ` (string, required)
+ is_active: true (boolean, required)
+ request_allowed: false (boolean, required)
+ `inserted_at`: `2018-08-02T10:45:16.000Z` (string, required)
+ `inserted_by`: `d5a5d991-0bf7-476f-b3cf-bec73f044b2e` (string, required) - id of user who has inserted record
+ `updated_at`: `2018-08-02T10:45:16.000Z` (string, required)
+ `updated_by`: `d5a5d991-0bf7-476f-b3cf-bec73f044b2e` (string, required) - id of user who has inserted record

### `Service_in_group`
+ include (`Service_group`)
+ groups (array, optional, fixed-type)
    + (Service_group)
        + id: `75a5d991-0bf7-476f-b3cf-bec73f044b2e` (string, required)
        + name: `Ультразвукові дослідження в гастроентерології' (string, required)
        + code: `2FJ` (string, required)
        + services (array, optional, fixed-type)
             + (`Service`)

## Drugs
### `Drug_Response`
+ `id`: `ae9bf68e-3c98-4027-9211-535f7dad7a87` (string, required)
+ `name`: `Аміодарон 200мг таблетки` (string, required)
+ `form`: PILL (string, required) - `Dictionary MEDICATION_FORM`
+ `max_daily_dosage`: 200 (number, required) - Max daily dosage
+ `daily_dosage`: 50 (number, required) - Daily dosage
+ `innm` (`Innm_Public_Response_Short`, required)
+ `dosage` (`Dosage_drug`, required)
+ `packages` (array [`Medication_package`], required)

### `Drug_v2_Response`
+ `id`: `ae9bf68e-3c98-4027-9211-535f7dad7a87` (string, required)
+ `name`: `Аміодарон 200мг таблетки` (string, required)
+ `mr_blank_type`: `F-1` (string, required) - `Dictionary MR_BLANK_TYPES`
+ `dosage_form_is_dosed`: FALSE (boolean, required) - `Without dictionary. True - Dosed, False - Not dosed`
+ `form`: PILL (string, required) - `Dictionary MEDICATION_FORM`
+ `daily_dosage`: 50 (number, required) - Daily dosage
+ `ingredients` (array[`Ingredient_v2`], required)
+ `packages` (array [`Medication_package_DrugsV2`], required)

### `Ingredient_v2`
+ `id` : `1349a693-4db1-4a3f-9ac6-8c2f9e541982` (string, required)
+ `name` : `Інсулін деглюдек` (string, required)
+ `name_original` : `Insulin degludec` (string, required)
+ `sctid`: `52574003` (string, optional) - innm CNOMED code
+ `dosage` (`Dosage_drug`, required)
+ `is_primary` : true (boolean, required)

### `Medication_package`
+ `container_dosage` (`Dosage_container`, required)
+ `package_qty`: 30 (number, required)
+ `package_min_qty`: 10 (number, required)
+ `program_medications` (array [`Drugs_program_medication`], required)

### `Medication_package_DrugsV2`
+ `container_dosage` (`Dosage_container`, required)
+ `package_qty`: 30 (number, required)
+ `package_min_qty`: 10 (number, required)
+ `max_request_dosage`: null (number, required) - Max request dosage, mainly used for F-3 type Medications and in some cases for F-1 type Medications, as contain small amount of narcotic/psychotropic substance.
+ `program_medications` (array [`Drugs_program_medication`], required)

### `Drugs_program_medication`
+ id: `e477a845-972b-47a1-8ca3-1c71e4fd00c2` (string, required) - Program medication id
+ start_date: `2019-01-01` (string, optional) - Active from date
+ end_date: `2019-06-30` (string, optional) - Active to date
+ `medication_request_allowed`: TRUE (boolean, optional) - flag whether medications are allowed to be dispensed by the program.
+ `care_plan_activity_allowed`: TRUE (boolean, optional) - flag whether activities are allowed to be created with product as this medications.
+ registry_number: `REG-1111` (string, optional) - Registry number
+ `max_daily_dosage`: 200 (number, required) - Max daily dosage

## Complex FHIR Types
### `Extension`
+ `url`: `container-dosage-numerator` (string, required) - Name of extension

### `Reference`
+ identifier (Identifier)

### `Identifier`
+ `type`(Codeable_Concept, required) - Description of identifier
+ `value` : `9183a36b-4d45-4244-9339-63d81cd08d9c` (string, required)- The value that is unique

### `Codeable_Concept`
+ `coding` (array, required, fixed-type)
    + (object)
        + include `Coding`
+ text (string, optional)

### `Coding`
+ system : `eHealth/resources` (string, required)
+ code : `patient` (string, required) - Symbol in syntax defined by the system

### `Duration`
+ value: 10 (number, optional) - The value of the measured amount. The value includes an implicit precision in the presentation of the value
+ unit: `days` (string, optional) - A human-readable form of the unit
+ system: `eHealth/ucum/units` (string, optional) - The identification of the system that provides the coded form of the unit
+ code: d (string, optional) - A computer processable form of the unit in some unit representation system

### `Period`
+ start : `2018-08-02T10:45:16.000Z`(string, required) - C? Starting time with inclusive boundary
+ end : `2018-08-02T11:00:00.000Z`(string, required) - C? End time with inclusive boundary, if not ongoing

### `Quantity`
+ value : `13,5` (number, required)
+ comparator : `>` (string, optional)
+ unit : `mg` (string, required)
+ system : `eHealth/ucum/units` (string, optional)
+ code: `mg` (string, optional)

### `Simple_Quantity`
+ value : `13,5` (number, required)
+ unit : `mg` (string, required)
+ system : `eHealth/ucum/units` (string, optional)
+ code: `mg` (string, optional)

### `Ratio`
+ numerator (Simple_Quantity, required)
+ denominator (Simple_Quantity, required)

### `Range`
+ low (Simple_Quantity, required)
+ high (Simple_Quantity, required)

### Timing
+ event: `2017-04-20T19:14:13Z` (array[string], optional) - When the event occurs. ISO 8601 date and time in UTC timezone.
+ repeat (object, optional)
    - One Of
        + bounds_duration (Duration)
        + bounds_range (Range)
        + bounds_period (Period)
    + count: 2 (number, optional) - Number of times to repeat
    + count_max: 4 (number, optional) - Maximum number of times to repeat
    + duration: 4 (number, optional) - How long when it happens
    + duration_max: 6 (number, optional) - How long when it happens Max
    + duration_unit: d (string, optional) - unit of time UCUM
    + frequency: 1 (number, optional) - Event occurs frequency times per period
    + frequency_max: 2 (number, optional) - Event occurs up to frequencyMax times per period
    + period: 4 (number, optional) - Event occurs frequency times per period
    + period_max: 6 (number, optional) - Upper limit of period
    + period_unit: d (string, optional) - unit of time UCUM
    + `day_of_week`: mon (array[string], optional) - day of week
    + `time_of_day`: `2017-04-20T19:14:13Z` (array[string], optional) - Time of day for action
    + when: WAKE (array[string], optional) - Regular life events the event is tied to
    + offset: 4 (number, optional) - Minutes from event before or after
+ code (Codeable_Concept, optional)
    + coding (array, fixed-type)
        + (Coding)
            + system: `TIMING_ABBREVIATIONS` (string)

### `Dose_and_Rate`
+ type (Codeable_Concept, optional)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/dose_and_rate` (string, required)
            + code: 'ordered' (string, required)
- One Of
    + dose_range (Range)
    + dose_quantity (Simple_Quantity)
- One Of
    + rate_ratio (Ratio)
    + rate_range (Range)
    + rate_quantity (Simple_Quantity)

## Medications
### `Innm_Request`
+ `sctid`: `52574003` (string, optional) - innm CNOMED code
+ `name`: `Аміодарон` (string, required) - innm local name
+ `name_original`: `Amiodarone` (string, required) - innm original name

### `Innm`
+ `sctid`: `52574003` (string, required) - innm CNOMED code
+ `name`: `Аміодарон` (string, required) - innm local name
+ `name_original`: `Amiodarone` (string, required) - innm original name

### `Innm_Public_Response_Short`
+ `id`: `c7d52544-0bd4-4129-97b0-2d72633e0490` (string, required)
+ include `Innm`

### `Innm_Response_Short`
+ `id`: `c7d52544-0bd4-4129-97b0-2d72633e0490` (string, required)
+ include `Innm`
+ is_active: true (boolean, required)

### `Innm_Response`
+ `id`: `c7d52544-0bd4-4129-97b0-2d72633e0490` (string, required)
+ include `Innm`
+ is_active: true (boolean, required)
+ inserted_at: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ inserted_by: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, required)
+ updated_at: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ updated_by: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required)

### `Dosage_drug`
+ `numerator_unit`: MG (string, required) - `Dictionary MEDICATION_UNIT`
+ `numerator_value`: 200 (number, required)
+ `denumerator_unit`: PILL (string, required) - `Dictionary MEDICATION_UNIT`
+ `denumerator_value`: 1 (number, required)

### `Dosage_container`
+ `numerator_unit`: PILL (string, required) - `Dictionary MEDICATION_UNIT`
+ `numerator_value`: 1 (number, required)
+ `denumerator_unit`: PILL (string, required) - `Dictionary MEDICATION_UNIT`
+ `denumerator_value`: 1 (number, required)

### `Extension_dosage_container_numerator`
+ `url`: `dosage-container-numerator` (string, required) - Name of extension. It presents a dosage of primary package required by Doctor.
+ `valueQuantity`
    + `system`: `medication_unit` (string, required)
    + `code`: `ML` (string, required)
    + `value` : 4 (number, required)

### `MRR_MR_extension_array`
+ `extension` (array, optional)
    + (object)
        + include (`Extension_dosage_container_numerator`, optional) - An extension, which presents a dosage of primary package required by Doctor.

### `Innm_Dosage_for_Medication_request`
+ `id`: `c7d52544-0bd4-4129-97b0-2d72633e0490` (string, required)
+ `form`: PILL (string, required) - `Dictionary MEDICATION_FORM`
+ `dosage` (`Dosage_drug`, required)
+ `container` (`Dosage_container`, required)
+ `request_qty`: 10 (number, required)

### `Innm_Dosage_for_Medication_request_Responce`
+ `medication_id` : `4a63b858-c138-4921-9341-ae9e384bcbd6` (string, required) - `Identifier medication with type **INNM_DOSAGE**`
+ `medication_name`: `Аміодарон 200мг таблетки` (string, required) - `Name of medication with type **INNM_DOSAGE**`
+ `form`: PILL (string, required) - `Dictionary MEDICATION_FORM`
+ `dosage` (`Dosage_drug`, required) - Dosage of innm_dosage object (to be excluded)
+ `ingredients` (array[`Ingredient_v2`], required) - Details of dosage of INNM ingredients, added 2022-04-23, part 1
+ `medication_qty`: 10.34 (number, required) - Medication quantity issued by the doctor

### `block_legal_entity_object`
+ `block_legal_entity` (object, required)
    + `id`: `UUID` (string, required, nullable)
    + `type`: `NHS` (string, required, nullable)

### `reject_legal_entity_object`
+ `reject_legal_entity` (object, required)
    + `id`: `UUID` (string, required, nullable)
    + `type`: `PHARMACY` (string, required, nullable)

### `block_legal_entity_object_not_required`
+ `block_legal_entity` (object, optional)
    + `id`: `UUID` (string, required, nullable)
    + `type`: `NHS` (string, required, nullable)

### `reject_legal_entity_object_not_required`
+ `reject_legal_entity` (object, optional)
    + `id`: `UUID` (string, required, nullable)
    + `type`: `PHARMACY` (string, required, nullable)

### `MR_MRR_additional_fields`
+ priority: routine (enum, optional) - `Dictionary MEDICATION_REQUEST_PRIORITY`
    - routine - The request has normal priority.
    - urgent - The request should be actioned promptly - higher priority than routine.
    - asap - The request should be actioned as soon as possible - higher priority than urgent.
    - stat - The request should be actioned immediately - highest possible priority. E.g. an emergency.
+ `prior_prescription` (Reference, optional, fixed-type) - An order/prescription that is being replaced
    + identifier (Identifier)
        + type (Codeable_Concept, required)
            + coding (array, fixed-type, required)
                + (Coding)
                    + code: `medication_request` (string, required)
+ `container_dosage` (object, optional) - It presents a dosage of primary package required by Doctor in Medication Request.
    + `system`: `MEDICATION_UNIT` (string, required)
    + `code`: `ML` (string, required)
    + `value` : 4 (number, required)
    
### `Manufacturer`
+ `name` : `ПАТ "Київський вітамінний завод"` (string, required)
+ `country` : `UA` (string, required) - `Dictionary COUNTRY`

### `Ingredient_request`
+ `id` : `1349a693-4db1-4a3f-9ac6-8c2f9e541982` (string, required)
+ `dosage` (`Dosage_drug`, required)
+ `is_primary` : true (boolean, required)

### `Ingredient`
+ `id` : `1349a693-4db1-4a3f-9ac6-8c2f9e541982` (string, required)
+ `name` : `Амідарон` (string, required)
+ `dosage` (`Dosage_drug`, required)
+ `is_primary` : true (boolean, required)

### `INNM_Dosage_Request`
+ `name` : `Амідарон` (string, required)
+ `form` :  PILL (string, required) - `Dictionary MEDICATION_FORM`
+ `ingredients` (array, required)
    + (object)
        + include `Ingredient_request`

### `INNM_Dosage_Response_Short`
+ `id` : `09b2bffb-699a-43c0-bc9a-5066d9b9b5a8` (string, required)
+ include `INNM_Dosage_Response`
+ `is_active` : true (boolean, required)

### `INNM_Dosage_Response`
+ `id` : `09b2bffb-699a-43c0-bc9a-5066d9b9b5a8` (string, required)
+ `name` : `Амідарон` (string, required)
+ `form` :  PILL (string, required) - `Dictionary MEDICATION_FORM`
+ `ingredients` (array, required)
    + (object)
        + include `Ingredient`
+ `is_active` : true (boolean, required)
+ inserted_at: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ inserted_by: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, required)
+ updated_at: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ updated_by: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required)

### `Medication_Request`
+ `name` : `Амідарон` (string, required)
+ `manufacturer` (`Manufacturer`, optional)
+ `code_atc` (array, required)
  + `М01АЕ01` ([string])
  + `C01BD01` ([string])
+ `form` :  PILL (string, required) - `Dictionary MEDICATION_FORM`
+ `container` (`Dosage_container`, required)
+ `package_qty`: 30 (number, optional)
+ `package_min_qty`: 10 (number, optional)
+ `certificate` : `UA/4514/01/01` (string, optional)
+ `certificate_expired_at` : `2021-02-09` (string, optional)
+ daily_dosage: 12 (string, optional) - Daily dose of medication, recommended by WHO
+ `ingredients` (array, required)
    + (object)
        + include `Ingredient_request`
+ `drlz_sku_id`: `0404466792737630283703997321` (string, optional) - identifier of a product out of external DRLZ register 

### `Medication_Response`
+ `id` : `09b2bffb-699a-43c0-bc9a-5066d9b9b5a8` (string, required)
+ `name` : `Амідарон` (string, required)
+ `manufacturer` (`Manufacturer`, optional)
+ `code_atc` (array, required)
  + `М01АЕ01` ([string])
  + `C01BD01` ([string])
+ `form` :  PILL (string, required) - `Dictionary MEDICATION_FORM`
+ `container` (`Dosage_container`, required)
+ `package_qty`: 30 (number, optional)
+ `package_min_qty`: 10 (number, optional)
+ daily_dosage: 12 (string, optional) - Daily dose of medication, recommended by WHO
+ `certificate` : `UA/4514/01/01` (string, optional)
+ `certificate_expired_at` : `2021-02-09` (string, optional)
+ `ingredients` (array, required)
    + (object)
        + include `Ingredient`
+ `is_active` : true (boolean, required)
+ inserted_at: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ inserted_by: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, required)
+ updated_at: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ updated_by: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required)
+ `drlz_sku_id`: `0404466792737630283703997321` (string, optional) - identifier of a product out of external DRLZ register 

### `Medication_Response_Short`
+ `id` : `09b2bffb-699a-43c0-bc9a-5066d9b9b5a8` (string, required)
+ include `Medication_Response`
+ `is_active` : true (boolean, required)

### `Medication_Short`
+ `name` : `Амідарон` (string, required)
+ `type`: `MEDICATION` (string, required)
+ `manufacturer` (`Manufacturer`, optional)
+ `form` :  PILL (string, required) - `Dictionary MEDICATION_FORM`
+ `container` (`Dosage_container`, required)
+ `form_pharm`: `DISPERSIBLE_TABLET` (string, optional) - Pharmaceutical form of drugs. FORM_PHARM_LIST dictionary used for the values.
+ `drlz_sku_id`: `0404466792737630283703997321` (string, optional) - identifier of a product out of external DRLZ register

### `Program_medications_Request`
+ `medication_id`: `59781de0-2e64-4359-b716-bcc05a32c10f`(string, required) -  Medication Identifier
+ `medical_program_id`: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, required) -  Medical program Identifier
+ `reimbursement` (object, required)
    + include `Reimbursement`
+ `wholesale_price`: 148.50 (string, required) - factory gate price for package of medications
+ `consumer_price`: 150.00 (string, required) - consumer price for package of medications
+ `reimbursement_daily_dosage`: 10.4858 (string, required) - reimbuersement amount for recommended daily dosage of medication
+ `estimated_payment_amount`: 34.50 (string, required) - the estimatied amount which patient should pay for package of medications after reimbursment

### `Program_medications_Update_Request`
+ `is_active`: true (boolean, optional)
+ `medication_request_allowed`: true (boolean, optional)
+ `reimbursement` (object, optional)
    + include `Reimbursement`
+ `wholesale_price`: 148.50 (string, required) - factory gate price for package of medications
+ `consumer_price`: 150.00 (string, required) - consumer price for package of medications
+ `daily_dosage`: 200  (string, required) - recommended daily dosage of medication
+ `reimbursement_daily_dosage`: 10.4858 (string, required) - reimbuersement amount for recommended daily dosage of medication
+ `estimated_payment_amount`: 34.50 (string, required) - the estimatied amount which patient should pay for package of medications after reimbursment

### `Reimbursement`
+ `type`: `fixed` (string, required) - fixed or external type of reimbursement (Dictionary REIMBURSEMENT_TYPE)
+ `reimbursement_amount`: 450 (number, optional) - Amount to reimburse for medication package by medical_program

### `Program_medications_Response`
+ `id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ `medication` (`Medication_Response_Short`, required)
+ `medical_program` (`Medical_Program_Response`, required)
+ `medication_request_allowed`: true (boolean, required) - indicator whether medication is allowed to use in new medication request
+ `reimbursement` (object, required)
    + include `Reimbursement`
+ `wholesale_price`: 148.50 (string, required) - factory gate price for package of medications
+ `consumer_price`: 150.00 (string, required) - consumer price for package of medications
+ `reimbursement_daily_dosage`: 10.4858 (string, required) - reimbuersement amount for recommended daily dosage of medication
+ `estimated_payment_amount`: 34.50 (string, required) - the estimatied amount which patient should pay for package of medications after reimbursment
+ `is_active`: true (boolean, required) - flag for activation/deactivation
+ include `System_Logging`

### `Program_medications_List`
+ `id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ `medical_program_id`: `042a3b20-bb08-4e50-83ee-ef23c3b1c0c8` (string, required) - medical program identifier
+ `medical_program_name`: `Доступні ліки` (string, required) - medical program name
+ `medication_id`: `59781de0-2e64-4359-b716-bcc05a32c10f`(string, required) -  Medication Identifier
+ `medication_name`: `Аритміл` (string, required) - Medication name
+ `form`:  PILL (string, optional) - `Dictionary MEDICATION_FORM`
+ `manufacturer` (`Manufacturer`, optional)
+ `innm_id`: `5052fcaf-58a0-461b-9e98-d60243a1773e` (string, required) - INNM Identifier
+ `innm_name`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - INNM name
+ `reimbursement_amount`: 15 (number, optional) - Amount to reimburse for one medication_unit by medical_program
+ `wholesale_price`: 148.50 (string, required) - factory gate price for package of medications
+ `consumer_price`: 150.00 (string, required) - consumer price for package of medications
+ `daily_dosage`: 200  (string, required) - recommended daily dosage of medication
+ `reimbursement_daily_dosage`: 10.4858 (string, required) - reimbuersement amount for recommended daily dosage of medication
+ `estimated_payment_amount`: 34.50 (string, required) - the estimatied amount which patient should pay for package of medications after reimbursment

### `Program_medications_ID`
+ `id` : `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - program_medications_id
+ `innm` (object, required)
    + `id`: `c7d52544-0bd4-4129-97b0-2d72633e0490` (string, required) - innm id
    + `name`: `Аміодарон` (string, required) - innm name
    + `form`: PILL (string, required) - `Dictionary MEDICATION_FORM` - innm form
    + `ingredients` (array, required)
        + (object)
            + include (`Dosage_drug`, required) - substances dosage in innm
            + `substance_name`: `Аміодарон` (string, optional) - substance name
            + `is_primary` : true (boolean, required)
+ `medications` (object, required)
    + `medication_id` : `4a63b858-c138-4921-9341-ae9e384bcbd6` (string, required)
    + `name`: `Аміодарон 5мг` (string, required) - medication name
    + `form`: PILL (string, required) - `Dictionary MEDICATION_FORM` - medication form
    + `manufacturer` (`Manufacturer`, optional)
    + `ingredients` (array, required)
        + (object)
            + include (`Dosage_drug`, required) - innm dosage in medication
            + `innm_name`: `Аміодарон`(string, required)
            + `is_primary` : true (boolean, required)
+ `medical_program` (`Medical_Program_Response`, required)
+ `reimbursement` (`Reimbursement`, required)
+ `wholesale_price`: 148.50 (string, required) - factory gate price for package of medications
+ `consumer_price`: 150.00 (string, required) - consumer price for package of medications
+ `daily_dosage`: 200  (string, required) - recommended daily dosage of medication
+ `reimbursement_daily_dosage`: 10.4858 (string, required) - reimbuersement amount for recommended daily dosage of medication
+ `estimated_payment_amount`: 34.50 (string, required) - the estimatied amount which patient should pay for package of medications after reimbursment
+ `is_active` : true (boolean, required) - flag for activation/deactiovation
+ `medication_request_allowed`: true (boolean, required) - flag whether medications are allowed to be dispensed by the program

### `Black_list_user_Request`
+ `tax_id`: `3126509816` (string, required) - tax_id by party_id

### `Black_list_user_Response`
+ `id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - black list user id
+ `tax_id`: `3126509816` (string, required) - tax_id by party_id
+ `is_active`: true (boolean, required) - flag for activation/deactiovation
+  `parties` (array[`Person_Short_BlackList`], required)
+ inserted_at: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ inserted_by: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, required)
+ updated_at: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ updated_by: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required)

### `Party_user_Response`
+ `id`: `585044f5-1272-4bca-8d41-8440eefe7d26` (string, required) - Person identifier
+ `user_id`: `09106b70-18b0-4726-b0ed-6bda1369fd52` (string, optional) - user Identifier
+ `party_id`: `79a91507-d409-49fc-b373-934b59c4f694` (string, optional) - Party Identifier
+ `first_name`: `Петро` (string, required)
+ `last_name`: `Іванов` (string, required)
+ `second_name`: `Миколайович` (string, optional)
+ `birth_date`: `1991-08-19T00:00:00.000Z` (string, required)
+ inserted_at: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ updated_at: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.

### `Person_Short_BlackList`
+ `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ `first_name`: Петро (string, required)
+ `last_name`: Іванов (string, required)
+ `second_name`: Миколайович (string, optional)
+ `birth_date`: `1991-08-19` (string, required) - ISO Datetime.

## `Medication request Request`
### `Medication_request_Request_post_data`
+ `person_id`: `585044f5-1272-4bca-8d41-8440eefe7d26` (string, required) - Person identifier
+ `employee_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - Employee identifier with `type=DOCTOR` who issued Medication Request.
+ `division_id`: `881d6dee-dd3d-43f3-8983-922354c0e6ce` (string, required) - Division identifier where issued Medication Request.
+ `created_at`: `2017-08-17` (string, required) - Medication request creation date, which is determined by the external system. Format *DATE '2017-09-07'*
+ `started_at`: `2017-08-17` (string, required) - Start date of a treatment period, which is determined by the external system. Greater or equal to **created_at**. Format *DATE '2017-09-07'*
+ `ended_at`: `2017-09-16` (string, required) - End date of a treatment period, which is determined by the external system. Greater or equal to **started_at**. Format *DATE '2017-10-07'*
+ `medication_id` : `1349a693-4db1-4a3f-9ac6-8c2f9e541982` (string, required) - Medication, type = INNM_DOSAGE, identifier
+ `medication_qty`: 10.34 (number, required) - Medication quantity isuued by the doctor
+ `medical_program_id`: `59781de0-2e64-4359-b716-bcc05a32c10f` (string, required) - Medical program Identifier
+ intent: plan (enum, required) - Represents the medication request purpose. Dictionary MEDICATION_REQUEST_INTENT
    - plan - The request represents an intention to ensure something occurs without providing an authorization for others to act.
    - order - The request represents a request/demand and authorization for action.
+ category: community (enum, required) - Type of medication usage. Dictionary MEDICATION_REQUEST_CATEGORY
    - community - Includes requests for medications to be administered or consumed by the patient in their home
+ based_on (array,optional, fixed-type)
    + (Reference)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `care_plan` (string)
    + (Reference)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `activity` (string)
+ `context`(Reference, required, fixed-type)
    + identifier (Identifier)
        + type (Codeable_Concept, required)
            + coding (array, fixed-type, required)
                + (Coding)
                    + code: `encounter` (string, required)
+ `dosage_instruction` (array, required, fixed-type)
    + (Dosage_Instruction)
+ include `MR_MRR_additional_fields`

### `Medication_request_Request_Qualify_post_data`
+ `person_id`: `585044f5-1272-4bca-8d41-8440eefe7d26` (string, required) - Person identifier
+ `employee_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - Employee identifier with `type=DOCTOR` who issued Medication Request.
+ `division_id`: `881d6dee-dd3d-43f3-8983-922354c0e6ce` (string, required) - Division identifier where issued Medication Request.
+ `created_at`: `2017-08-17` (string, required) - Medication request creation date, which is determined by the external system. Format *DATE '2017-09-07'*
+ `started_at`: `2017-08-17` (string, required) - Start date of a treatment period, which is determined by the external system. Greater or equal to **created_at**. Format *DATE '2017-09-07'*
+ `ended_at`: `2017-09-16` (string, required) - End date of a treatment period, which is determined by the external system. Greater or equal to **started_at**. Format *DATE '2017-10-07'*
+ `medication_id` : `1349a693-4db1-4a3f-9ac6-8c2f9e541982` (string, required) - Medication, type = INNM_DOSAGE, identifier
+ `medication_qty`: 10.34 (number, required) - Medication quantity isuued by the doctor
+ intent: plan (enum, required) - Represents the medication request purpose. Dictionary MEDICATION_REQUEST_INTENT
    - plan - The request represents an intention to ensure something occurs without providing an authorization for others to act.
    - order - The request represents a request/demand and authorization for action.
+ category: community (enum, required) - Type of medication usage. Dictionary MEDICATION_REQUEST_CATEGORY
    - community - Includes requests for medications to be administered or consumed by the patient in their home
+ based_on (array,optional, fixed-type)
    + (Reference)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `care_plan` (string)
    + (Reference)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `activity` (string)
+ `context`(Reference, required, fixed-type)
    + identifier (Identifier)
        + type (Codeable_Concept, required)
            + coding (array, fixed-type, required)
                + (Coding)
                    + code: `encounter` (string, required)
+ `dosage_instruction` (array, required, fixed-type)
    + (Dosage_Instruction)
+ include `MR_MRR_additional_fields`

### `Medication_request_Request_Response`
+ `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Medication Request request identifier
+ `status`: `NEW` (string, required) - Medication Request status. Find available **statuses** on State Charts wiki page
+ `request_number` : `0000-243P-1X53-EH38` (string) - Public medication request human readable number
+ `created_at`: `2017-08-17` (string, required) - Medication request creation date, which is determined by the external system. Format *DATE '2017-09-07'*
+ `started_at`: `2017-08-17` (string, required) - Start date of a treatment period, which is determined by the external system. Greater or equal to **created_at**. Format *DATE '2017-09-07'*
+ `ended_at`: `2017-09-16` (string, required) - End date of a treatment period, which is determined by the external system. Greater or equal to **started_at**. Format *DATE '2017-10-07'*
+ `dispense_valid_from`: `2017-08-17` (string) - Start date of dispense period, which is determined by the external system. Format *DATE '2017-09-07'*
+ `dispense_valid_to`: `2017-09-16` (string) - End date of dispense period, which is determined by the external system. Greater or equal to **dispense_valid_from**. Format *DATE '2017-10-07'*
+ `legal_entity` (`Legal_Entity_Short`, required)
    + `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ `division` (`Division_Details`, required)
+ `employee` (`Employee_Minimal`, required)
+ `person` (`Person_Medication_Request`)
+ `medication_info` (`Innm_Dosage_for_Medication_request_Responce`, required)
+ `medical_program` (`Medical_Program_Response_without_settings`, required)
+ intent: plan (enum, required) - Represents the medication request purpose. Dictionary MEDICATION_REQUEST_INTENT
    - plan - The request represents an intention to ensure something occurs without providing an authorization for others to act.
    - order - The request represents a request/demand and authorization for action.
+ category: community (enum, required) - Type of medication usage. Dictionary MEDICATION_REQUEST_CATEGORY
    - community - Includes requests for medications to be administered or consumed by the patient in their home
+ based_on (array,optional, fixed-type)
    + (Reference)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `care_plan` (string)
    + (Reference)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `activity` (string)
+ `context`(Reference, required, fixed-type)
    + identifier (Identifier)
        + type (Codeable_Concept, required)
            + coding (array, fixed-type, required)
                + (Coding)
                    + code: `encounter` (string, required)
+ `dosage_instruction` (array, required, fixed-type)
    + (Dosage_Instruction)
+ include `MR_MRR_additional_fields`

### `Medication_request_Request_Public_Response`
+ `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Medication Request request identifier
+ `status`: `NEW` (string, required) - Medication Request status. Find available **statuses** on State Charts wiki page
+ `request_number` : `0000-243P-1X53-EH38` (string) - Public medication request human readable number
+ `created_at`: `2017-08-17` (string, required) - Medication request creation date. Format *DATE '2017-09-07'*
+ `started_at`: `2017-08-17` (string, required) - Start date of a treatment period. Format *DATE '2017-09-07'*
+ `ended_at`: `2017-09-16` (string, required) - End date of a treatment period. Format *DATE '2017-10-07'*
+ `dispense_valid_from`: `2017-08-17` (string) - Start date of dispense period, which is determined by the external system. Format *DATE '2017-09-07'*
+ `dispense_valid_to`: `2017-09-16` (string) - End date of dispense period, which is determined by the external system. Greater or equal to **dispense_valid_from**. Format *DATE '2017-10-07'*
+ `legal_entity` (`Legal_Entity_Short`, required)
    + `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ `division` (`Division_Details`, required)
+ `employee` (`Employee_Minimal`, required)
+ `person` (`Person_Medication_Request`)
+ `medication_info` (`Innm_Dosage_for_Medication_request_Responce`, required)
+ `medical_program` (`Medical_Program_Response_without_settings`, required)
+ intent: plan (enum, required) - Represents the medication request purpose. Dictionary MEDICATION_REQUEST_INTENT
    - plan - The request represents an intention to ensure something occurs without providing an authorization for others to act.
    - order - The request represents a request/demand and authorization for action.
+ category: community (enum, required) - Type of medication usage. Dictionary MEDICATION_REQUEST_CATEGORY
    - community - Includes requests for medications to be administered or consumed by the patient in their home
+ based_on (array,optional, fixed-type)
    + (Reference)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `care_plan` (string)
    + (Reference)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `activity` (string)
+ `context`(Reference, required, fixed-type)
    + identifier (Identifier)
        + type (Codeable_Concept, required)
            + coding (array, fixed-type, required)
                + (Coding)
                    + code: `encounter` (string, required)
+ `dosage_instruction` (array, required, fixed-type)
    + (Dosage_Instruction)
+ include `MR_MRR_additional_fields`

### `Medication_request_Request_Sign`
+ `category`: `community` (enum, required)
+ `created_at`: `2018-11-13` (string, required) - Medication request creation date, which is determined by the external system. Format *DATE '2017-09-07'*
+ `dispense_valid_from`: `2018-11-13` (string, required) - Start date of dispense period, which is determined by the external system. Format *DATE '2017-09-07'*
+ `dispense_valid_to`: `2018-12-13` (string, required) - End date of dispense period, which is determined by the external system. Greater or equal to **dispense_valid_from**. Format *DATE '2017-10-07'*
+ `division` (`Division`, required)
    + `id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
    + `legal_entity_id`: `c8aadb87-ecb9-41ca-9ad4-ffdfe1dd89c9` (string, required)
    + `mountain_group`: `false` (boolean, optional)
    + status: ACTIVE (enum, required)
        - ACTIVE
        - CLOSED
    + dls_id: `2872985` (string, optional)
    + dls_verified: true (boolean, optional)
+ `dosage_instruction` (array, required, fixed-type)
    + (Dosage_Instruction)
+ `employee` (`Employee_Minimal`, required)
+ `ended_at`: `2018-12-13` (string, required) - End date of a treatment period, which is determined by the external system. Greater or equal to **started_at**. Format *DATE '2017-10-07'*
+ `id`: `fda6839c-7c17-4b45-bc18-14b1039fe702` (string, required) - Medication Request request identifier
+ intent: plan (enum, required) - Represents the medication request purpose. Dictionary MEDICATION_REQUEST_INTENT
    - plan - The request represents an intention to ensure something occurs without providing an authorization for others to act.
    - order - The request represents a request/demand and authorization for action.
+ `legal_entity` (`Legal_Entity_Short`, required)
    + `id`: `c8aadb87-ecb9-41ca-9ad4-ffdfe1dd89c9` (string, required)
+ `medication_info` (`Innm_Dosage_for_Medication_request_Responce`, required)
+ `person` (`Person_Medication_Request_Sign`, required)
+ `request_number` : `0000-K8K5-5MTE-352H` (string, required) - Public medication request human readable number
+ `started_at`: `2018-11-13` (string, required) - Start date of a treatment period, which is determined by the external system. Greater or equal to **created_at**. Format *DATE '2017-09-07'*
+ `status`: `NEW` (string, required) - Medication Request status. Find available **statuses** on State Charts wiki page
+ `medical_program` (`medical_programs_list`, required)
+ include `MR_MRR_additional_fields`

### `Qualify_Medication_request_Request_List_program_post_data`
+ `id`: `59781de0-2e64-4359-b716-bcc05a32c10f` (string,required) - `Medical program Identifier`

### `Dosage_Instruction`
+ sequence: 1 (number, required) - The order of the dosage instructions
+ text: `0.25mg PO every 6-12 hours as needed for menses from Jan 15-20, 2015.  Do not exceed more than 4mg per day` (string, required) - Free text dosage instructions e.g. SIG
+ `additional_instruction` (array, optional, fixed-type)
    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
             + system: `eHealth/SNOMED/additional_dosage_instructions` (string)
             + code: `311504000` (string)
+ `patient_instruction`: `0.25mg PO every 6-12 hours as needed for menses from Jan 15-20, 2015.  Do not exceed more than 4mg per day` (string, optional) - Patient or consumer oriented instructions
+ timing (Timing, optional)
- One Of
    + as_needed_boolean: true (boolean)
    + as_needed_codeable_concept (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding
                + system: `eHealth/SNOMED/medication_as_needed_reason_codes` (string)
                + code: `144008` (string)
+ site (Codeable_Concept) - Body site to administer to
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/SNOMED/anatomical_structure_administration_site_codes` (string)
            + code: `344001` (string)
+ route (Codeable_Concept) - How drug should enter body
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/SNOMED/route_codes` (string)
            + code: `46713006` (string)
+ method (Codeable_Concept) - Technique for administering medication
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/SNOMED/administration_methods` (string)
            + code: `419747000` (string)
+ `dose_and_rate` (Dose_and_Rate, optional)
+ `max_dose_per_period` (Ratio, required)
+ `max_dose_per_administration` (Simple_Quantity, required)
+ `max_dose_per_lifetime` (Simple_Quantity, optional)

### `Qualify_Medication_request_Request_Responce`
+ `program_id`: `59781de0-2e64-4359-b716-bcc05a32c10f` (string, required) - `Medical program Identifier`
+ `program_name` : `Програма "Доступні ліки"`(string, required)
+ `status` : `INVALID` (enum, required) - Status for ability use program for this Medication request Request
    - VALID
    - INVALID
+ `rejection_reason` : ` Innm not on the list of approved innms for program 'DOSTUPNI LIKI' !` (string) - Reason to fetch invalid status

### `Program_medications_for_Qualify`
+ id: `0f2fbf93-3041-4c0d-a3cf-ff558c861df8` (string, required) - Program participant identifier
+ `medication_id`: `59781de0-2e64-4359-b716-bcc05a32c10f`(string, required) -  Medication Identifier
+ `medication_name`: `Амлодипін-КВ ` (string, required) - Medication name
+ `form` :  PILL (string, optional) - `Dictionary MEDICATION_FORM`
+ `manufacturer` (`Manufacturer`, optional)
+ `reimbursement_amount`: 15 (number, optional) - Amount to reimburse for one medication_unit by medical_program
+ wholesale_price: 25.14 (number, optional) - Wholesale pricing per package, UAH
+ consumer_price: 34.03 (number, optional) - Retail price for packaging, UAH
+ `reimbursement_daily_dosage`: 1.4438 (number, optional) - The amount of the compensation of the daily dose of the medical product, UAH
+ `estimated_payment_amount`: 5.15 (number, optional) - Amount of additional payment for packing, UAH
+ `container_dosage` (`Dosage_container`, required)
+ `package_min_qty`: 20 (number, optional) - indivisible part of medicine pacage
+ `package_qty`: 20 (number, optional) - quantity of medicine in a pacage
+ `start_date`: `2019-01-01` (string, optional) - Active from date
+ `end_date`: `2019-06-30` (string, optional) - Active to date
+ `registry_number`: `REG-1111` (string, optional) - Registry number
+ `drlz_sku_id`: `0404466792737630283703997321` (string, optional) - identifier of a product out of external DRLZ register 

### `Qualify_by_ID_Request_for_Medication_request_Responce`
+ include `Qualify_Medication_request_Request_Responce`
+ `participants` (array, required)
    + (object)
        + include `Program_medications_for_Qualify`

## `medical_programs`
### `medical_programs_request`
+ `name`: `Доступні ліки` (string, required) - medical program name that is used on govermental level
+ `same_mnn_in_treatment_period`: true (boolean, required) - Allow to create new medication request with the same mnn in one treatment period
+ `funding_source`: `NHS` (string, required) - `Dictionary FUNDING_SOURCE`
+ `mr_blank_type`: `F-1` (string, required) - `Dictionary MR_BLANK_TYPES`

### `medical_programs_response`
+ `id`: `c7d52544-0bd4-4129-97b0-2d72633e0490` (string, required) - Internal medical program ID, a UUID string.
+ `name`: `Доступні ліки` (string, required) - medical program name that is used on govermental level
+ `medical_program_settings` (`Medical_program_settings`, required) - some conditions for using program
+ `medical_program_settings_text`: `Some text` (string, optional) - justification of the possibility or impossibility of using the program on medication request with some settings
+ `is_active`: `true` (boolean, optional) - Is medical program active or not. True - Active; False - Inactive
+ `medication_dispense_allowed`: true (boolean, optional) - posibility to create medication dispense with program
+ `medication_dispense_allowed_text`: `Some text` (string, optional) - justification of the possibility or impossibility of using the program on medication dispense
+ `medication_request_allowed`: true (boolean, optional) - posibility to create medication request with program
+ `medication_request_allowed_text`: `Some text` (string, optional) - justification of the possibility or impossibility of using the program on medication request
+ `type`: `MEDICATION` (string, optional) - `Dictionary MEDICAL_PROGRAM_TYPE`
+ `funding_source`: `NHS` (string, required) - `Dictionary FUNDING_SOURCE`
+ `mr_blank_type`: `F-1` (string, required) - `Dictionary MR_BLANK_TYPES`
+ `inserted_at`: `2017-04-20T19:14:13Z` (string, optional) - ISO 8601 date and time in UTC timezone.
+ `inserted_by`: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, optional)
+ `updated_at`: `2017-04-20T19:14:13Z` (string, optional) - ISO 8601 date and time in UTC timezone.
+ `updated_by`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, optional)

### `Medical_program_settings`
+ `care_plan_required`: true (boolean, required) - posibility to create medication request with reference on care plan
+ `employee_types_to_create_medication_request` (array, required) - posibility to create medication request for particular types of employees
    + `SPECIALIST` (string, required)
    + `DOCTOR` (string, required)    
+ `skip_mnn_in_treatment_period`: true (boolean, required) - posibility to create new medication request with the same mnn in one treatment period
+ `skip_employee_validation`: true (boolean, required) - posibility to create medication request by any user who has a scope
+ `speciality_types_allowed` (array, optional) - posibility to create medication request or care plan activity for particular specialities of employees
    + `ENDOCRINOLOGY` (string, required)
    + `PEDIATRIC_NEUROLOGY` (string, required)
+ `conditions_icd10_am_allowed` (array, optional) - posibility to create medication request or care plan activity for particular conditions from ICD10_AM
    + `A00.0` (string, required)
    + `A00.1` (string, required)
+ `conditions_icpc2_allowed` (array, optional) - posibility to create medication request or care plan activity for particular conditions from ICPC2
    + `A01` (string, required)
    + `A02` (string, required)
+ `providing_conditions_allowed` (array, optional) - posibility to create care plan activity for particular terms of service. - `Dictionary PROVIDING_CONDITION`
    + `INPATIENT` (string, required)
    + `OUTPATIENT` (string, required)
+ `medication_request_max_period_day`: 90 (number, optional) - maximum period length (in days) allowed for the Medication request with the medical program
+ `skip_medication_request_employee_declaration_verify`: true (boolean, required) - allows to skip verification if employee has declaration with patient to create medication request
+ `skip_medication_request_legal_entity_declaration_verify`: true (boolean, required) - allows to skip verification if employee in legal entity that has declaration with patient to create medication request
+ `multi_medication_dispense_allowed`: true (boolean, required) - check if medication request can be dispensed partially
+ `skip_medication_dispense_sign`: true (boolean, required) - check if process medication dispense should be invoked using digital sign
+ `medication_request_notification_disabled`: true (boolean, required) - check if patient should not be notified via SMS on operations with medication request (create/reject/resend)
+ `skip_contract_provision_verify`: true (boolean, required) - check if validations of Contract and Medical Program Provisions should be invoked for the medical program
+ `medication_dispense_period_day`: 90 (number, optional) - medication dispense period (in days)
+ `medical_program_change_on_dispense_allowed`: true (boolean, required) - check if medication request can be dispensed with another medical program.
+ `patient_categories_allowed` (array, optional) - posibility to create care plan activity for particular terms of service. - `Dictionary eHealth/clinical_impression_patient_categories`
    + `insulin_1` (string, required)
    + `insulin_2` (string, required)
+ `license_types_allowed` (array, optional) - the types of legal entity licenses required to dispense medication request - `Dictionary LICENSE_TYPE`
    + `PHARMACY` (string, required)
    + `PHARMACY_DRUGS` (string, required)

### `medical_programs_list`
+ `id`: `c7d52544-0bd4-4129-97b0-2d72633e0490` (string, required) - Internal medical program ID, a UUID string.
+ `name`: `Доступні ліки` (string, required) - medical program name that is used on govermental level
+ `is_active`: `true` (boolean, required) - Is medical program active or not. True - Active; False - Inactive
+ `funding_source`: `NHS` (string, required) - `Dictionary FUNDING_SOURCE`
+ `mr_blank_type`: `F-1` (string, required) - `Dictionary MR_BLANK_TYPES`

## `Medication request`
### `Medication_request_Public_Response`
+ `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Medication Request identifier
+ `status`: `ACTIVE` (enum[string], required) - Medication Request status. Find available **statuses** on State Charts wiki page
    - ACTIVE
    - COMPLETED
    - REJECTED
    - EXPIRED
+ `request_number` : `0000-243P-1X53-EH38` (string) - Public medication request human readable number
+ `created_at`: `2017-08-17` (string, required) - Medication request creation date, which is determined by the external system. Format *DATE '2017-09-07'*
+ `started_at`: `2017-08-17` (string, required) - Start date of a treatment period, which is determined by the external system. Greater or equal to **created_at**. Format *DATE '2017-09-07'*
+ `ended_at`: `2017-09-16` (string, required) - End date of a treatment period, which is determined by the external system. Greater or equal to **started_at**. Format *DATE '2017-10-07'*
+ `dispense_valid_from`: `2017-08-17` (string, required) - Start date of dispense period, which is determined by the external system. Format *DATE '2017-09-07'*
+ `dispense_valid_to`: `2017-09-16` (string, required) - End date of dispense period, which is determined by the external system. Greater or equal to **dispense_valid_from**. Format *DATE '2017-10-07'*
+ `legal_entity` (`Legal_Entity_Short`, required)
    + `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ `division` (`Division_Details`, required)
+ `employee` (`Employee_Minimal`, required)
+ `person` (`Person_Medication_Request`, required)
+ `medication_info` (`Innm_Dosage_for_Medication_request_Responce`, required)
+ `medical_program` (`Medical_Program_Response_without_settings`, required)
+ intent: plan (enum, required) - Represents the medication request purpose. Dictionary MEDICATION_REQUEST_INTENT
    - plan - The request represents an intention to ensure something occurs without providing an authorization for others to act.
    - order - The request represents a request/demand and authorization for action.
+ category: community (enum, required) - Type of medication usage. Dictionary MEDICATION_REQUEST_CATEGORY
    - community - Includes requests for medications to be administered or consumed by the patient in their home
+ based_on (array,optional, fixed-type)
    + (Reference)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `care_plan` (string)
    + (Reference)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `activity` (string)
+ `context`(Reference, required, fixed-type)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
+ `dosage_instruction` (array, required, fixed-type)
    + (Dosage_Instruction)
+ `rejected_at`: `2022-01-28` (string, optional, nullable) - Reject date - ISO 8601 date and time in UTC timezone.
+ `rejected_by`: `e8e5a969-74d8-4620-8496-f5e41f2e8312` (string, optional, nullable) - Rejected user identifier
+ `reject_reason`: `Incompatible drugs` (string, optional, nullable) - Medication request reject reason
+ `reject_reason_code`: `PATIENT_REJECT` (string, optional, nullable, nullable) - `Dictionary MEDICATION_REQUEST_REJECT_REASON`
+ is_blocked: false (boolean, required) - Whether medication request is blocked or not
+ `block_reason`: `Підозра на фрод` (string, optional) - Block or unblock reason description
+ `block_reason_code`: `BLOCK_WRONG_QTY_DRUG` (string, optional) - Block or unblock reason code `Dictionary MEDICATION_REQUEST_BLOCK_REASON`
+ include `block_legal_entity_object`
+ include `MR_MRR_additional_fields`

### `Medication_request_Public_Response_for_Pharmacist`
+ `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Medication Request identifier
+ `status`: `ACTIVE` (enum[string], required) - Medication Request status. Find available **statuses** on State Charts wiki page
    - ACTIVE
    - COMPLETED
    - REJECTED
    - EXPIRED
+ `request_number` : `0000-243P-1X53-EH38` (string) - Public medication request human readable number
+ `created_at`: `2017-08-17` (string, required) - Medication request creation date, which is determined by the external system. Format *DATE '2017-09-07'*
+ `started_at`: `2017-08-17` (string, required) - Start date of a treatment period, which is determined by the external system. Greater or equal to **created_at**. Format *DATE '2017-09-07'*
+ `ended_at`: `2017-09-16` (string, required) - End date of a treatment period, which is determined by the external system. Greater or equal to **started_at**. Format *DATE '2017-10-07'*
+ `dispense_valid_from`: `2017-08-17` (string, required) - Start date of dispense period, which is determined by the external system. Format *DATE '2017-09-07'*
+ `dispense_valid_to`: `2017-09-16` (string, required) - End date of dispense period, which is determined by the external system. Greater or equal to **dispense_valid_from**. Format *DATE '2017-10-07'*
+ `person` (`Person_Medication_Request_for_Pharmacist`, required)
+ `medication_info` (`Innm_Dosage_for_Medication_request_Responce`, required)
+ `medical_program` (`Medical_Program_Response_without_settings`, required)
+ intent: plan (enum, required) - Represents the medication request purpose. Dictionary MEDICATION_REQUEST_INTENT
    - plan - The request represents an intention to ensure something occurs without providing an authorization for others to act.
    - order - The request represents a request/demand and authorization for action.
+ category: community (enum, required) - Type of medication usage. Dictionary MEDICATION_REQUEST_CATEGORY
    - community - Includes requests for medications to be administered or consumed by the patient in their home
+ based_on (array,optional, fixed-type)
    + (Reference)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `care_plan` (string)
    + (Reference)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `activity` (string)
+ `context`(Reference, required, fixed-type)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
+ `dosage_instruction` (array, required, fixed-type)
    + (Dosage_Instruction)
+ `reject_reason`: `Incompatible drugs` (string, optional, nullable) - Medication request reject reason
+ `reject_reason_code`: `PATIENT_REJECT` (string, optional, nullable, nullable) - `Dictionary MEDICATION_REQUEST_REJECT_REASON`
+ is_blocked: false (boolean, required) - Whether medication request is blocked or not
+ `block_reason`: `Підозра на фрод` (string, optional) - Block or unblock reason description
+ `block_reason_code`: `BLOCK_WRONG_QTY_DRUG` (string, optional) - Block or unblock reason code `Dictionary MEDICATION_REQUEST_BLOCK_REASON`
+ include `block_legal_entity_object`
+ include `MR_MRR_additional_fields`

### `Medication_request_Public_Response_with_Medical_Program_min`
+ `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Medication Request identifier
+ `status`: `ACTIVE` (enum[string], required) - Medication Request status. Find available **statuses** on State Charts wiki page
    - ACTIVE
    - COMPLETED
    - REJECTED
    - EXPIRED
+ `request_number` : `0000-243P-1X53-EH38` (string) - Public medication request human readable number
+ `created_at`: `2017-08-17` (string, required) - Medication request creation date. Format *DATE '2017-09-07'*
+ `started_at`: `2017-08-17` (string, required) - Start date of a treatment period. Format *DATE '2017-09-07'*
+ `ended_at`: `2017-09-16` (string, required) - End date of a treatment period. Format *DATE '2017-10-07'*
+ `dispense_valid_from`: `2017-08-17` (string, required) - Start date of dispense period, which is determined by the external system. Format *DATE '2017-09-07'*
+ `dispense_valid_to`: `2017-09-16` (string, required) - End date of dispense period, which is determined by the external system. Greater or equal to **dispense_valid_from**. Format *DATE '2017-10-07'*
+ `legal_entity` (`Legal_Entity_Short`, required)
    + `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ `division` (`Division_Details`, required)
+ `employee` (`Employee_Minimal`, required)
+ `person` (`Person_Medication_Request`, required)
+ `medication_info` (`Innm_Dosage_for_Medication_request_Responce`, required)
+ `medical_program` (`Medical_Program_Response_min_without_settings`, required)
+ intent: plan (enum, required) - Represents the medication request purpose. Dictionary MEDICATION_REQUEST_INTENT
    - plan - The request represents an intention to ensure something occurs without providing an authorization for others to act.
    - order - The request represents a request/demand and authorization for action.
+ category: community (enum, required) - Type of medication usage. Dictionary MEDICATION_REQUEST_CATEGORY
    - community - Includes requests for medications to be administered or consumed by the patient in their home
+ based_on (array,optional, fixed-type)
    + (Reference)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `care_plan` (string)
    + (Reference)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `activity` (string)
+ `context`(Reference, required, fixed-type)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
+ `dosage_instruction` (array, required, fixed-type)
    + (Dosage_Instruction)
+ `rejected_at`: `2022-01-28` (string, optional, nullable) - Reject date - ISO 8601 date and time in UTC timezone.
+ `rejected_by`: `e8e5a969-74d8-4620-8496-f5e41f2e8312` (string, optional, nullable) - Rejected user identifier
+ `reject_reason`: `Incompatible drugs` (string, optional, nullable) - Medication request reject reason
+ `reject_reason_code`: `PATIENT_REJECT` (string, optional, nullable, nullable) - `Dictionary MEDICATION_REQUEST_REJECT_REASON`
+ is_blocked: false (boolean, required) - Whether medication request is blocked or not
+ `block_reason`: `Підозра на фрод` (string, optional) - Block or unblock reason description
+ `block_reason_code`: `BLOCK_WRONG_QTY_DRUG` (string, optional) - Block or unblock reason code `Dictionary MEDICATION_REQUEST_BLOCK_REASON`
+ include `block_legal_entity_object`
+ include `MR_MRR_additional_fields`

### `Medication_request_reject_Public_Response_with_Medical_Program_min`
+ `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Medication Request identifier
+ `status`: `ACTIVE` (enum[string], required) - Medication Request status. Find available **statuses** on State Charts wiki page
    - ACTIVE
    - COMPLETED
    - REJECTED
    - EXPIRED
+ `request_number` : `0000-243P-1X53-EH38` (string) - Public medication request human readable number
+ `created_at`: `2017-08-17` (string, required) - Medication request creation date. Format *DATE '2017-09-07'*
+ `started_at`: `2017-08-17` (string, required) - Start date of a treatment period. Format *DATE '2017-09-07'*
+ `ended_at`: `2017-09-16` (string, required) - End date of a treatment period. Format *DATE '2017-10-07'*
+ `dispense_valid_from`: `2017-08-17` (string, required) - Start date of dispense period, which is determined by the external system. Format *DATE '2017-09-07'*
+ `dispense_valid_to`: `2017-09-16` (string, required) - End date of dispense period, which is determined by the external system. Greater or equal to **dispense_valid_from**. Format *DATE '2017-10-07'*
+ `legal_entity` (`Legal_Entity_Short`, required)
    + `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ `division` (`Division_Details`, required)
+ `employee` (`Employee_Minimal`, required)
+ `person` (`Person_Medication_Request`, required)
+ `medication_info` (`Innm_Dosage_for_Medication_request_Responce`, required)
+ `medical_program` (`Medical_Program_Response_min_without_settings`, required)
+ intent: plan (enum, required) - Represents the medication request purpose. Dictionary MEDICATION_REQUEST_INTENT
    - plan - The request represents an intention to ensure something occurs without providing an authorization for others to act.
    - order - The request represents a request/demand and authorization for action.
+ category: community (enum, required) - Type of medication usage. Dictionary MEDICATION_REQUEST_CATEGORY
    - community - Includes requests for medications to be administered or consumed by the patient in their home
+ based_on (array,optional, fixed-type)
    + (Reference)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `care_plan` (string)
    + (Reference)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `activity` (string)
+ `context`(Reference, required, fixed-type)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
+ `dosage_instruction` (array, required, fixed-type)
    + (Dosage_Instruction)
+ `rejected_at`: `2022-01-28` (string, optional, nullable) - Reject date - ISO 8601 date and time in UTC timezone.
+ `rejected_by`: `e8e5a969-74d8-4620-8496-f5e41f2e8312` (string, optional, nullable) - Rejected user identifier
+ `reject_reason`: `Incompatible drugs` (string, optional, nullable) - Medication request reject reason
+ `reject_reason_code`: `PATIENT_REJECT` (string, optional, nullable, nullable) - `Dictionary MEDICATION_REQUEST_REJECT_REASON`
+ is_blocked: false (boolean, required) - Whether medication request is blocked or not
+ `block_reason`: `Підозра на фрод` (string, optional) - Block or unblock reason description
+ `block_reason_code`: `BLOCK_WRONG_QTY_DRUG` (string, optional) - Block or unblock reason code `Dictionary MEDICATION_REQUEST_BLOCK_REASON`
+ include `block_legal_entity_object_not_required`
+ include `MR_MRR_additional_fields`

### `Medication_request_Public_Response_with_Medical_Program_min_block_reason_required`
+ `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Medication Request identifier
+ `status`: `ACTIVE` (enum[string], required) - Medication Request status. Find available **statuses** on State Charts wiki page
    - ACTIVE
    - COMPLETED
    - REJECTED
    - EXPIRED
+ `request_number` : `0000-243P-1X53-EH38` (string) - Public medication request human readable number
+ `created_at`: `2017-08-17` (string, required) - Medication request creation date. Format *DATE '2017-09-07'*
+ `started_at`: `2017-08-17` (string, required) - Start date of a treatment period. Format *DATE '2017-09-07'*
+ `ended_at`: `2017-09-16` (string, required) - End date of a treatment period. Format *DATE '2017-10-07'*
+ `dispense_valid_from`: `2017-08-17` (string, required) - Start date of dispense period, which is determined by the external system. Format *DATE '2017-09-07'*
+ `dispense_valid_to`: `2017-09-16` (string, required) - End date of dispense period, which is determined by the external system. Greater or equal to **dispense_valid_from**. Format *DATE '2017-10-07'*
+ `legal_entity` (`Legal_Entity_Short`, required)
    + `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ `division` (`Division_Details`, required)
+ `employee` (`Employee_Minimal`, required)
+ `person` (`Person_Medication_Request`, required)
+ `medication_info` (`Innm_Dosage_for_Medication_request_Responce`, required)
+ `medical_program` (`Medical_Program_Response_min_without_settings`, required)
+ intent: plan (enum, required) - Represents the medication request purpose. Dictionary MEDICATION_REQUEST_INTENT
    - plan - The request represents an intention to ensure something occurs without providing an authorization for others to act.
    - order - The request represents a request/demand and authorization for action.
+ category: community (enum, required) - Type of medication usage. Dictionary MEDICATION_REQUEST_CATEGORY
    - community - Includes requests for medications to be administered or consumed by the patient in their home
+ based_on (array,optional, fixed-type)
    + (Reference)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `care_plan` (string)
    + (Reference)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `activity` (string)
+ `context`(Reference, required, fixed-type)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
+ `dosage_instruction` (array, required, fixed-type)
    + (Dosage_Instruction)
+ `rejected_at`: `2022-01-28` (string, optional, nullable) - Reject date - ISO 8601 date and time in UTC timezone.
+ `rejected_by`: `e8e5a969-74d8-4620-8496-f5e41f2e8312` (string, optional, nullable) - Rejected user identifier
+ `reject_reason`: `Incompatible drugs` (string, optional, nullable) - Medication request reject reason
+ `reject_reason_code`: `PATIENT_REJECT` (string, optional, nullable, nullable) - `Dictionary MEDICATION_REQUEST_REJECT_REASON`
+ is_blocked: false (boolean, required) - Whether medication request is blocked or not
+ `block_reason`: `Підозра на фрод` (string, required) - Block or unblock reason description
+ `block_reason_code`: `BLOCK_WRONG_QTY_DRUG` (string, required) - Block or unblock reason code `Dictionary MEDICATION_REQUEST_BLOCK_REASON`
+ include `block_legal_entity_object`
+ include `MR_MRR_additional_fields`

### `Medication_request_Public_Response_with_Medical_Program_min_for_Pharmacist`
+ `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Medication Request identifier
+ `status`: `ACTIVE` (enum[string], required) - Medication Request status. Find available **statuses** on State Charts wiki page
    - ACTIVE
    - COMPLETED
    - REJECTED
    - EXPIRED
+ `request_number` : `0000-243P-1X53-EH38` (string) - Public medication request human readable number
+ `created_at`: `2017-08-17` (string, required) - Medication request creation date. Format *DATE '2017-09-07'*
+ `started_at`: `2017-08-17` (string, required) - Start date of a treatment period. Format *DATE '2017-09-07'*
+ `ended_at`: `2017-09-16` (string, required) - End date of a treatment period. Format *DATE '2017-10-07'*
+ `dispense_valid_from`: `2017-08-17` (string, required) - Start date of dispense period, which is determined by the external system. Format *DATE '2017-09-07'*
+ `dispense_valid_to`: `2017-09-16` (string, required) - End date of dispense period, which is determined by the external system. Greater or equal to **dispense_valid_from**. Format *DATE '2017-10-07'*
+ `person` (`Person_Medication_Request_for_Pharmacist`, required)
+ `medication_info` (`Innm_Dosage_for_Medication_request_Responce`, required)
+ `medical_program` (`Medical_Program_Response_min_without_settings`, required)
+ intent: plan (enum, required) - Represents the medication request purpose. Dictionary MEDICATION_REQUEST_INTENT
    - plan - The request represents an intention to ensure something occurs without providing an authorization for others to act.
    - order - The request represents a request/demand and authorization for action.
+ category: community (enum, required) - Type of medication usage. Dictionary MEDICATION_REQUEST_CATEGORY
    - community - Includes requests for medications to be administered or consumed by the patient in their home
+ based_on (array,optional, fixed-type)
    + (Reference)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `care_plan` (string)
    + (Reference)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `activity` (string)
+ `context`(Reference, required, fixed-type)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
+ `dosage_instruction` (array, required, fixed-type)
    + (Dosage_Instruction)
+ `reject_reason`: `Incompatible drugs` (string, optional, nullable) - Medication request reject reason
+ `reject_reason_code`: `PATIENT_REJECT` (string, required, nullable, nullable) - `Dictionary MEDICATION_REQUEST_REJECT_REASON`
+ is_blocked: false (boolean, required) - Whether medication request is blocked or not
+ `block_reason`: `Підозра на фрод` (string, optional) - Block or unblock reason description
+ `block_reason_code`: `BLOCK_WRONG_QTY_DRUG` (string, optional) - Block or unblock reason code `Dictionary MEDICATION_REQUEST_BLOCK_REASON`
+ include `block_legal_entity_object`
+ include `MR_MRR_additional_fields`

### `Medication_request_Public_Response_with_Medical_Program_min_for_Pharmacist_block_reason_required`
+ `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Medication Request identifier
+ `status`: `ACTIVE` (enum[string], required) - Medication Request status. Find available **statuses** on State Charts wiki page
    - ACTIVE
    - COMPLETED
    - REJECTED
    - EXPIRED
+ `request_number` : `0000-243P-1X53-EH38` (string) - Public medication request human readable number
+ `created_at`: `2017-08-17` (string, required) - Medication request creation date. Format *DATE '2017-09-07'*
+ `started_at`: `2017-08-17` (string, required) - Start date of a treatment period. Format *DATE '2017-09-07'*
+ `ended_at`: `2017-09-16` (string, required) - End date of a treatment period. Format *DATE '2017-10-07'*
+ `dispense_valid_from`: `2017-08-17` (string, required) - Start date of dispense period, which is determined by the external system. Format *DATE '2017-09-07'*
+ `dispense_valid_to`: `2017-09-16` (string, required) - End date of dispense period, which is determined by the external system. Greater or equal to **dispense_valid_from**. Format *DATE '2017-10-07'*
+ `person` (`Person_Medication_Request_for_Pharmacist`, required)
+ `medication_info` (`Innm_Dosage_for_Medication_request_Responce`, required)
+ `medical_program` (`Medical_Program_Response_min_without_settings`, required)
+ intent: plan (enum, required) - Represents the medication request purpose. Dictionary MEDICATION_REQUEST_INTENT
    - plan - The request represents an intention to ensure something occurs without providing an authorization for others to act.
    - order - The request represents a request/demand and authorization for action.
+ category: community (enum, required) - Type of medication usage. Dictionary MEDICATION_REQUEST_CATEGORY
    - community - Includes requests for medications to be administered or consumed by the patient in their home
+ based_on (array,optional, fixed-type)
    + (Reference)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `care_plan` (string)
    + (Reference)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `activity` (string)
+ `context`(Reference, required, fixed-type)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
+ `dosage_instruction` (array, required, fixed-type)
    + (Dosage_Instruction)
+ `reject_reason`: `Incompatible drugs` (string, optional, nullable) - Medication request reject reason
+ `reject_reason_code`: `PATIENT_REJECT` (string, required, nullable, nullable) - `Dictionary MEDICATION_REQUEST_REJECT_REASON`
+ is_blocked: false (boolean, required) - Whether medication request is blocked or not
+ `block_reason`: `Підозра на фрод` (string, required) - Block or unblock reason description
+ `block_reason_code`: `BLOCK_WRONG_QTY_DRUG` (string, required) - Block or unblock reason code `Dictionary MEDICATION_REQUEST_BLOCK_REASON`
+ include `MR_MRR_additional_fields`

### `Medication_request_Private_Response`
+ `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Medication Request identifier
+ `status`: `ACTIVE` (enum[string], required) - Medication Request status. Find available **statuses** on State Charts wiki page
    - ACTIVE
    - COMPLETED
    - REJECTED
    - EXPIRED
+ `request_number` : `0000-243P-1X53-EH38` (string) - Public medication request human readable number
+ `created_at`: `2017-08-17` (string, required) - Medication request creation date, which is determined by the external system. Format *DATE '2017-09-07'*
+ `started_at`: `2017-08-17` (string, required) - Start date of a treatment period, which is determined by the external system. Greater or equal to **created_at**. Format *DATE '2017-09-07'*
+ `ended_at`: `2017-09-16` (string, required) - End date of a treatment period, which is determined by the external system. Greater or equal to **started_at**. Format *DATE '2017-10-07'*
+ `dispense_valid_from`: `2017-08-17` (string, required) - Start date of dispense period, which is determined by the external system. Format *DATE '2017-09-07'*
+ `dispense_valid_to`: `2017-09-16` (string, required) - End date of dispense period, which is determined by the external system. Greater or equal to **dispense_valid_from**. Format *DATE '2017-10-07'*
+ `legal_entity` (`Legal_Entity_Short`, required)
    + `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ `division` (`Division_Details`, required)
+ `employee` (`Employee_Minimal`, required)
+ `person` (`Person_Medication_Request_Private`, required)
+ `medication_info` (`Innm_Dosage_for_Medication_request_Responce`, required)
+ `medical_program` (`Medical_Program_Response_without_settings`, required)
+ intent: plan (enum, required) - Represents the medication request purpose. Dictionary MEDICATION_REQUEST_INTENT
    - plan - The request represents an intention to ensure something occurs without providing an authorization for others to act.
    - order - The request represents a request/demand and authorization for action.
+ category: community (enum, required) - Type of medication usage. Dictionary MEDICATION_REQUEST_CATEGORY
    - community - Includes requests for medications to be administered or consumed by the patient in their home
+ based_on (array,optional, fixed-type)
    + (Reference)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `care_plan` (string)
    + (Reference)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `activity` (string)
+ `context`(Reference, required, fixed-type)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
+ `dosage_instruction` (array, required, fixed-type)
    + (Dosage_Instruction)
+ `rejected_at`: `2022-01-28` (string, optional, nullable) - Reject date - ISO 8601 date and time in UTC timezone.
+ `rejected_by`: `e8e5a969-74d8-4620-8496-f5e41f2e8312` (string, optional, nullable) - Rejected user identifier
+ `reject_reason`: `Incompatible drugs` (string, optional, nullable) - Medication request reject reason
+ `reject_reason_code`: `PATIENT_REJECT` (string, optional, nullable, nullable) - `Dictionary MEDICATION_REQUEST_REJECT_REASON`
+ is_blocked: false (boolean, required) - Whether medication request is blocked or not
+ `block_reason`: `Підозра на фрод` (string, optional) - Block or unblock reason description
+ `block_reason_code`: `BLOCK_WRONG_QTY_DRUG` (string, optional) - Block or unblock reason code `Dictionary MEDICATION_REQUEST_BLOCK_REASON`
+ include `block_legal_entity_object`
+ include `MR_MRR_additional_fields`

### `Medication_request_Private_Response_with_Medical_Program_min`
+ `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Medication Request identifier
+ `status`: `ACTIVE` (enum[string], required) - Medication Request status. Find available **statuses** on State Charts wiki page
    - ACTIVE
    - COMPLETED
    - REJECTED
    - EXPIRED
+ `request_number` : `0000-243P-1X53-EH38` (string) - Public medication request human readable number
+ `created_at`: `2017-08-17` (string, required) - Medication request creation date, which is determined by the external system. Format *DATE '2017-09-07'*
+ `started_at`: `2017-08-17` (string, required) - Start date of a treatment period, which is determined by the external system. Greater or equal to **created_at**. Format *DATE '2017-09-07'*
+ `ended_at`: `2017-09-16` (string, required) - End date of a treatment period, which is determined by the external system. Greater or equal to **started_at**. Format *DATE '2017-10-07'*
+ `dispense_valid_from`: `2017-08-17` (string, required) - Start date of dispense period, which is determined by the external system. Format *DATE '2017-09-07'*
+ `dispense_valid_to`: `2017-09-16` (string, required) - End date of dispense period, which is determined by the external system. Greater or equal to **dispense_valid_from**. Format *DATE '2017-10-07'*
+ `legal_entity` (`Legal_Entity_Short`, required)
    + `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ `division` (`Division_Details`, required)
+ `employee` (`Employee_Minimal`, required)
+ `person` (`Person_Medication_Request_Private`, required)
+ `medication_info` (`Innm_Dosage_for_Medication_request_Responce`, required)
+ `medical_program` (`Medical_Program_Response_min`, required)
+ intent: plan (enum, required) - Represents the medication request purpose. Dictionary MEDICATION_REQUEST_INTENT
    - plan - The request represents an intention to ensure something occurs without providing an authorization for others to act.
    - order - The request represents a request/demand and authorization for action.
+ category: community (enum, required) - Type of medication usage. Dictionary MEDICATION_REQUEST_CATEGORY
    - community - Includes requests for medications to be administered or consumed by the patient in their home
+ based_on (array,optional, fixed-type)
    + (Reference)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `care_plan` (string)
    + (Reference)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `activity` (string)
+ `context`(Reference, required, fixed-type)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
+ `dosage_instruction` (array, required, fixed-type)
    + (Dosage_Instruction)
+ `rejected_at`: `2022-01-28` (string, optional, nullable) - Reject date - ISO 8601 date and time in UTC timezone.
+ `rejected_by`: `e8e5a969-74d8-4620-8496-f5e41f2e8312` (string, optional, nullable) - Rejected user identifier
+ `reject_reason`: `Incompatible drugs` (string, optional, nullable) - Medication request reject reason
+ `reject_reason_code`: `PATIENT_REJECT` (string, required, nullable, nullable) - `Dictionary MEDICATION_REQUEST_REJECT_REASON`
+ is_blocked: false (boolean, required) - Whether medication request is blocked or not
+ `block_reason`: `Підозра на фрод` (string, required) - Block or unblock reason description
+ `block_reason_code`: `BLOCK_WRONG_QTY_DRUG` (string, required) - Block or unblock reason code `Dictionary MEDICATION_REQUEST_BLOCK_REASON`
+ include `block_legal_entity_object`
+ include `MR_MRR_additional_fields`

### `Medication_request_Reject_Public_Response`
+ `rejected_at`: `2017-04-20T19:14:13Z` (string, required) - Reject date - ISO 8601 date and time in UTC timezone.
+ `rejected_by`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required) - Rejected user identifier

### `Medication_request_Reject`
+ category: community (enum, required) - Type of medication usage. Dictionary MEDICATION_REQUEST_CATEGORY
    - community - Includes requests for medications to be administered or consumed by the patient in their home
+ `created_at`: `2018-11-13` (string, required) - Medication request creation date, which is determined by the external system. Format *DATE '2017-09-07'*
+ `dispense_valid_from`: `2018-11-13` (string, required) - Start date of dispense period, which is determined by the external system. Format *DATE '2017-09-07'*
+ `dispense_valid_to`: `2018-12-13` (string, required) - End date of dispense period, which is determined by the external system. Greater or equal to **dispense_valid_from**. Format *DATE '2017-10-07'*
+ `division` (`Division`, required)
    + `id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
    + `legal_entity_id`: `c8aadb87-ecb9-41ca-9ad4-ffdfe1dd89c9` (string, required)
+ `dosage_instruction` (array, required, fixed-type)
    + (Dosage_Instruction)
+ `employee` (`Employee_Minimal`, required)
+ `ended_at`: `2018-12-13` (string, required) - End date of a treatment period, which is determined by the external system. Greater or equal to **started_at**. Format *DATE '2017-10-07'*
+ `id`: `eeebb86d-5cba-43c9-885b-6482ecaf826b` (string, required) - Medication Request request identifier
+ intent: plan (enum, required) - Represents the medication request purpose. Dictionary MEDICATION_REQUEST_INTENT
    - plan - The request represents an intention to ensure something occurs without providing an authorization for others to act. "medical_program" is absent
    - order - The request represents a request/demand and authorization for action. "medical_program" is required
+ is_blocked: false (boolean, optional) - Whether medication request is blocked or not
+ `legal_entity` (`Legal_Entity_Short`, required)
    + `id`: `c8aadb87-ecb9-41ca-9ad4-ffdfe1dd89c9` (string, required)
    + licenses (array[`MSP_License`], required)
    + accreditation (MSP_Accreditation, optional)
+ `medication_info` (`Innm_Dosage_for_Medication_request_Responce`, required)
+ `person` (`Person_Medication_Request`, required)
+ `request_number` : `0000-K8K5-5MTE-352H` (string, required) - Public medication request human readable number
+ `started_at`: `2018-11-13` (string, required) - Start date of a treatment period, which is determined by the external system. Greater or equal to **created_at**. Format *DATE '2017-09-07'*
+ `status`: `ACTIVE` (string, required) - Medication Request status. Find available **statuses** on State Charts wiki page
+ `medical_program` (`Medical_Program_Response_without_settings`, required)
+ `reject_reason_code`: WRONG_SIGNATURE (enum, required) - `Dictionary MEDICATION_REQUEST_REJECT_REASON`
    - NO_REQUEST_NEEDED
    - NO_SMS
    - PATIENT_REJECT
    - WRONG_DOSAGE
    - WRONG_PERIOD
    - WRONG_QTY
    - WRONG_SIGNATURE
+ `reject_reason`: `Помилка призначення. Несумісні препарати.` (string, optional) - Medication request reject reason
+ `block_reason`: `Підозра на фрод` (string, optional) - Block or unblock reason description
+ `block_reason_code`: `BLOCK_WRONG_QTY_DRUG` (string, optional) - Block or unblock reason code `Dictionary MEDICATION_REQUEST_BLOCK_REASON`
+ include `MR_MRR_additional_fields`

### `Medication_request_Reject_Response`
+ category: community (enum, required) - Type of medication usage. Dictionary MEDICATION_REQUEST_CATEGORY
    - community - Includes requests for medications to be administered or consumed by the patient in their home
+ `created_at`: `2017-08-17` (string, required) - Medication request creation date, which is determined by the external system. Format *DATE '2017-09-07'*
+ `dispense_valid_from`: `2017-08-17` (string, required) - Start date of dispense period, which is determined by the external system. Format *DATE '2017-09-07'*
+ `dispense_valid_to`: `2017-09-16` (string, required) - End date of dispense period, which is determined by the external system. Greater or equal to **dispense_valid_from**. Format *DATE '2017-10-07'*
+ `division` (`Division`, required)
    + `id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ `dosage_instruction` (array, required, fixed-type)
    + (Dosage_Instruction)
+ `employee` (`Employee_Minimal`, required)
+ `ended_at`: `2017-09-16` (string, required) - End date of a treatment period, which is determined by the external system. Greater or equal to **started_at**. Format *DATE '2017-10-07'*
+ `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Medication Request identifier
+ intent: plan (enum, required) - Represents the medication request purpose. Dictionary MEDICATION_REQUEST_INTENT
    - plan - The request represents an intention to ensure something occurs without providing an authorization for others to act. "medical_program" is absent
    - order - The request represents a request/demand and authorization for action. "medical_program" is required
+ is_blocked: false (boolean, required) - Whether medication request is blocked or not
+ `legal_entity` (`Legal_Entity_Short`, required)
    + `id`: `c8aadb87-ecb9-41ca-9ad4-ffdfe1dd89c9` (string, required)
    + licenses (array[`MSP_License`], required)
    + accreditation (MSP_Accreditation, optional)
+ `medication_info` (`Innm_Dosage_for_Medication_request_Responce`, required)
+ `person` (`Person_Medication_Request`, required)
+ `reject_reason_code`: WRONG_SIGNATURE (enum, required) - `Dictionary MEDICATION_REQUEST_REJECT_REASON`
    - NO_REQUEST_NEEDED
    - NO_SMS
    - PATIENT_REJECT
    - WRONG_DOSAGE
    - WRONG_PERIOD
    - WRONG_QTY
    - WRONG_SIGNATURE
+ `rejected_at`: `2022-01-28` (string, optional, nullable) - Reject date - ISO 8601 date and time in UTC timezone.
+ `rejected_by`: `e8e5a969-74d8-4620-8496-f5e41f2e8312` (string, optional, nullable) - Rejected user identifier
+ `request_number` : `0000-243P-1X53-EH38` (string) - Public medication request human readable number
+ `started_at`: `2017-08-17` (string, required) - Start date of a treatment period, which is determined by the external system. Greater or equal to **created_at**. Format *DATE '2017-09-07'*
+ `status`: `REJECTED` (enum[string], required) - Medication Request status. Find available **statuses** on State Charts wiki page
+ `medical_program` (`Medical_Program_Response_without_settings`, required)
+ `reject_reason`: `Incompatible drugs` (string, optional, nullable) - Medication request reject reason
+ `block_reason`: `Підозра на фрод` (string, optional) - Block or unblock reason description
+ `block_reason_code`: `BLOCK_WRONG_QTY_DRUG` (string, optional) - Block or unblock reason code `Dictionary MEDICATION_REQUEST_BLOCK_REASON`
+ `block_legal_entity` (object, optional)
    + `id`: `UUID` (string, required, nullable)
    + `type`: `NHS` (string, required, nullable)
+ include `MR_MRR_additional_fields`

### `Medication_request_Public_Response_without_block_data`
+ `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Medication Request identifier
+ `status`: `ACTIVE` (enum[string], required) - Medication Request status. Find available **statuses** on State Charts wiki page
    - ACTIVE
    - COMPLETED
    - REJECTED
    - EXPIRED
+ `request_number` : `0000-243P-1X53-EH38` (string) - Public medication request human readable number
+ `created_at`: `2017-08-17` (string, required) - Medication request creation date, which is determined by the external system. Format *DATE '2017-09-07'*
+ `started_at`: `2017-08-17` (string, required) - Start date of a treatment period, which is determined by the external system. Greater or equal to **created_at**. Format *DATE '2017-09-07'*
+ `ended_at`: `2017-09-16` (string, required) - End date of a treatment period, which is determined by the external system. Greater or equal to **started_at**. Format *DATE '2017-10-07'*
+ `dispense_valid_from`: `2017-08-17` (string, required) - Start date of dispense period, which is determined by the external system. Format *DATE '2017-09-07'*
+ `dispense_valid_to`: `2017-09-16` (string, required) - End date of dispense period, which is determined by the external system. Greater or equal to **dispense_valid_from**. Format *DATE '2017-10-07'*
+ `legal_entity` (`Legal_Entity_Short`, required)
    + `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ `division` (`Division_Details`, required)
+ `employee` (`Employee_Minimal`, required)
+ `person` (`Person_Medication_Request`, required)
+ `medication_info` (`Innm_Dosage_for_Medication_request_Responce`, required)
+ `medical_program` (`Medical_Program_Response_without_settings`, required)
+ intent: plan (enum, required) - Represents the medication request purpose. Dictionary MEDICATION_REQUEST_INTENT
    - plan - The request represents an intention to ensure something occurs without providing an authorization for others to act.
    - order - The request represents a request/demand and authorization for action.
+ category: community (enum, required) - Type of medication usage. Dictionary MEDICATION_REQUEST_CATEGORY
    - community - Includes requests for medications to be administered or consumed by the patient in their home
+ based_on (array,optional, fixed-type)
    + (Reference)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `care_plan` (string)
    + (Reference)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `activity` (string)
+ `context`(Reference, required, fixed-type)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
+ `dosage_instruction` (array, required, fixed-type)
    + (Dosage_Instruction)
+ `rejected_at`: `2022-01-28` (string, optional, nullable) - Reject date - ISO 8601 date and time in UTC timezone.
+ `rejected_by`: `e8e5a969-74d8-4620-8496-f5e41f2e8312` (string, optional, nullable) - Rejected user identifier
+ `reject_reason`: `Incompatible drugs` (string, optional, nullable) - Medication request reject reason
+ `reject_reason_code`: `PATIENT_REJECT` (string, required, nullable, nullable) - `Dictionary MEDICATION_REQUEST_REJECT_REASON`
+ include `MR_MRR_additional_fields`

## `Medication Dispense`
### `Medication_Dispense_Request`
+ `medication_request_id`: `f08ba3a3-157a-4adc-b65d-737f24f3a1f4` (string, required) - Key for the Medication request
+ `dispensed_at`: `2017-08-17` (string, required) - date of dispense
+ dispensed_by: `Іванов Іван Іванович` (string, optional) - in case pharmacist uses owner's token this field should be filled with pharmacist's name
+ `division_id`: `2fc70f30-08dc-493c-8d08-925905d7b1e8` (string, required) - Active legal entity (Pharmacy) division which provides dispense Identifier
+ `medical_program_id`: `6ee844fd-9f4d-4457-9eda-22aa506be4c4` (string, required) - Active medical program within which medications are going to be provided
+ `dispense_details` (array, fixed, required)
    + (object)
        + include `Medication_Dispense_Detail_Request`
+ `payment_id`: 1239804 (string, optional) - receipt number for the paid medications. Should not be submitted if medical program requires digital sign, and it's optional if not requires 
+ `payment_amount`: 50 (number, optional) - receipt amount which was paid by patient (UAH). Should not be submitted if medical program requires digital sign, and should be if not requires and medical program has funding source NHS

### `Medication_Dispense_Response`
+ `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Medication Dispense Response Identifier
+ `medication_request` (object, required) - Medication request
    + include `Medication_request_Public_Response`
+ `dispensed_at`: `2017-08-17` (string, required) - date of dispense
+ dispensed_by: `Іванов Іван Іванович` (string, optional) - in case pharmacist uses owner's token this field should be filled with pharmacist's name
+ `party` (object)
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
    + include `Party_Short`
+ `legal_entity` (`Legal_Entity_Short`, required) - Active legal entity (Pharmacy) the division belongs to Identifier
+ `division` (`Division_Short`, required) - Active legal entity (Pharmacy) division which provides dispense Identifier
+ `medical_program` (`Medical_Program_Response_without_settings`, required) - Active medical program within which medications are going to be provided
+ `details` (array[`Medication_Dispense_Detail_Response`], fixed, required)
+ `payment_id`: 1239804 (string, optional) - receipt number for the paid medications
+ `payment_amount`: 50 (number, optional) - receipt amount which was paid by patient (UAH)
+ `status`: NEW (string, required) - Medication Dispense status (NEW, PROCESSED, REJECTED, EXPIRED)
+ `inserted_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `inserted_by`: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, required)
+ `updated_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `updated_by`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required)

### `Medication_Dispense_Response_for_Pharmacist`
+ `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Medication Dispense Response Identifier
+ `medication_request` (object, required) - Medication request
    + include `Medication_request_Public_Response_for_Pharmacist`
+ `dispensed_at`: `2017-08-17` (string, required) - date of dispense
+ dispensed_by: `Іванов Іван Іванович` (string, optional) - in case pharmacist uses owner's token this field should be filled with pharmacist's name
+ `party` (object)
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
    + include `Party_Short`
+ `legal_entity` (`Legal_Entity_Short`, required) - Active legal entity (Pharmacy) the division belongs to Identifier
+ `division` (`Division_Short`, required) - Active legal entity (Pharmacy) division which provides dispense Identifier
+ `medical_program` (`Medical_Program_Response_without_settings`, required) - Active medical program within which medications are going to be provided
+ `details` (array[`Medication_Dispense_Detail_Response`], fixed, required)
+ `payment_id`: 1239804 (string, optional) - receipt number for the paid medications
+ `payment_amount`: 50 (number, optional) - receipt amount which was paid by patient (UAH)
+ `status`: NEW (string, required) - Medication Dispense status (NEW, PROCESSED, REJECTED, EXPIRED)
+ `inserted_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `inserted_by`: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, required)
+ `updated_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `updated_by`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required)

### `Medication_Dispense_Details_Response_for_MSP`
+ `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Medication Dispense Response Identifier
+ `medication_request` (object, required) - Medication request
    + include `Medication_request_Public_Response`
+ `dispensed_at`: `2017-08-17` (string, required) - date of dispense
+ `medical_program` (`Medical_Program_Response_without_settings`, required) - Active medical program within which medications are going to be provided
+ `status`: NEW (string, required) - Medication Dispense status (NEW, PROCESSED, REJECTED, EXPIRED)
+ `inserted_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `updated_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.

### `Medication_Dispense_Response_Private`
+ `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Medication Dispense Response Identifier
+ `medication_request` (`Medication_request_Private_Response`, required) - Medication request
+ `dispensed_at`: `2017-08-17` (string, required) - date of dispense
+ dispensed_by: `Іванов Іван Іванович` (string, optional) - in case pharmacist uses owner's token this field should be filled with pharmacist's name
+ `party` (object)
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
    + include `Party_Short`
+ `legal_entity` (`Legal_Entity_Short`, required) - Active legal entity (Pharmacy) the division belongs to Identifier
+ `division` (`Division_Short`, required) - Active legal entity (Pharmacy) division which provides dispense Identifier
+ `medical_program` (`Medical_Program_Response_without_settings`, required) - Active medical program within which medications are going to be provided
+ `details` (array[`Medication_Dispense_Detail_Response`], fixed, required)
+ `payment_id`: 1239804 (string, optional) - receipt number for the paid medications
+ `payment_amount`: 50 (number, optional) - receipt amount which was paid by patient (UAH)
+ `status`: NEW (string, required) - Medication Dispense status (NEW, PROCESSED, REJECTED, EXPIRED)
+ `inserted_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `inserted_by`: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, required)
+ `updated_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `updated_by`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required)

### `Medication_Dispense_Response_without_2d_codes`
+ `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Medication Dispense Response Identifier
+ `medication_request` (object, required) - Medication request
    + include `Medication_request_Public_Response`
+ `dispensed_at`: `2017-08-17` (string, required) - date of dispense
+ dispensed_by: `Іванов Іван Іванович` (string, optional) - in case pharmacist uses owner's token this field should be filled with pharmacist's name
+ `party` (object)
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
    + include `Party_Short`
+ `legal_entity` (`Legal_Entity_Short`, required) - Active legal entity (Pharmacy) the division belongs to Identifier
+ `division` (`Division_Short`, required) - Active legal entity (Pharmacy) division which provides dispense Identifier
+ `medical_program` (`Medical_Program_Response_without_settings`, required) - Active medical program within which medications are going to be provided
+ `details` (array[`Medication_Dispense_Detail_Response_without_2d_codes`], fixed, required)
+ `payment_id`: 1239804 (string, optional) - receipt number for the paid medications
+ `payment_amount`: 50 (number, optional) - receipt amount which was paid by patient (UAH)
+ `status`: NEW (string, required) - Medication Dispense status (NEW, PROCESSED, REJECTED, EXPIRED)
+ `inserted_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `inserted_by`: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, required)
+ `updated_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `updated_by`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required)

### `Medication_Dispense_Detail_Request`
+ `program_medication_id`: `64c06ebc-0266-4645-85f0-7a6900d7dfbe` (string, optional) - Program participant id
+ `medication_id`: `787b6ef1-1d3a-4129-849c-87716c9a2130` (string, required) - Identifier of brand medications
+ `medication_qty`: 10.34 (number, required) - qnty of medication_unit (count/ml/g/mg) which provides to the patient
+ `sell_price`: 18.65 (number, optional) - pharmacy's price for one nondivisible medication_unit (pill/ampoule/container/bottle/vial/aerosol). Must be submitted if medical program has funding source NHS
+ `sell_amount`: 186.5 (number, optional) - total pharmacy's price for the requested medication quantity. Must be submitted if medical program has funding source NHS
+ `discount_amount`: 150 (number, optional) - pharmacy's expected price of dicsount for the requested medication quantity. Must be submitted if medical program has funding source NHS
+ `medication_2d_codes` (array[`Medication_2d_code`], optional) - array of medication 2d codes

### `Medication_Dispense_Detail_Response`
+ `medication` (`Medication_Short`, required) - Identifier of brand medications
+ `program_medication_id`: `64c06ebc-0266-4645-85f0-7a6900d7dfbe` (string, optional) - Program participant id
+ `medication_qty`: '10.34' (number, required) - qnty of medication_unit (count/ml/g/mg) which provides to the patient
+ `sell_price`: 18.65 (number, optional) - pharmacy's price for one nondivisible medication_unit (pill/ampoule/container/bottle/vial/aerosol)
+ `sell_amount`: 186.5 (number, optional) - total pharmacy's price for the requested medication quantity
+ `discount_amount`: 150 (number, optional) - pharmacy's expected price of dicsount for the requested medication quantity
+ `reimbursement_amount`: 450 (number, required) - Amount to reimburse for medication package by medical_program
+ `medication_2d_codes` (array[`Medication_2d_code`], optional) - array of medication 2d codes

### `Medication_Dispense_Detail_Response_without_2d_codes`
+ `medication` (`Medication_Short`, required) - Identifier of brand medications
+ `program_medication_id`: `64c06ebc-0266-4645-85f0-7a6900d7dfbe` (string, optional) - Program participant id
+ `medication_qty`: 10.34 (number, required) - qnty of medication_unit (count/ml/g/mg) which provides to the patient
+ `sell_price`: 18.65 (number, optional) - pharmacy's price for one nondivisible medication_unit (pill/ampoule/container/bottle/vial/aerosol)
+ `sell_amount`: 186.5 (number, optional) - total pharmacy's price for the requested medication quantity
+ `discount_amount`: 150 (number, optional) - pharmacy's expected price of dicsount for the requested medication quantity
+ `reimbursement_amount`: 450 (number, required) - Amount to reimburse for medication package by medical_program

### `Medication_Dispense_Process_Request`
+ `details` (array[`Medication_Dispense_Detail_Response`], fixed, required)
+ `dispensed_at`: `2017-08-17` (string, required) - date of dispense
+ dispensed_by: `Іванов Іван Іванович` (string, optional) - in case pharmacist uses owner's token this field should be filled with pharmacist's name
+ `division` (`Division_Declaration`, required) - Active legal entity (Pharmacy) division which provides dispense Identifier
    + working_hours (`workinghours`) - optional field, business hours by each day weekly, doesn't make any influence on business process and will be shown on portal and map.
    + location (Location, optional) - optional field. geographical location, if it's empty, division won't be shown on a map.
    + status: ACTIVE (enum, required)
        - ACTIVE
        - INACTIVE
    + mountain_group: false (boolean, optional)
+ `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Medication Dispense Response Identifier
+ `inserted_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `inserted_by`: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, required)
+ `legal_entity` (`Legal_Entity_Short`, required) - Active legal entity (Pharmacy) the division belongs to Identifier
+ `medical_program` (`Medical_Program_Response_without_settings`, required) - Active medical program within which medications are going to be provided
+ `medication_request` (object, required) - Medication request
    + include `Medication_request_Public_Response`
+ `party` (object)
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
    + include `Party_Short`
    + birth_date: `1991-08-19T00:00:00.000Z` (string, required)
    + `no_tax_id`: false (boolean, optional)
    + phones (array[`Phone`], optional)
+ `payment_amount`: 50 (number, required) - receipt amount which was paid by patient (UAH)
+ `payment_id`: 1239804 (string, optional) - receipt number for the paid medications
+ `status`: NEW (string, required) - Medication Dispense status (NEW, PROCESSED, REJECTED, EXPIRED)
+ `updated_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `updated_by`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required)

### `Medication_Dispense_Process_Request_for_Pharmacist`
+ `details` (array[`Medication_Dispense_Detail_Response`], fixed, required)
+ `dispensed_at`: `2017-08-17` (string, required) - date of dispense
+ dispensed_by: `Іванов Іван Іванович` (string, optional) - in case pharmacist uses owner's token this field should be filled with pharmacist's name
+ `division` (`Division_Declaration`, required) - Active legal entity (Pharmacy) division which provides dispense Identifier
    + working_hours (`workinghours`) - optional field, business hours by each day weekly, doesn't make any influence on business process and will be shown on portal and map.
    + location (Location, optional) - optional field. geographical location, if it's empty, division won't be shown on a map.
    + status: ACTIVE (enum, required)
        - ACTIVE
        - INACTIVE
    + mountain_group: false (boolean, optional)
+ `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Medication Dispense Response Identifier
+ `inserted_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `inserted_by`: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, required)
+ `legal_entity` (`Legal_Entity_Short`, required) - Active legal entity (Pharmacy) the division belongs to Identifier
+ `medical_program` (`Medical_Program_Response_without_settings`, required) - Active medical program within which medications are going to be provided
+ `medication_request` (`Medication_request_Public_Response_for_Pharmacist`, required) - Medication request
+ `party` (object)
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
    + include `Party_Short`
    + birth_date: `1991-08-19T00:00:00.000Z` (string, required)
    + `no_tax_id`: false (boolean, optional)
    + phones (array[`Phone`], optional)
+ `payment_amount`: 50 (number, required) - receipt amount which was paid by patient (UAH)
+ `payment_id`: 1239804 (string, optional) - receipt number for the paid medications
+ `status`: NEW (string, required) - Medication Dispense status (NEW, PROCESSED, REJECTED, EXPIRED)
+ `updated_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `updated_by`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required)

###`Medication_2d_code`
+ `medication_2d_code`: `0104820005161713171812001022431115 211XV82HPV` (string, required) - decoded 2d code


## `Reimbursement_Report`
### `Reimbursement_Report_Response`
+ `medication_request` (object, required)
    + `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Medication Request identifier
    + `created_at`: `2017-08-17` (string, required) - Medication request creation date, which is determined by the external system. Format *DATE '2017-09-07'*
    + `started_at`: `2017-08-17` (string, required) - Start date of a treatment period, which is determined by the external system. Greater or equal to **created_at**. Format *DATE '2017-09-07'*
    + `ended_at`: `2017-09-16` (string, required) - End date of a treatment period, which is determined by the external system. Greater or equal to **started_at**. Format *DATE '2017-10-07'*
    + `dispense_valid_from`: `2017-08-17` (string, required) - Start date of dispense period, which is determined by the external system. Format *DATE '2017-09-07'*
    + `dispense_valid_to`: `2017-09-16` (string, required) - End date of dispense period, which is determined by the external system. Greater or equal to **dispense_valid_from**. Format *DATE '2017-10-07'*
    + `status`: `NEW` (string, required) - Medication Dispense status (NEW, PROCESSED, REJECTED, EXPIRED)
    +  include (`Medication_request_Reject_Public_Response`, optional)
    + `person_id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Person identifier
    + `legal_entity` (object, required)
        + `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Legal entity identifier
        + `name`: `Клініка Ноунейм` (string, required)
        + `edrpou`: `5432345432` (string, required)
    + `division` (object, required)
        + `id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
        + `name`: `Бориспільське відділення Клініки Ноунейм` (string, required)
        + `mountain_group`: `false` (boolean, optional)
        + `address` (`Address`, required)
    + `employee` (object, required)
        + `id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - Employee identifier with `type=DOCTOR` who issued Medication Request.
        + `party_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - Employee Party id
        + `last_name`: `Іванов` (string, required)
        + `first_name`: `Петро` (string, required)
        + `second_name`: `Миколайович` (string, optional)
        + `position`: `P6` (string, required) - `Dictionary POSITION`
        + `employee_type`: `DOCTOR` (string) - `Dictionary: EMPLOYEE_TYPE`
    + `medical_program` (`Medical_Program_Response_Report`, optional)
    + `medication` (`Medication_Short`, required) - Identifier of brand medications
    + `medication_qty`: 10.34 (number, required) - qnty of medication_unit (count/ml/g/mg) which provides to the patient
+ `medication_dispense`(object, optional)
    + `id`: `f08ba3a3-157a-4adc-b65d-737f24f3a1f4` (string, optional) - Medication dispense Identifier
    + `dispensed_at`: `2017-08-17` (string, optional) - date of dispense
    + `dispensed_by`: `Аннова Анна Анновна` (string, required) - in case pharmacist uses owner's token this field should be filled with pharmacist's name
    + `status`: NEW (string, optional) - Medication Dispense status (NEW, PROCESSED, REJECTED, EXPIRED)
    + `medications` (array, fixed, optional)
        + (object)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Identifier of brand medications
            + `code_atc` (array, required)
               + `М01АЕ01` ([string])
               + `C01BD01` ([string])
            + include `Medication_Short`
            + `package_qty`: 30 (number, required) - qnty medications in the package
            + `details` (object, required)
                + `medication_qty`: 10.34 (number, required) - qnty of medication_unit (count/ml/g/mg) which provides to the patient
                + `sell_price`: 18.65 (number, required) - pharmacy's price for one nondivisible medication_unit (pill/ampoule/container/bottle/vial/aerosol)
                + `sell_amount`: 186.5 (number, required) - total pharmacy's price for the requested medication quantity
                + `discount_amount`: 150 (number, required) - pharmacy's expected price of dicsount for the requested medication quantity
                + `reimbursement_amount`: 450 (number, required) - Amount to reimburse for medication package by medical_program
    + `legal_entity` (object, optional)
        + `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Legal entity identifier
        + `name`: `Аптека 42` (string, required) - Legal entity name
        + `edrpou`: `5432345431` (string, required) - Legal entity edrpou
    + `division` (object, optional)
        + `id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
        + `name`: `Бориспільське відділення Аптеки 42` (string, required)
        + `mountain_group`: `false` (boolean, optional)
        + `address` (`Address`, required)
    + `party` (object, optional)
        + `id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - Employee Party id
        + `last_name`: `Іванов` (string, required)
        + `first_name`: `Петро` (string, required)
        + `second_name`: `Миколайович` (string, optional)

## Uploading and processing registers

### `file`

### `Medication_Registers_response`
+ `job` (object, optional)
    + `id`: `11ecabef-5b67-4838-8f4c-72155e05dd12` (string, required)
    + `name`: `Name of operation with the registry`  (string, required)
    + `type`: `type_of_operation`  (string, required)
    + `strategy`: `SEQUENTIALLY`  (string, required)
    + `status`: `PENDING`  (string, required)
            - FAILED
            - PROCESSED
            - PENDING
    + `meta` (object, required)
        + `register_type`: `REGISTER_TYPE` (string, required)
        + `reason_description`: `appropriate text` (string, required)
    + `ended_at`: `2022-08-21T15:37:40.625778Z` (string, required) - ISO 8601 date and time in UTC timezone.
    + `inserted_at`: `2022-08-21T15:35:38.625778Z` (string, required) - ISO 8601 date and time in UTC timezone.
    + `updated_at`: `2022-08-21T15:37:40.625778Z` (string, required) - ISO 8601 date and time in UTC timezone.

### `Registers_response`
+ `id`: `09106b70-18b0-4726-b0ed-6bda1369fd52` (string, required)
+ `file_name`: `November 2018 Kyiv region` (string, required)
+ `status`: processing (enum, required)
        - new
        - processing
        - processed
+ `entity_type`: patient (enum, required)
        - patient
        - employee
+ `type`: `death_registration` (string, required)
+ `reason_description`: `Реєстр смертності за 01-31.01.2018` (string, optional)
+ `qty`(object, required)
  + `not_found`: 10 (number, required)- not matched records
  + `processing`: 1 (number, required) - entries are still in the procces of matching
  + `errors`: 2 (number, required) - entires which had errors and couln't be processed
  + `total`: 100 (number, required) - total entries in the file
+ `inserted_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `inserted_by`: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, required)
+ `updated_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `updated_by`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required)

### `Registers_list_response`
+ `id`: `09106b70-18b0-4726-b0ed-6bda1369fd52` (string, required)
+ `file_name`: `November 2018 Kyiv region` (string, required)
+ `status`: processing (enum, required)
        - new
        - processing
        - processed
+ `reason_description`: `Реєстр смертності за 01-31.01.2018` (string, optional)
+ `type`: `death_registration` (string, required)
+ `qty`(object, required)
  + `not_found`: 10 (number, required)- not matched records
  + `processing`: 1 (number, required) - entries are still in the procces of matching
  + `errors`: 2 (number, required) - entires which had errors and couln't be processed
  + `total`: 100 (number, required) - total entries in the file
+ `inserted_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `inserted_by`: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, required)
+ `updated_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `updated_by`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required)
+ `errors`: `Row has length 4 - expected length 5 on line 5, Row has length 1 - expected length 5 on line 7` (array, optional)


### `Register_entries_list_response`
+ `id`: `09106b70-18b0-4726-b0ed-6bda1369fd52` (string, required) - record id
+ `register_id`: `09106b70-18b0-4726-b0ed-6bda1369fd52` (string, required) - file id
+ `file_name`: `November 2018 Kyiv region` (string, required)
+ `type`: `death_registration` (string, required)
+ `status`: processing (enum, required)
        - processing
        - matched
        - not_found
+ `id_type`: `3028106992` (string, required)
+ `id_number`: `123456789` (string, required)
+ `inserted_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `inserted_by`: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, required)
+ `updated_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `updated_by`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required)

## Roles
### Role (object)
+ name: `Doctor` (string, required) - role title
+ scope: `notebooks:read notebooks:create patients:read` (string, required) - List of scopes, space-separated.

### `Role_Response` (Role)
+ id: `role-1380df72-275a-11e7-93ae-92361f002671` (string) - Internal role ID, a UUID string.


## Clients
### `Client_Deprecated` (object)
+ id: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, required) - Unique client id
+ name: `Аптека 199` (string, required) - Client name
+ secret: `ZlFOaHBTR0d3Q0hQcDEraHVYdXBVZz09` (string, required)
+ redirect_uri: `https://example2.com` (string, required)
+ settings (object)
+ priv_settings (object)

### `Client` (object)
+ id: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, required) - Unique client id
+ name: `eHealth portal` (string, required) - Client name.
+ settings (object) - Client settings.
+ user_id: `user-1380df72-275a-11e7-93ae-92361f002671` (string, required) - Owner-user internal ID, a UUID string.
+ `client_type_id`: `261d52f9-b355-4029-863d-8fc52e9d0b81` - Client Type identifier
+ is_blocked: `false` (string, required) - whether the client is marked as fraud
+ `block_reason`: `MSP has fakes doctors` (string, optional) - the reason to block
+ inserted_at: `2017-04-20T19:14:13Z` (string, required) - date and time, when the entity was created
+ updated_at: `2017-04-20T19:14:13Z` (string, required) - date and time, when the entity was updated

## Connections
### `Connection`
+ id: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, required) - Unique connection id
+ client_id: `c4a6d45f-2cf2-4e6d-909a-5962604ad63b` (string, required) - Unique connection id
+ consumer_id: `25c03af6-69bd-439e-b0dd-f1669b3dbbfd` (string, required) - Unique connection id
+ redirect_uri: `https://example2.com` (string, required)

## Events
### `Get_events`
+ id: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, required) - Event identifier
+ event_type: `StatusChangeEvent` (string, required) - the name of event
+ entity_type: `MedicationDispense` (string, required) - the name of entity that was changed
+ entity_id: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, required) - uuid of changed object
+ properties (object, required)
    + status (object, optional) - may has a different name depending on the `entity_type` (`program_processing_status`, `detail.status`, `is_suspended`, `dls_verified`, `verification_status`, `is_blocked`)
        + include (`Event_properties`, required)
    + `employee_id` (object, optional) - field is required if parameter `entity_type = EmployeeRequest`
        + new_value: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string)
+ event_time: `2017-04-20T19:14:13Z` (string, required) - time, when the entity was changed
+ changed_by: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, required) - uuid of the person who changed the entity

### `Event_properties`
+ new_value: `COMPLETED` (string) - new status of entity

## `Contract_request`

### `Init_contract_request_response`
+ id: `09106b70-18b0-4726-b0ed-6bda1369fd52` (string, required) - contract_request ID
+ statute_url: `url://upload` (string, required) - URL to upload statute document
+ additional_document_url: `url://upload` (string, required) - URL to upload additional document

### `Contract_request_Request_signed`
+ `signed_content`: `ew0KICAiY29udHJhY3Rvcl9vd25lcl9pZCI6ICJkZjlmNzBlZS00YjEyLTQ3NDAtYjBmNS1iYjVhZWExMTY4NjMiLA0KICAiY29udHJhY3Rvcl9iYXNlIjogItC90LAg0L/RltC00YHRgtCw0LLRliDQt9Cw0LrQvtC90YMg0L/RgNC+INCc0LXQtNC40YfQvdC1INC+0LHRgdC70YPQs9C+0LLRg9Cy0LDQvdC90Y8g0L3QsNGB0LXQu9C10L3QvdGPIiwNCiAgImNvbnRyYWN0b3JfcGF5bWVudF9kZXRhaWxzIjogew0KICAgICJiYW5rX25hbWUiOiAi0JHQsNC90Log0L3QvtC80LXRgCAxIiwNCiAgICAiTUZPIjogIjM1MTAwNSIsDQogICAgInBheWVyX2FjY291bnQiOiAiMzIwMDkxMDI3MDEwMjYiDQogIH0sDQogICJjb250cmFjdG9yX3Jtc3BfYW1vdW50IjogNTAwMDAsDQogICJjb250cmFjdG9yX2RpdmlzaW9ucyI6IFsNCiAgICAiaWQ6IGAyOTIyYTI0MC02M2RiLTQwNGUtYjczMC0wOTIyMmJmZWIyZGRgIg0KICBdLA0KICAiY29udHJhY3Rvcl9lbXBsb3llZV9kaXZpc2lvbnMiOiBbDQogICAgew0KICAgICAgImVtcGxveWVlX2lkIjogIjI5MjJhMjQwLTYzZGItNDA0ZS1iNzMwLTA5MjIyYmZlYjJkZCIsDQogICAgICAic3RhZmZfdW5pdHMiOiAwLjUsDQogICAgICAiZGVjbGFyYXRpb25fbGltaXQiOiAyMDAwLA0KICAgICAgImRpdmlzaW9uX2lkIjogIjI5MjJhMjQwLTYzZGItNDA0ZS1iNzMwLTA5MjIyYmZlYjJkZCINCiAgICB9DQogIF0sDQogICJleHRlcm5hbF9jb250cmFjdG9yX2ZsYWciOiB0cnVlLA0KICAiZXh0ZXJuYWxfY29udHJhY3RvcnMiOiB7DQogICAgImxlZ2FsX2VudGl0eV9pZCI6ICIyOTIyYTI0MC02M2RiLTQwNGUtYjczMC0wOTIyMmJmZWIyZGQiLA0KICAgICJjb250cmFjdCI6IHsNCiAgICAgICJudW1iZXIiOiAiMTIzNDU2NyIsDQogICAgICAiaXNzdWVkX2F0IjogIjIwMTgtMDEtMDEiLA0KICAgICAgImV4cGlyZXNfYXQiOiAiMjAxOS0wMS0wMSINCiAgICB9LA0KICAgICJkaXZpc2lvbnMiOiBbDQogICAgICB7DQogICAgICAgICJpZCI6ICIyOTIyYTI0MC02M2RiLTQwNGUtYjczMC0wOTIyMmJmZWIyZGQiLA0KICAgICAgICAibWVkaWNhbF9zZXJ2aWNlIjogItCf0L7RgdC70YPQs9CwINCf0JzQlCINCiAgICAgIH0NCiAgICBdDQogIH0sDQogICJzdGFydF9kYXRlIjogIjIwMTctMDQtMjAiLA0KICAiZW5kX2RhdGUiOiAiMjAxNy0wNC0yMCIsDQogICJpZF9mb3JtIjogIjUiLA0KICAiY29udHJhY3RfbnVtYmVyIjogIjAwMDAtOUVBWC1YVDdYLTMxMTUiLA0KICAic3RhdHV0ZSI6ImJhc2U2NF9kb2N1bWVudCINCiAgImVxdWlwbWVudF9hZ3JlZW1lbnQiOiJiYXNlNjRfZG9jdW1lbnQiDQp9` (string,required)
+ `signed_content_encoding`: `base64` (string, required)

### `Contract_request_Request`
+ `contract_type`: `CAPITATION`(string,required)
+ `contractor_owner_id`: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, required) - person which represent legal entity
+ `contractor_base`: `на підставі закону про Медичне обслуговування населення` (string, required) - documents which allows to represent clinic
+ `contractor_payment_details` (object, required)
    + include (`Payment_details`, required)
+ `contractor_rmsp_amount`: `50000` (number, required) - the amount of population which were served by this MSP
+ `contractor_divisions` (array, required) - division ID (only for CAPITATION)
    + id: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required)
+ `contractor_employee_divisions` (array, optional)
    + (object)
        + include `Employee_divisions`
+ `external_contractor_flag`: true (boolean, optional) - the existence of second appendix
+ `external_contractors` (array, optional) - existing legal_entities with ACTIVE status
    + (object)
        + include (`External_contractors`, required)
+ `start_date`: `2017-04-20` (string, required) - contract start date
+ `end_date`: `2017-04-20` (string, required) - contract end date
+ `id_form`: `PMD_1` (string, required) - type of contract {DICTIONARY CONTRACT_TYPE}
+ `contract_number`: `0000-9EAX-XT7X-3115` (string, optional) - number of existing VERIFIED contract


### `Contract_request_Request_reimbursement`
+ `contract_type`: `REIMBURSEMENT`(string, required)
+ `contractor_owner_id`: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, required) - person which represent legal entity
+ `contractor_base`: `на підставі закону про Медичне обслуговування населення` (string, required) - documents which allows to represent clinic
+ `contractor_payment_details` (object, required)
    + include (`Payment_details`, required)
+ `start_date`: `2017-04-20` (string, required) - contract start dateƒ
+ `end_date`: `2017-04-20` (string, required) - contract end date
+ `id_form`: `PMD_1` (string, required) - type of contract {DICTIONARY REIMBURSEMENT_CONTRACT_TYPE}
+ `contract_number`: `0000-9EAX-XT7X-3115` (string, optional) - number of existing VERIFIED contract
+ `medical_programs` (array, required)
    + `3914a240-63db-404e-b730-09222bfeb2d0` (string, required) - - ids of a medical programs that is a subject of reimbursment contract

### `Contract_request_list_capitation`
+ id: `09106b70-18b0-4726-b0ed-6bda1369fd52` (string, required) - contract_request ID
+ `contract_type`: `CAPITATION`(string, required)
+ `contractor_legal_entity_id`: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, required) - legal entity ID which make contract request
+ `contractor_owner_id`: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, required) - person which represent legal entity
+ `contractor_base`: `на підставі закону про Медичне обслуговування населення` (string, required) - documents which allows to represent clinic
+ status: `NEW` (string, required) - contract_request status
+ status_reason: `Не відповідає попереднім домовленостям`(string, optional) - reason of status theat is setted bu nhs
+ `nhs_signer_id`: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, optional) - person which represents nhs
+ `nhs_legal_entity_id`: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, optional) - nhs legal entity ID
+ `nhs_signer_base`: `на підставі наказу` (string, optional) - documents which allows to represent nhs
+ issue_city: `Київ` (string, optional) - place of contract request
+ `nhs_contract_price`: `50000` (number, optional) - contract price
+ `nhs_payment_method`: `BACKWARD` (enum, optional) - payment method for contract (from CONTRACT_PAYMENT_METHOD dictionary)
+ contract_number: `0000-9EAX-XT7X-3115` (string, optional) - human readable number of contract request.
+ contract_id: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, optional) - contract id
+ `parent_contract_id`: `22e416c4-5747-41cd-9f73-c3a85cdee885` (string, optional) - parent contract id
+ `start_date`: `2017-04-20` (string, required) - contract start date
+ `end_date`: `2017-04-20` (string, required) - contract end date
+ `id_form`: `PMD_1` (string, required) - type of contract {DICTIONARY CONTRACT_TYPE}
+ `updated_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `inserted_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.



### `Contract_request_list_reimbursement`
+ id: `09106b70-18b0-4726-b0ed-6bda1369fd52` (string, required) - contract_request ID
+ `contract_type`: `REIMBURSEMENT`(string, required)
+ `contractor_legal_entity_id`: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, required) - legal entity ID which make contract request
+ `contractor_owner_id`: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, required) - person which represent legal entity
+ `contractor_base`: `на підставі закону про Медичне обслуговування населення` (string, required) - documents which allows to represent clinic
+ status: `NEW` (string, required) - contract_request status
+ status_reason: `Не відповідає попереднім домовленостям`(string, optional) - reason of status theat is setted bu nhs
+ `nhs_signer_id`: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, optional) - person which represents nhs
+ `nhs_legal_entity_id`: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, optional) - nhs legal entity ID
+ `nhs_signer_base`: `на підставі наказу` (string, optional) - documents which allows to represent nhs
+ issue_city: `Київ` (string, optional) - place of contract request
+ `nhs_payment_method`: `BACKWARD` (enum, optional) - payment method for contract (from CONTRACT_PAYMENT_METHOD dictionary)
+ contract_number: `0000-9EAX-XT7X-3115` (string, optional) - human readable number of contract request.
+ contract_id: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, optional) - contract id
+ `parent_contract_id`: `22e416c4-5747-41cd-9f73-c3a85cdee885` (string, optional) - parent contract id
+ `start_date`: `2017-04-20` (string, required) - contract start date
+ `end_date`: `2017-04-20` (string, required) - contract end date
+ `medical_programs` (array, required)
    + `3914a240-63db-404e-b730-09222bfeb2d0` (string, required) - - ids of a medical programs that is a subject of reimbursment contract
+ `id_form`: `RMB-1` (string, required) - type of contract {DICTIONARY REIMBURSEMENT_CONTRACT_TYPE}
+ `updated_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `inserted_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.


### `Contract_request_Update`
+ `contract_type`: `CAPITATION`
+ `nhs_signer_id`: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, optional) - id of signer from nhs side
+ `nhs_signer_base`: `на підставі наказу` (string, optional) - documents which allows to represent nhs
+ `nhs_contract_price`: `50000` (number, optional) - contract price
+ `nhs_payment_method`: `BACKWARD` (enum, optional) - payment method for contract (from CONTRACT_PAYMENT_METHOD dictionary)
+ `issue_city`: `Київ` (string, optional) - place of contract request
+ `miscellaneous`: `Жодна зі сторін не має права передавати права і зобов’язання за цим контрактом третій стороні без письмової на те згоди іншої сторони` (string, optional) - miscellaneous of a contract

### `Contract_request_Details_Capitation`
+ id: `09106b70-18b0-4726-b0ed-6bda1369fd52` (string, required) - contract_request ID
+ `contract_type`: `CAPITATION`(string,required)
+ `contractor_legal_entity`(object, required)
    + include (`contract_legal_entity_details`)
+ `contractor_owner` (object, required)
    + include (`Person_Minimal_Contract`)
+ `contractor_base`: `на підставі закону про Медичне обслуговування населення` (string, required) - documents which allows to represent clinic
+ `contractor_payment_details` (object, required)
    + include (`Payment_details`, required)
+ `contractor_rmsp_amount`: `50000` (number, required) - the amount of population which were served by this MSP
+ `contractor_divisions` (array, fixed, required)
    + (object)
        + include `Contractor_divisions`
+ `contractor_employee_divisions` (array, fixed, optional)
    + (object)
        + include `Employee_divisions_response`
+ `external_contractor_flag`: true (boolean, optional) - the existence of second appendix
+ `external_contractors` (array, optional) - existing legal_entities with ACTIVE status
    + (object)
        + include (`External_contractors_response`, required)
+ `start_date`: `2017-04-20` (string, required) - contract start date
+ `end_date`: `2017-04-20` (string, required) - contract end date
+ `id_form`: `PMD_1` (string, required) - type of contract {DICTIONARY CONTRACT_TYPE}
+ `nhs_signer` (object, optional)
    + include (`Person_Minimal_Contract`)
+ `nhs_legal_entity` (object)
    + include (`contract_legal_entity_details`)
+ `nhs_signer_base`: `на підставі наказу` (string, optional) - documents which allows to represent nhs
+ `nhs_contract_price`: `50000` (number, optional) - contract price
+ `nhs_payment_method`: `BACKWARD` (enum, optional) - payment method for contract (from CONTRACT_PAYMENT_METHOD dictionary)
+ status: `NEW` (string, required) - contract_request status
+ status_reason: `Не відповідає попереднім домовленостям`(string, optional) - reason of status that was set
+ issue_city: `Київ` (string, optional) - place of contract request
+ contract_number: `0000-9EAX-XT7X-3115` (string, optional) - human readable number of contract request.
+ contract_id: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, optional) - contract id
+ `parent_contract_id`: `22e416c4-5747-41cd-9f73-c3a85cdee885` (string, optional) - parent contract id
+ `start_date`: `2017-04-20` (string, required) - contract start date
+ `end_date`: `2017-04-20` (string, required) - contract end date
+ `printout_content`: `Contract request content` (optional) - HTML document for contract request, is shown for all statuses of contract request.
+ `previous_request_id`: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, optional) - changed contract request id
+ `assignee_id`: `22e416c4-5747-41cd-9f73-c3a85cdee885` (string, optional) - NHS employee which review contract request
+ `updated_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `inserted_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.



### `Contract_request_Details_Reimbursement`
+ id: `09106b70-18b0-4726-b0ed-6bda1369fd52` (string, required) - contract_request ID
+ `contract_type`: `REIMBURSEMENT`(string,required)
+ `contractor_legal_entity`(object, required)
    + include (`contract_legal_entity_details`)
+ `contractor_owner` (object, required)
    + include (`Person_Minimal_Contract`)
+ `contractor_base`: `на підставі закону про Медичне обслуговування населення` (string, required) - documents which allows to represent clinic
+ `contractor_payment_details` (object, required)
    + include (`Payment_details`, required)
+ `start_date`: `2017-04-20` (string, required) - contract start date
+ `end_date`: `2017-04-20` (string, required) - contract end date
+ `id_form`: `RMB-1` (string, required) - type of contract {DICTIONARY REIMBURSEMENT_CONTRACT_TYPE}
+ `nhs_signer` (object, optional)
    + include (`Person_Minimal_Contract`)
+ `nhs_legal_entity` (object)
    + include (`contract_legal_entity_details`)
+ `nhs_signer_base`: `на підставі наказу` (string, optional) - documents which allows to represent nhs
+ `nhs_contract_price`: `50000` (number, optional) - contract price
+ `nhs_payment_method`: `BACKWARD` (enum, optional) - payment method for contract (from CONTRACT_PAYMENT_METHOD dictionary)
+ status: `NEW` (string, required) - contract_request status
+ status_reason: `Не відповідає попереднім домовленостям`(string, optional) - reason of status that was set
+ issue_city: `Київ` (string, optional) - place of contract request
+ contract_number: `0000-9EAX-XT7X-3115` (string, optional) - human readable number of contract request.
+ contract_id: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, optional) - contract id
+ `parent_contract_id`: `22e416c4-5747-41cd-9f73-c3a85cdee885` (string, optional) - parent contract id
+ `start_date`: `2017-04-20` (string, required) - contract start date
+ `end_date`: `2017-04-20` (string, required) - contract end date
+ `printout_content`: `Contract request content` (optional) - HTML document for contract request, is shown for all statuses of contract request.
+ `previous_request_id`: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, optional) - changed contract request id
+ `assignee_id`: `22e416c4-5747-41cd-9f73-c3a85cdee885` (string, optional) - NHS employee which review contract request
+ `medical_programs` (array, required)
    + `3914a240-63db-404e-b730-09222bfeb2d0` (string, required) - - ids of a medical programs that is a subject of reimbursment contract
+ `updated_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `inserted_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.


### `Contract_request_Details_Full`
+ include `Contract_request_Details_Capitation`

### `Contract_request_Docs`
+ id: `09106b70-18b0-4726-b0ed-6bda1369fd52` (string, required) - contract_request ID
+ status: `NEW` (string, required) - contract_request status
+ statute: `www.url_1` (string, required) - link to statute document
+ `additional_document`: `www.url_2` (string, required) - link to report with additional document

### `contract_legal_entity_details`
+ id: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, required) - legal entity ID which make contract request
+ name: Клініка Ноунейм (string, required) - full official name of legal entity also the name to show on public sources [as map, portal etc]
+ edrpou: 32323454 (string, required) - Unified Register of Businesses and Organizations
+ addresses (array[`Address`], required) - The max items of array is 2: REGISTRATION - required, RESIDENCE - optional. DIVISION is exception: REGISTRATION - optional, RESIDENCE - required


### `Payment_details`
+ `bank_name`: `Банк номер 1` (string, required) - bank name
+ MFO: `351005` (string, optional) - bank code, required for account number
+ `payer_account`: `32009102701026` (string, required) - Account number or International Bank Account Number

### `External_contractors`
+ `legal_entity_id`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required) - external_contractor ID
+ `contract` (object,required)
  + `number`: `1234567`(string, required) - number of contract with sub contractor
  + `issued_at`: `2018-01-01` (string, required) - issue date of contract with sub contractor
  + `expires_at`: `2019-01-01` (string, required) - expiry date of contract with sub contractor
+ divisions (array, fixed, required)
    + (object)
      + id: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required)
      + `medical_service`: `Послуга ПМД` (string, required)

### `External_contractors_response`
+ `legal_entity` (object)
    + include (`Legal_Entity_Short_Cabinet`)
+ `contract` (object,required)
  + `number`: `1234567`(string, required) - number of contract with sub contractor
  + `issued_at`: `2018-01-01` (string, required) - issue date of contract with sub contractor
  + `expires_at`: `2019-01-01` (string, required) - expiry date of contract with sub contractor
+ divisions (array, fixed, required)
    + (object)
      + id: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required)
      + name: Бориспільське відділення Клініки Ноунейм (string, required) - the full name of division
      + `medical_service`: `Послуга ПМД` (string, required)

### `Employee_divisions`
+ `employee_id`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required) - employee ID
+ `staff_units`: `0.5` (number, required)
+ `declaration_limit`: `2000` (number, required) - declaration limit for current employee within the contract
+ `division_id`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required) - division ID

### `Employee_divisions_response`
+ `employee`
    + include (`Person_Minimal_Contract`)
    + include (`DoctorNew_Short_Single`)
+ `staff_units`: `0.5` (number, required)
+ `declaration_limit`: `2000` (number, required) - declaration limit for current employee within the contract
+ `division_id`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required) - division ID

### `Contractor_divisions`
+ id: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required) - division ID
+ name: Бориспільське відділення Клініки Ноунейм (string, required) - the full name of division
+ addresses (array[`Address`], required)
+ phones (array[`Phone`], required)
+ email: email@example.com (string, required) - division's email
+ working_hours (`workinghours`) - optional field, business hours by each day weekly, doesn't make any influence on business process and will be shown on portal and map.
+ mountain_group: false (boolean, optional)

### `Contracts_list_capitation`
+ id: `09106b70-18b0-4726-b0ed-6bda1369fd52` (string, required) - contract ID
+ `contract_type`: `CAPITATION` (string, required)
+ `contractor_legal_entity_id`: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, required) - legal entity ID which make contract request
+ `contractor_owner` (object, required)
    + include (`Person_Minimal_Contract`)
+ `contractor_base`: `на підставі закону про Медичне обслуговування населення` (string, required) - documents which allows to represent clinic
+ status: `VERIFIED` (string, required) - contract_request status
+ `contractor_divisions` (array, required, fixed)
    + (object)
        + id: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required) - division ID
        + name: Бориспільське відділення Клініки Ноунейм (string, required) - the full name of division
+ `external_contractor_flag`: true (boolean, optional) - true if exists appendix 2
+ `nhs_signer_id`: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, optional) - person which represents nhs
+ `nhs_legal_entity_id`: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, optional) - nhs legal entity ID
+ `nhs_signer_base`: `на підставі наказу` (string, optional) - documents which allows to represent nhs
+ `issue_city`: `Київ` (string, optional) - place of contract request
+ `nhs_contract_price`: `50000` (number, optional) - contract price
+ contract_number: `0000-9EAX-XT7X-3115` (string, optional) - human readable number of contract request.
+ contract_request_id: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, optional) - contract request id
+ `start_date`: `2017-04-20` (string, required) - contract start date
+ `end_date`: `2018-04-20` (string, required) - contract start date
+ is_suspended: false (string, required) - whether the contract is active or temporary suspended
+ id_form: `PMD` (string, required)
+ parent_contract_id: `09106b70-18b0-4726-b0ed-6bda1369fd52` (string, optional)
+ `assignee_id`: `22e416c4-5747-41cd-9f73-c3a85cdee885` (string, optional) - NHS employee which review contract request
+ `updated_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `inserted_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.


### `Contracts_list_reimbursement`
+ id: `09106b70-18b0-4726-b0ed-6bda1369fd52` (string, required) - contract ID
+ `contract_type`: `REIMBURSEMENT` (string, required)
+ `contractor_legal_entity_id`: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, required) - legal entity ID which make contract request
+ `contractor_owner` (object, required)
    + include (`Person_Minimal_Contract`)
+ `contractor_base`: `на підставі закону про Медичне обслуговування населення` (string, required) - documents which allows to represent clinic
+ status: `VERIFIED` (string, required) - contract_request status
+ `contractor_divisions` (array, required, fixed)
    + (object)
        + id: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required) - division ID
        + name: Бориспільське відділення Клініки Ноунейм (string, required) - the full name of division
+ `nhs_signer_id`: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, optional) - person which represents nhs
+ `nhs_legal_entity_id`: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, optional) - nhs legal entity ID
+ `nhs_signer_base`: `на підставі наказу` (string, optional) - documents which allows to represent nhs
+ `issue_city`: `Київ` (string, optional) - place of contract request
+ `nhs_contract_price`: `50000` (number, optional) - contract price
+ contract_number: `0000-9EAX-XT7X-3115` (string, optional) - human readable number of contract request.
+ contract_request_id: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, optional) - contract request id
+ `start_date`: `2017-04-20` (string, required) - contract start date
+ `end_date`: `2018-04-20` (string, required) - contract start date
+ is_suspended: false (string, required) - whether the contract is active or temporary suspended
+ id_form: `RMB` (string, required)
+ parent_contract_id: `09106b70-18b0-4726-b0ed-6bda1369fd52` (string, optional)
+ `assignee_id`: `22e416c4-5747-41cd-9f73-c3a85cdee885` (string, optional) - NHS employee which review contract request
+ `medical_programs` (array, required)
    + `3914a240-63db-404e-b730-09222bfeb2d0` (string, required) - - ids of a medical programs that is a subject of reimbursment contract
+ `updated_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `inserted_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.



### `Contract_Details_Capitation`
+ id: `09106b70-18b0-4726-b0ed-6bda1369fd52` (string, required) - contract ID
+ `contract_type`: `CAPITATION` (string, required)
+ `start_date`: `2017-04-20` (string, required) - contract start date
+ `end_date`: `2017-04-20` (string, required) - contract end date
+ `contractor_legal_entity`(object, required)
    + include (`contract_legal_entity_details`)
+ `contractor_owner` (object, required)
    + include (`Person_Minimal_Contract`)
+ `contractor_base`: `на підставі закону про Медичне обслуговування населення` (string, required) - documents which allows to represent clinic
+ `contractor_payment_details` (object, required)
    + include (`Payment_details`, required)
+ `contractor_rmsp_amount`: `50000` (number, required) - the amount of population which were served by this MSP
+ `contractor_divisions` (array, fixed, required)
    + (object)
        + include `Contractor_divisions`
+ `external_contractor_flag`: true (boolean, optional) - the existence of second appendix
+ `external_contractors` (array, optional) - existing legal_entities with ACTIVE status
    + (object)
        + include (`External_contractors_response`, required)
+ `contractor_employee_divisions` (array, fixed, required)
    + (object)
        + include `Employee_divisions_response`
+ `nhs_signer_base`: `на підставі наказу` (string, optional) - documents which allows to represent nhs
+ `nhs_contract_price`: `50000` (number, optional) - contract price
+ `nhs_payment_method`: `BACKWARD` (enum, optional) - payment method for contract (from CONTRACT_PAYMENT_METHOD dictionary)
+ status: `VERIFIED` (string, required) - contract status
+ reason: `не було виконано умов контракту` (string, optional) - additional the reason of terminated status
+ `status_reason`: `default` (string, optional) - the reason of terminated status
+ `nhs_signer` (object, optional)
    + include (`Person_Minimal_Contract`)
+ `nhs_legal_entity` (object)
    + include (`contract_legal_entity_details`)
+ issue_city: `Київ` (string, optional) - place of contract request
+ contract_number: `0000-9EAX-XT7X-3115` (string, optional) - human readable number of contract request.
+ contract_request_id: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, required) - contract request id
+ is_suspended: false (boolean, required) - whether the contract is active or temporary suspended
+ `end_date`: `2017-04-20` (string, required) - contract end date
+ id_form: `PMD` (string, required)
+ parent_contract_id: `09106b70-18b0-4726-b0ed-6bda1369fd52` (string, optional)
+ `updated_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `inserted_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.



### `Contract_Details_Reimbursement`
+ id: `09106b70-18b0-4726-b0ed-6bda1369fd52` (string, required) - contract ID
+ `contract_type`: `REIMBURSEMENT` (string, required)
+ `start_date`: `2017-04-20` (string, required) - contract start date
+ `end_date`: `2017-04-20` (string, required) - contract end date
+ `contractor_legal_entity`(object, required)
    + include (`contract_legal_entity_details`)
+ `contractor_owner` (object, required)
    + include (`Person_Minimal_Contract`)
+ `contractor_base`: `на підставі закону про Медичне обслуговування населення` (string, required) - documents which allows to represent clinic
+ `contractor_payment_details` (object, required)
    + include (`Payment_details`, required)

+ `contractor_divisions` (array, fixed, required)
    + (object)
        + include `Contractor_divisions`
+ `nhs_signer_base`: `на підставі наказу` (string, optional) - documents which allows to represent nhs
+ `nhs_payment_method`: `BACKWARD` (enum, optional) - payment method for contract (from CONTRACT_PAYMENT_METHOD dictionary)
+ status: `VERIFIED` (string, required) - contract status
+ status_reason: `не було виконано умов контракту` (string, optional) - the reason of terminated status
+ `nhs_signer` (object, optional)
    + include (`Person_Minimal_Contract`)
+ `nhs_legal_entity` (object)
    + include (`contract_legal_entity_details`)
+ issue_city: `Київ` (string, optional) - place of contract request
+ contract_number: `0000-9EAX-XT7X-3115` (string, optional) - human readable number of contract request.
+ contract_request_id: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, required) - contract request id
+ is_suspended: false (boolean, required) - whether the contract is active or temporary suspended
+ `end_date`: `2017-04-20` (string, required) - contract end date
+ id_form: `RMB` (string, required)
+ parent_contract_id: `09106b70-18b0-4726-b0ed-6bda1369fd52` (string, optional)
+ `medical_programs` (array, required)
    + `3914a240-63db-404e-b730-09222bfeb2d0` (string, required) - - ids of a medical programs that is a subject of reimbursment contract
+ `updated_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `inserted_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.


### `Capitation_report`
+ id: `09106b70-18b0-4726-b0ed-6bda1369fd52` (string, required) - Unique report id
+ billing_date: `2018-05-01` (string, required) - Report billing date
+ inserted_at: `2018-05-22` (string, required) - Date that shows when the report was generated

### `Capitation_report_detail`
+ id: `29000165-09106b70-18b0-4726-b0ed-6bda1369fd52` (string, required) - Synthetical record identifier
+ biling_date: `2017-04-20` (string, required) - report biling date
+ report_id: `09106b70-18b0-4726-b0ed-6bda1369fd52` (string, required) - Unique report id
+ legal_entity_id: `09106b70-18b0-4726-b0ed-6bda1369fd52` (string, required) - Legal entity id
+ edrpou: `29000165` (string, required) - Legal entity edrpou
+ legal_entity_name: `Поліклініка для Капітації` (string, required) - Legal entity name
+ capitation_contracts (array, required)
    + (object)
        + contract_id: `09106b70-18b0-4726-b0ed-6bda1369fd52` (string, required) - contract ID
        + contract_number: `0000-9EAX-XT7X-3115` (string, optional) - human readable number of contract request.
        + details (array, required)
            + (object)
                + mountain_group: true (boolean)
                + attributes (object, required)
                    + `0-5`: 17 (number, required)
                    + `6-17`: 7 (number, required)
                    + `18-39`: 9 (number, required)
                    + `40-65`: 12 (number, required)
                    + `65+`: 15 (number, required)
            + (object)
                + mountain_group: false (boolean)
                + attributes (object, required)
                    + `0-5`: 22 (number, required)
                    + `6-17`: 10 (number, required)
                    + `18-39`: 15 (number, required)
                    + `40-65`: 19 (number, required)
                    + `65+`: 21 (number, required)
        + total (object, required)
            + attributes (object, required)
                + `0-5`: 39 (number, required)
                + `6-17`: 17 (number, required)
                + `18-39`: 24 (number, required)
                + `40-65`: 31 (number, required)
                + `65+`: 36 (number, required)

## `Contracts_CRUD`

### `Contracts_CRUD_request`
+ `start_date`: `2017-04-20` (string, required) - contract start date
+ `end_date`: `2017-04-20` (string, required) - contract end date
+ status: `VERIFIED` (string, required) - contract status
+ contractor_legal_entity_id: `56440c03-e218-432a-b417-9574b2b287bd` (string, required)
+ contractor_owner_id: `54fea667-62cf-4688-ae9e-31acc19d986d` (string, required)
+ `contractor_base`: `на підставі закону про Медичне обслуговування населення` (string, required) - documents which allows to represent clinic
+ `contractor_payment_details` (object, required)
    + include (`Payment_details`, required)
+ `contractor_rmsp_amount`: `50000` (number, optional) - the amount of population which were served by this MSP
+ `external_contractor_flag`: true (boolean, optional) - the existence of second appendix
+ `external_contractors` (array, optional) - existing legal_entities with ACTIVE status
    + (object)
        + include (`External_contractors_response`, required)
+ `nhs_signer_id`: `da8cc932-7bca-4048-a3ff-9b07f901a860` (string, required)
+ `nhs_signer_base`: `на підставі наказу` (string, optional) - documents which allows to represent nhs
+ `nhs_legal_entity_id`: `e5f76afb-4d96-4279-bcf1-0308457e6b64` (string, required)
+ `nhs_payment_method`: `BACKWARD` (enum, optional) - payment method for contract (from CONTRACT_PAYMENT_METHOD dictionary)
+ is_suspended: false (boolean, required) - whether the contract is active or temporary suspended
+ issue_city: `Київ` (string, optional) - place of contract request
+ `nhs_contract_price`: `50000` (number, optional) - contract price
+ contract_number: `0000-9EAX-XT7X-3115` (string, optional) - human readable number of contract request
+ `status_reason`: `default` (string, optional) - The reason of terminated status
+ parent_contract_id: `09106b70-18b0-4726-b0ed-6bda1369fd52` (string, optional)
+ id_form: `PMD` (string, required)
+ `nhs_signed_date`: `2017-04-20` (string, required) - Date when contract was signed by NHS
+ type: `CAPITATION` (string, required)
    - CAPITATION
    - REIMBURSEMENT
+ reason: `не було виконано умов контракту` (string, optional) - additional the reason of terminated status
+ `signed_content_location`: `bucket_name/folder_identifier/file_name` (string, optional) - Location of the signed content in media storage

### `Contracts_CRUD_response`
+ id: `8be63914-a278-470b-b868-1af5b9087332` (string, required) - Unique record identifier
+ include `Contracts_CRUD_request`
+ `medical_programs` (array, optional) - list of medical programs
    - `d313342c-0b3c-443b-a92e-afb78d1e8086`
+ is_active: true (boolean, required) - Technical attribute. Indicates the availability of therecord in the system
+ `inserted_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `inserted_by`: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, required)
+ `updated_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `updated_by`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required)

### `Contract_divisions_CRUD_request`
+ division_id: `4b6b3b53-282a-415b-8f88-f1c7ab65f4a3` (string, required) - Employee identifier
+ contract_id: `71e51746-cc88-46e1-95ab-19cc5911d74c` (string, required) - Division identifier

### `Contract_divisions_CRUD_response`
+ id: `8be63914-a278-470b-b868-1af5b9087332` (string, required) - Unique record identifier
+ include `Contract_divisions_CRUD_request`
+ is_active: true (boolean, required) - Technical attribute. Indicates the availability of therecord in the system
+ `inserted_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `inserted_by`: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, required)
+ `updated_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `updated_by`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required)

### `Contract_employees_CRUD_request`
+ staff_units: 1 (number, required) - The ratio of employment, e.g. full-time or part-time. Range from 0 to 1
+ declaration_limit: 2000 (number, required) - Declaration limit for current employee within the contract
+ employee_id: `ce050c01-f4a5-4d5f-85d6-7e41d41146bf` (string, required) - Employee identifier
+ division_id: `62d0a654-2e7f-40fb-b1bb-8a38cdc3f701` (string, required) - Division identifier
+ contract_id: `6bb64748-7707-4be8-86e0-56cfb08e9b88` (string, required) - Contract identifier
+ start_date: `2018-04-20T19:14:13Z` (string, required) - Start date and time of employee involvment period
+ end_date: `2019-04-20T19:14:13Z` (string, required) - End date and time of employee involvment period. If empty - then infinite

### `Contract_employees_CRUD_response`
+ id: `8be63914-a278-470b-b868-1af5b9087332` (string, required) - Unique record identifier
+ include `Contract_employees_CRUD_request`
+ is_active: true (boolean, required) - Technical attribute. Indicates the availability of therecord in the system
+ `inserted_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `inserted_by`: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, required)
+ `updated_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `updated_by`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required)

## `Healthcare_service`

### `Healthcare_service_base`
+ division_id: `8be63914-a278-470b-b868-1af5b9087332` (string, required) - Division identifier
+ `legal_entity_id`: `483af06f-d4c6-4c9e-8d9b-680b5ef7270d` (string, required) - Legal entity identifier
+ license_id: `cdcf456b-e235-4850-9f00-27cc3453d346` (string, optional) - License identifier
+ `speciality_type`: `FAMILY_DOCTOR` (string, optional) - `Dictionary SPECIALITY_TYPE`
+ `providing_condition`: OUTPATIENT (string, optional) - `Dictionary PROVIDING_CONDITION`
+ category (Codeable_Concept, required)
    + coding (array, fixed-type)
        + (Coding)
            + system: `HEALTHCARE_SERVICE_CATEGORIES` (string)
            + code: `MSP` (string)
+ type (Codeable_Concept, optional)
    + coding (array, fixed-type)
        + (Coding)
            + system: `HEALTHCARE_SERVICE_PHARMACY_DRUGS_TYPES` (string)
            + code: `SALE` (string)
+ status: ACTIVE (string, required)
    - ACTIVE
    - INACTIVE
+ comment: `Заведено помилково` (string, optional)
+ coverage_area (array, optional)
    - `2c0110a9-0bea-4b16-af8e-6e2e149a5bfc` (string)
+ `available_time` (array[`Available_time`], optional)
+ `not_available` (array[`Restricted_period`], optional)
+ `licensed_healthcare_service` (`Licensed_healthcare_service`, optional)

### `Healthcare_service_response`
+ id: `7c3da506-804d-4550-8993-bf17f9ee0402` (string, required)
+ include `Healthcare_service_base`
+ is_active: true (boolean, required) - Technical attribute. Indicates the availability of therecord in the system
+ `inserted_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `inserted_by`: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, required)
+ `updated_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `updated_by`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required)

### `Restricted_period`
+ description: `Санітарний день` (string, required) - Reason presented to the user explaining why time not available
+ during (Period, required) - Service not available from this date

### `Available_time`
+ `days_of_week` (array, required) - Days of week
    - mon (string)
+ all_day: true (boolean, optional)
+ `available_start_time`: `08:30:00` (string, optional)
+ `available_end_time`: `19:00:00` (string, optional)

### `Employee_role_base`
+ `healthcare_service_id`: `98b6ed10-17b4-44f1-892c-7514f66bf505` (string, required) - reference to healthcare service
+ `employee_id`: `9d229fcb-6a77-4574-99a5-30729aa518fd` (string, required) - reference to employee

### `Employee_role_response`
+ id: `7c3da506-804d-4550-8993-bf17f9ee0402` (string, required)
+ include `Employee_role_base`
+ start_date: `2019-04-20T19:14:13Z` (string, required)
+ end_date: `2017-12-20T19:14:13Z` (string, optional)
+ status: ACTIVE (string, required)
    - ACTIVE
    - INACTIVE
+ is_active: true (boolean, required) - Technical attribute. Indicates the availability of therecord in the system
+ `inserted_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `inserted_by`: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, required)
+ `updated_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `updated_by`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required)

### `User_details_response`
+ id: `7c3da506-804d-4550-8993-bf17f9ee0402` (string, required)
+ email: example@gmail.com (string, required) - User's email
+ is_blocked: `false` (string, required) - whether the user is marked as fraud
+ `block_reason`: `User has fakes data` (string, optional) - the reason to block
+ person_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - MPI ID of a patient.
+ tax_id: 3126509816 (string, optional)
+ settings (object) - User settings
+ inserted_at: `2017-05-05T14:09:59.232112` (string, required)
+ updated_at: `2017-05-05T14:09:59.232112` (string, required)

### `Licensed_healthcare_service`
+ status: ACTIVE (string, optional)
    - ACTIVE
    - INACTIVE
+ `updated_at`: `2022-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.  

## `Equipment`
### `Equipment_base`
+ type: `23143534` (string, required)- `code from dictionary -  EQUIPMENT_TYPE`            
+ external_id: `123-ASD-#1` (string, required) - Identifier from external system
+ udi (array, optional) - A set of unique identifiers assigned to the asset by the manufacturer 
    + (object)
        + value: `IMEI 49015420323751` (string, required) - udi identifier
        + type: `default` (string, required) - `type of the udi identifier acording to dictionary EQUIPMENT_UDI_TYPE`
        + assigner_name: `Ukrainian center of the certification` (string, optional) - assigner name of the udi
+ lot_number: `RZ12345678` (string, optional)
+ manufacturer: `GlobalMed, Inc` (string, optional)
+ manufacture_date: `1999-01-01` (string, optional)
+ expiration_date: `2020-01-01` (string, optional)
+ model_number: `NSPX30` (string, optional)
+ part_number: `#e30-SD` (string, optional)
+ version: `v1.0.1` (string, optional)
+ name: `Рентген апарат флюрографічній` (string, optional)
+ serial_number: `S/N234554` (string, optional)
+ note: `Технічний огляд раз на рік` (string, optional)

### `Equipment_response`
+ id: `7c3da506-804d-4550-8993-bf17f9ee0402` (string, required) - Equipment identifier
+ division_id: `8be63914-a278-470b-b868-1af5b9087332` (string, required) - Division identifier
+ `legal_entity_id`: `483af06f-d4c6-4c9e-8d9b-680b5ef7270d` (string, required) - Legal entity identifier
+ include `Equipment_base`
+ status: ACTIVE (string, required)
    - ACTIVE
    - INACTIVE
+ is_active: true (boolean, required) - Technical attribute. Indicates the availability of therecord in the system
+ `inserted_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `inserted_by`: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, required)
+ `updated_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `updated_by`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required)

## Merge request
### `Merge_request_base`
+ master_person_id: `7c3da506-804d-4550-8993-bf17f9ee0402` (string, required) - `Identifier in MPI of the master person`
+ merge_person_id: `7c3da506-804d-4550-8993-bf17f9ee0403` (string, required) - `Person identifier in MPI which will be merged to master person \(preperson\)`

### `Merge_request_response`
+ id: `7c3da506-804d-4550-8993-bf17f9ee0404` (string, required) - `Identifier of the merge request`
+ include `Merge_request_base`
+ status: NEW (string, required) - `status of the new merge request`
+ `inserted_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `inserted_by`: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, required)
+ `updated_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `updated_by`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required)

### `Merge_request_sign_data`
+ id: `7c3da506-804d-4550-8993-bf17f9ee0404` (string, required) - `Identifier of the merge request`
+ status: APPROVED (string, required) - `status of the merge request`
+ `master_person` (required) - `Person data`
    + id: `13001c60-45a0-4b5a-b425-9505e1de18bd`(string, optional) - MPI id of the person
    + first_name: Петро (string, required)
    + last_name: Іванов (string, required)
    + second_name: Миколайович (string, optional)
    + birth_date: `2009-07-05` (string, required)
    + birth_country: `Україна` (string, required)
    + birth_settlement: `Вінниця` (string, required)
    + gender: MALE, FEMALE (enum[string], required)
    + email: email@example.com (string, optional)
    + `no_tax_id`: false (boolean, required)
    + tax_id: 3999869394 (string, required)
    + secret: secret (string, required)
    + documents (array, required)
        + (object)
            + type: BIRTH_CERTIFICATE (string, required) - `Dictionary DOCUMENT_TYPE`
            + number: АА120518 (string, required) - document issue number
            + issued_by: `Рокитнянським РВ ГУ МВС Київської області` (string, required) - authority which issued the document
            + issued_at: `2017-02-28` (string, required) - the date when document was issued
            + expiration_date: `2027-02-28` (string, optional) - the date when document expired, is necessery for those documents which has this date, ex, Temporary certificate, etc.
    + addresses (array[`Address`], required)
    + phones (array[`Phone`], optional)
    + unzr: `20090705-00011` (string, optional) - the record number in the demographic register
    + emergency_contact (object, required)
        + include `Emergency_Contact`
    + `confidant_person` (array[`Confidant_Person_v2`], optional) - Should be set if this Person is disabled, underage, etc.
    + preferred_way_communication: email (enum, optional) - the way how a patient wants to be reached
        - email
        - phone    
+ patient_signed: false (boolean, required) - Master person's evidence of sign the merge request.
+ `merge_person` (`Preperson_base`, required) - `Preperson data`
    + id: `7c3da506-804d-4550-8993-bf17f9ee0402` (string, required) - MPI identifier of the merge person.
    + note: `Registered in SmartMed clinic at 01.01.2019 16:40. Male, 40 years old approximately, tatoo with sport motorcycle on the right forearm` (string, optional) - Notes
+ content: `HTML` (string, required) - Generated printout form

## `Preperson`
### `Preperson_base`
+ external_id: `#1234-FDS-aa` (string, required) - `Identifier from external system`
+ first_name: Петро (string, optional)
+ last_name: Іванов (string, optional)
+ second_name: Миколайович (string, optional)
+ gender: MALE (string, required) - `Dictionary GENDER`
+ birth_date: `1980-01-01` (string, optional)
+ emergency_contact (object, optional)
    + include `Emergency_Contact`

### `Preperson_response`
+ id: `7c3da506-804d-4550-8993-bf17f9ee0402` (string, required) - `MPI identifier of the preperson`
+ include `Preperson_base`
+ note: `Registered in SmartMed clinic at 01.01.2019 16:40. Male, 40 years old approximately, tatoo with sport motorcycle on the right forearm` (string, optional) - Notes
+ status: ACTIVE (enum, required) - `status of the preperson`
    - ACTIVE
    - INACTIVE
+ death_date: `2018-11-11` (string, optional) - date of death
+ `inserted_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `inserted_by`: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, required)
+ `updated_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `updated_by`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required)

## Medical program provision
### `Medical_program_provision_request`
- One of
    + `contract_number`: `0000-PAP5-M000` (string, optional)
    + `msp_legal_entity_id`: `15d5ea65-d6e7-44f8-9eef-f0d3c1121d3a` (string, optional)
+ `medical_program_id`: `04d5ea65-d6e7-44f8-9eef-f0d3c1121d2b` (string, required)
+ divisions (array[string], required)
    + `15caea3f-cac3-483c-a3da-5875eba96430`
    + `6d07bdb0-59c0-4b54-8a90-bada3e232877`

### `Medical_program_provision_response`
+ id: `3e34da3d-9b8c-4aaf-be8e-24a161279b6a` (string, required) - identifier of the Medical program provision
+ `contract_number`: `0000-PAP5-M000` (string, optional) - сontract number according to which Medical program provision has been created
+ `msp_legal_entity_id`: `15d5ea65-d6e7-44f8-9eef-f0d3c1121d3a` (string, optional) - msp legal entity according to which Medical program provision has been created
+ `medical_program_id`: `04d5ea65-d6e7-44f8-9eef-f0d3c1121d2b` (string, required) - medical program that is provided
+ `division_id`: `15caea3f-cac3-483c-a3da-5875eba96430` (string, required) - division that provide a medical program
+ `is_active`: true (boolean, required) - status of the Medical program provision
+ `deactivate_reason`: `MANUAL_DEACTIVATION` (string, required, nullable) - the reason of deactivated status
+ `inserted_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `inserted_by`: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, required)
+ `updated_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `updated_by`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required)

## `Licenses`
### `License`
+ type: MSP (enum, required) - License type `Dictionary LICENSE_TYPE`
+ license_number: fd123443 (string, optional)
+ issued_by: Кваліфікацйна комісія (string, required)
+ issued_date: `2022-02-28` (string, required)
+ expiry_date: `2026-02-28` (string, optional)
+ active_from_date: `2022-02-28` (string, required)
+ what_licensed: реалізація наркотичних засобів (string, optional)
+ order_no: ВА43234 (string, optional)

### `crud_licenses_get`
+ id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ include `License`
+ legal_entity_id: `28d9c1be-08f0-403b-aa76-bff228c9904f` (string, required)    
+ is_primary: true (boolean, required)

### `crud_licenses_post`
+ include `License`
+ is_primary: false (boolean, required)

## Approvals
### Approval (object)
+ user_id: `user-1380df72-275a-11e7-93ae-92361f002671` (string, required) - Internal user ID, a UUID string.
+ client_name: `Clinic N1` (string, required) - Internal client name, string.
+ client_id: `client-1380df72-275a-11e7-93ae-92361f002671` (string, required) - Internal client ID, a UUID string.
+ scope: `notebooks:read notebooks:create patients:read` (string, required) - Scope, in a space-delimited format.

### `Approval_Response` (Approval)
+ id: `approval-1380df72-275a-11e7-93ae-92361f002671` (string) - Internal app ID, a UUID string.
+ `created_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `updated_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.

### `Approval_Response_v2`
+ value: `authorization_code-cTdHUE9jN29yWHo0VTAwL3lwSVRoUT09` (string, required) - oAuth grant code
+ user_id: `3ff33ced-69dc-415a-b231-c6446898335a` (string, required) - user identifier
+ name: `authorization_code` (string, required) - oAuth token name
+ id: `3ff33ced-69dc-415a-b231-c6446898335a` - oAuth token identifier
+ expires_at: 1498749591 (number, required) - expiration date-time timestamp
+ details (object, required)
    + `scope_request`: `capitation_contracts:view capitation_contracts:create patients:view patients:create` (string, required) - list of scopes that are granted with the token
    + `redirect_uri`: `http://example.com/my_success_login_page` (string, required) - client Redirect URL pattern to protect from malicious redirects
    + `grant_type`: `password` (string, required)
    + `client_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - client ID of authorized user

## Devices
### `Device_Definition_Response`
+ id: `3e34da3d-9b8c-4aaf-be8e-24a161279b6a` (string, required) - Unique identifier of Device definition
+ external_id: `0012351` (string, optional) - Device identifier in external registry
+ `device_names` (array [`device_name`], required)
+ `classification_type`: `30221` (string, required) - Classification type. Dictionary `device_definition_classification_type`
+ description: `Для визначення рівня глюкози в крові за допомогою глюкоментра Accu-Chek Active` (string, optional) - Device description
+ `manufacturer` (`Manufacturer`, optional)
+ model_number: `M23N76` (string, optional) - Model number
+ part_number: `P00234` (string, optional) - Part number
+ note: `Для визначення рівня глюкози в крові за допомогою глюкоментра Accu-Chek Active` (string, optional) - Notes and comments for device
+ `packaging` (`Device_definition_package`, required)
+ `program_devices` (array [`Program_device`], optional) - returns if `medical_program_id` search parameter was set
+ `is_active`: true (boolean, required) - device definition status
+ `inserted_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `inserted_by`: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, required)
+ `updated_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `updated_by`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required)

### `device_name`
+ `name`: `Тест-смужки Accu-Chek Active для глюкометра` (string, required) - Device name
+ `type`: `user_friendly` (enum, required) - Device name type. Dictionary `device_name_type`
    - user_friendly
    - registered
    - patient_reported    

### `Device_definition_package`
+ `packaging_type`: `undefined` (string, required) - Packaging type. Dictionary `device_definition_packaging_type`
+ packaging_count: 50 (number, required) - Number of devices in container
+ `packaging_unit`: `pcs` (string, required) - Packaging unit. Dictionary `device_unit`

### `Program_device`
+ id: `e477a845-972b-47a1-8ca3-1c71e4fd00c2` (string, required) - Program device id
+ start_date: `2019-01-01` (string, optional) - Active from date
+ end_date: `2025-06-30` (string, optional) - Active to date
+ `device_request_allowed`: TRUE (boolean, optional) - flag whether device definition are allowed to be dispensed by the program.
+ registry_number: `REG-1111` (string, optional) - Registry number
+ `max_daily_count`: 200 (number, required) - Max daily count
