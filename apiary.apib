FORMAT: 1A
HOST: http://ehealth.com/

# eHealth MIS API

This is a **MIS-related consumers  part** of API documentation for Ukrainian Health Services government institution back-end, that should provide:

* Master Patients Index (MPI)
* Global Medical Institutions and Doctors Registries
* Partnership Relation Management (PRM) module that describes business relations between this 3 entities.

* [eHealth API and issue tracker](https://github.com/ehealth-ua/api-spec)

This API design in based on [Nebo #15 API Design Manifest](http://docs.apimanifest.apiary.io/).

## Context Switching for end-users

Since Doctor may have multiple work-places, you MUST fetch list of possible work-contexts and apply `legal_entity_id` filter on each request, where this parameter is available.

Thus you will make sure that end-user understand from which context entities are managed.

If our API returns only one work context, you are free to hide context picker.

## Submitting Issues

To submit issues you should use [Issue Tracking Repo](https://github.com/ehealth-ua/api-spec), issues in all other repositories are used to plan backlog and non-related issued will be closed.

# Group Public. Medical Service Provider Integration Layer
the below table reflects actual API endpoints for all the ehealth environments
Env     | Host
--------|-----
DEMO    | https://api.demo.asclepius.com.ua
PREPROD | https://api-preprod.ehealth-ukraine.org
PROD    | https://api.ehealth-ukraine.org

##oAuth [/api/oauth]

1. Client UI: redirects user to Login UI with `client_id`, `redirect_uri` and `response_type=code` query params;
2. Login UI: completes [Session]() auth flow with `apps:create` scope;
3. Login UI: renders page with Approval (which lists requested scopes);
4. User: approves scopes;
5. Login UI: sends `POST /apps` request and redirects user to location returned in `Location` header;
6. Client: exchanges `code` from query parameters to an `access_token` by sending `POST /tokens` request with `grant_type=authorization_code`.
7. Client Back-End: stores `refresh_token` (in back-end!) and sends `access_token` to Client UI;
8. Client UI: stores `access_token` (in local storage, cookie, etc.) and makes all future requests with `Auhtorization: Bearer <access_token>` header.

**Notes:**
- If User already has approval with insufficient scopes, all steps are required, but Login UI MAY render page that shows only newly added scopes.
- When `access_token` expires, Client repeats steps 6-8 but via `grant_type=refresh_token`.

**API-key:**
- For identifiers MIS clients (as a brocker) we use term API-key. MIS must be **mandatory** send API-key when called e-Health API. 
- API-key its a `client_secret` - Medical Information System secret key issued upon integration request.
- API-key dispatched in Request HEADER as a `API-key` attribute. Example: 
```
HEADERS
Content-Type:application/json
Authorization:Bearer mF_9.B5f-4.1JqM
API-key:uXhEczJ56adsfh3Ri9SUkc4en
```
- If MIS don't send API-key in Request HEADER, API return 401 error wih message "API-KEY header required".


**Sequence Diagram**

![oAuth Sequence](https://www.websequencediagrams.com/cgi-bin/cdraw?lz=dGl0bGUgb0F1dGggRmxvdwoKQ2xpZW50IC0-IExvZ2luIFVJOiByZWRpcmVjdCB0bwANCSB3aXRoIGBjACoFX2lkYCwgYAAgCF91cmlgIGFuZCBgcmVzcG9uc2VfdHlwZT1jb2RlYCBxdWVyeSBwYXJhbXMKAEcJAGUNY29tcGxldGUgU2Vzc2lvbiBhdXRoIGZsb3cAJA1Vc2VyOiByZW5kZXIgcGFnZQCBEAZBcHByb3ZhbCAod2hpY2ggbGlzdHMgcmVxdWVzdGVkIHNjb3BlcykKVXNlcgCBXA5hADUFZQAbBwCBEA0Agh8FU2VydmVyOiBzZW5kIGBQT1NUIC9hcHBzYABWCAoAHAsAgjcOSFRUUCAyMDEsAIEVCmFuZCBMb2NhdGlvbiBoZWFkZXIAggMNAIMGBgCCdQt1c2VyIHRvIHVybCByZXR1cm5lZCBpbiBgAD4IYAA_CACDPQoAgSYSAIExBnRva2Vucz9ncmFudACDGAZhdXRob3JpegCBCwVfY29kZSAtIGV4Y2hhbmdlIGAAgzcGZnJvbQCDNgxldGVycyB0byBhbiBgYWNjZXNzXwBWBWAAgXsQAIIzDnRvcmUgcmVmcmVzaCAAgQcFAIIrEACBdggAJQZgACUHAFYHIChpbiBiYWNrLWVuZCEpAIRoBQCDDwYAdw0gdG8Agj8HIFVJCm5vdGUgb3ZlcgBMEAAmDihpbiBsb2NhbACBIQVhZ2UsIGNvb2tpZSwgZXRjLgBnBm1ha2VzIGFsbCBmdXR1AIFHBQCEWgVzAIYSB0F1aHQAgkQJOiBCZWFyZXIgPACCFgw-AIMlCQo&s=modern-blue)

### Show Login UI [GET /sign-in{?client_id,redirect_uri,scope,email}]

**Attention!**
Use following HOSTs for oAuth 2.0 Authentication

Env     | Host
--------|-----
DEMO    | https://auth.demo.asclepius.com.ua
PREPROD | https://auth-preprod.ehealth-ukraine.org
PROD    | https://auth.ehealth-ukraine.org

You MUST redirect your users to this URL to obtain oAuth Code Grant (which is later exchanged to Access Token).

User will see rendered login page, which structure differ by a list of requested scopes and security measures applied by DevOps team.

For security purposes, we will set `X-Frame-Options: deny` header that will disallow opening this page in an iframe.

+ Parameters
    + `client_id`: `6498d88e-97fb-47e2-85a5-99e884f888aa` (string, required) - Medical Service provider ID issued after legal_entity registration. Used to identify the context of the MSP/Pharmacy.
    + `redirect_uri`: http://example.com/ (string, required) - URL where user will be redirected after authentification. This url will receive `code` and `state` parameters in query string.
    + scope: `capitation_contracts:view capitation_contracts:create patients:view patients:create` (string, required) - List of scopes that is required in application business logic, separated by space. Different login forms will be shown based on scopes that you requested.
    + email: email@example.com

+ Response 200 (text/html; charset=UTF-8)

    + Headers

            X-CSRF-Token: my-csrf-token

### Exchange oAuth Code Grant to Access Token [POST /oauth/tokens]

After obtaining oAuth Code Grant, it should be exchanged to an `access_token` **on your back-end**. 

General recommendations:

- Never expose `client_secret` to your front-end.
- Also we recommend to avoid pushing it to the application source code, to limit number of developers that have access to it.

Exposed client credentials may be blocked for a security reasons, you will need to contact administrator to receive a new credentials.

+ Request (application/json)

    + Headers

            X-CSRF-Token: my-csrf-token

    + Attributes (object)
        + token (object)
            + `client_id`: `6498d88e-97fb-47e2-85a5-99e884f888aa` (string, required) - Medical Service provider ID issued after legal_entity registration. Used to identify the context of the MSP/Pharmacy.
            + client_secret: `msp-001-secret-key` (string, required) - Medical Information System secret key issued upon integration request. Used to identify application developer.
            + code: 299383828 (string, required) - oAuth code grant.
            + `grant_type`: authorization_code (string, fixed, required) - oAuth Grant Type. Currently only `authorization_code` is supported.
            + redirect_uri: http://example.com/ (string, required) - URL where user will be redirected after authentification. This url will receive `code` and `state` parameters in query string.
            + scope: `capitation_contracts:view capitation_contracts:create patients:view patients:create` (string, required) - List of scopes that is required in application business logic, separated by space. Different login forms will be shown based on scopes that you requested.

+ Response 201 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (Access_Token)

### Use Refresh Token for Access Token extension [POST /oauth/tokens]

Currently `access_token` and `refresh_token` are configured to have same lifetime, so we don't expect you to refresh it. 

In future, you will be able to refresh access tokens to extend `access_token` lifetime.

+ Request (application/json)

    + Attributes (object)
        + token (object)
            + `client_id`: `6498d88e-97fb-47e2-85a5-99e884f888aa` (string, required) - Medical Service provider ID issued after legal_entity registration. Used to identify the context of the MSP/Pharmacy.
            + client_secret: `msp-001-secret-key` (string, required) - Medical Service provider secret key issued upon integration request. Used to identify MSP.
            + refresh_token: `my-oauth-refresh-token` (string, required) - oAuth refresh token.
            + `grant_type`: refresh_token (string, fixed) - oAuth Grant Type. Currently only `authorization_code` is supported.

+ Response 201 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (Access_Token_1)

## Dictionaries [/api/dictionaries]

Method is used to retreive eHealth dictionaries

Response **$.data** object contains a list of all dictionaries. 

Each dictionary is an object that contains *{key}*:*{value}* pairs where:
* ***{key}*** is a dictionary record
* ***{value}*** is a dictionary record description

### Get dictionaries [GET]

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (array[`Dictionary`])

## OTP Verification [/api/verifications]

Method is used to verify that provided in declarartion request phone number is valid and is in service

### Initialize OTP Verification [POST]

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
    
    + Attributes (object)
        + `phone_number`: `+380508887700` (string, required)

+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + data (OTP)

### Complete OTP Verification [PATCH /api/verifications/{phone_number}/actions/complete]

+ Parameters
    + `phone_number`: `+380508887700` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
    
    + Attributes (object)
        + code: 3782 (number)

+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + data (OTP)

### Find Verifications by Phone Number [GET /api/verifications/{phone_number}]

+ Parameters
    + `phone_number`: `+380508887700` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (Response_verification_by_phone)

## Declaration Requests [/api/declaration_requests]

[Declaration Request]() is a life-cycle entity that is used to perform operations on [Declarations]().

After declaration request is signed and/or verified (depends on verification logic) it will be automatically moved to [Declarations]().

### Get Declaration Requests List [GET /api/declaration_requests{?employee_id,legal_entity_id,status,page,page_size}]

Use this method to obrain list of Declaration Requests for an `empolee_id`. If you want to reduce amount of data that is going trough your application, use `status` filter and show only requests that Doctor or Admin is interested in current UI section.


Also we suggest use `employee_id` and `legal_entity_id` to make sure that end-user understands context of actions that he or she will perform.

Method returns shortened details, to obtain full information - get Declaration Request it by it's ID.

+ Parameters
    + `employee_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - user_id of a doctor.
    + `legal_entity_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - MSP ID.
    + status: active (enum, optional)
        - NEW
        - APPROVED
        - SIGNED
        - REJECTED
    + page: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
    

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array[`Declaration_Request_Short`])

### Get Declaration Request by ID [GET /api/declaration_requests/{id}]

+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - request identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + status: SIGNED (enum, optional)
                - NEW
                - APPROVED
                - SIGNED
                - CANCELLED
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + declaration_number: `0000-12H4-245D` (string, required) - unique number of declaration.
            + include `Declaration_Request_Public_Response`
            + employee (Employee_Minimal)
            + `legal_entity` (`Medical_Service_Provider`)
                + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + division (`Division_Details`)
            + content: `Declaration content` (string, required) - HTML document that MUST be shown to a  - Should be defined on the client side.end-user and signed by hes key.
            + seed: hash (string, required) - Hash of previous block in declarations chain or other random component that should be signed with declaration.
            + channel: `MIS` (enum, required) - channel that invoke declaration create service
                - MIS
                - CABINET
        + urgent (object, required)
            + `authentication_method_current` (object, required)
                + type: `OTP` (enum, required)
                    - OTP
                    - OFFLINE
                    - NA
                + number: `+38093*****85` (string, required)
            + documents (array[`media_content`], optional)

### Create Declaration Request [POST]

This method is used to create Declaration Request (as part of Declaration creation process). Fields descriptions are listed in request Example view.

Each doctor has its own limit of declarations. In case there is a necessity to create more declarations `overlimit` should be TRUE. By default `overlimit`= FALSE

Methods-independence (Online/Offline) the attacment with scan of declaration must be added. The scan should be single page JPEG document.

After sign new declaration all previously created pending (status one of the following: NEW, APPROVED) declaration request will be cancelled automatically.

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

    + Attributes (object)
        + `declaration_request` (Declaration_Request_Public)

+ Response 201 (application/json)
    + Attributes (Response__Process_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + seed: hash (string, required)
            + include `Declaration_Request_Public_Response`
            + status: `NEW` (string, required)
            + employee (Employee_Minimal, required)
            + `legal_entity` (`Medical_Service_Provider`, required)
                + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + division (`Division_Declaration`, required)
            + content: `Declaration content` (string, required) - HTML document that MUST be shown to a  - Should be defined on the client side.end-user and signed by hes key.
            + channel: `MIS` (enum, required) - channel that invoke declaration create service
            + `preferred_way_communication`: email (enum, optional)
                - email
                - phone
        + urgent (object, required)
            + `authentication_method_current` (object, required)
                + type: `OTP` (enum, required)
                    - OTP
                    - OFFLINE
                    - NA
                + number: `+38093*****85` (string, required)
            + documents (array[`media_content`], optional)

+ Response 422 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 422
        + error
            + type: unverified (string, required)
            + message: `Unverified phone number` (string, required)

### Create Declaration Request V2 [POST /api/v2/declaration_requests]

This method is used to create Declaration Request (as part of Declaration creation process) via new api. New version changes person search and adds new fields to request.
Two version are available temporary, in the future only this version will exist.

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

    + Attributes (object)
        + `declaration_request` (Declaration_Request_Public_v2)

+ Response 201 (application/json)
    + Attributes (Response__Process_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + seed: hash (string, required)
            + include `Declaration_Request_Public_Response_v2`
            + status: `NEW` (string, required)
            + employee (Employee_Minimal, required)
            + `legal_entity` (`Medical_Service_Provider`, required)
                + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + division (`Division_Declaration`, required)
            + content: `Declaration content` (string, required) - HTML document that MUST be shown to a  - Should be defined on the client side.end-user and signed by hes key.
            + channel: `MIS` (enum, required) - channel that invoke declaration create service
            + `preferred_way_communication`: email (enum, optional)
                - email
                - phone
        + urgent (object, required)
            + `authentication_method_current` (object, required)
                + type: `OTP` (enum, required)
                    - OTP
                    - OFFLINE
                    - NA
                + number: `+38093*****85` (string, required)
            + documents (array[`media_content`], optional)

+ Response 422 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 422
        + error
            + type: unverified (string, required)
            + message: `Unverified phone number` (string, required)

### Approve Declaration Request [PATCH /api/declaration_requests/{id}/actions/approve]

Use this method to approve previously created Declaration Request.

In case if authentication_method is OTP, request example:
```
{
  "verification_code": 3748
}
```
In case if authentication_method is OFFLINE or N/A, request body should be empty. 
Before approve patient's scanned documents should be uploaded to the ([Signed URL's](https://cloud.google.com/storage/docs/access-control/create-signed-urls-program))
as well as scanned signed declaration (with type person.DECLARATION_FORM).
All links are generated for one one-page document in jpeg format. Document should be no more than 10MB.
If make declaration request via cabinet then nothing must be uploaded to URL.
Clients can use signed URL's to directly access Minio storage and upload files via API 
([Minio](https://docs.minio.io/docs/upload-files-from-browser-using-pre-signed-urls))

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

    + Attributes (object)
        + `verification_code`: 2836 (number, optional) - required if authentication_method is OTP

+ Response 201 (application/json)
    + Attributes (Response__Process_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + seed: hash (string, required)
            + include `Declaration_Request_Public_Response`
            + status: `APPROVED` (string, required)
            + employee (Employee_Minimal, required)
            + `legal_entity` (`Medical_Service_Provider`, required)
                + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + division (`Division_Details`, required)
            + content: `Declaration content` (string, required) - HTML document that MUST be shown to a  - Should be defined on the client side.end-user and signed by hes key.
            + channel: `MIS` (enum, required) - channel that invoke declaration create service

+ Response 422 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 422
        + error
            + type: request_malformed (string, required)
            + message: `This doctor has X declarations and could not sign more` (string, required)

### Reject Declaration Request [PATCH /api/declaration_requests/{id}/actions/reject]

Use this method to reject previously created Declaration Request.

+ Parameters
    + id: b075f148-7f93-4fc2-b2ec-2d81b19a9b7b (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 201 (application/json)
    + Attributes (Response__Process_OK)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (object)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + seed: hash (string, required)
            + include `Declaration_Request_Public_Response`
            + status: `REJECTED` (string, required)
            + employee (Employee_Minimal, required)
            + `legal_entity` (`Medical_Service_Provider`, required)
                + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + division (`Division_Details`, required)
            + content: `Declaration content` (string, required) - HTML document that MUST be shown to a  - Should be defined on the client side.end-user and signed by hes key.
            + channel: `MIS` (enum, required) - channel that invoke declaration create service

### Resend Authorization OTP on Declaration Request [POST /api/declaration_requests/{id}/actions/resend_otp]

Use this method to resend sms on previously created Declaration Request.

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + data (OTP)

### Sign Declaration Request [PATCH /api/declaration_requests/{id}/actions/sign]

This method is used to sign Declaration Request. Method receives signed message (pkcs7) including signed content, digital signature and signer public key in `signed_content` property. 
All signature fields will be validated (including signer certificate authority).

This service will store signed copy of Declaration Request in Media Content Storage, created or update MPI records and create declaration if signature is all checks is passed.

Signed content MUST consists of JSON object with Declaration Request data and printout template. Object that need to be signed is returned by `Get Declaration request by ID` response, `JSON.Path: $.data`.
Patient must re-read and sign declaration print form and after that `patient_signed` should be changed to TRUE.  

Declaration request can be signed either by doctor or admin (user with scope `declaration_request:sign`) from legal entity as in declaration request.

**Important**
Invoke Get Declaration Request by ID to obtain seed - Hash of previous block in declarations chain or other random component that should be signed with declaration

**Signed object example:**
```
{
    "id": "b075f148-7f93-4fc2-b2ec-2d81b19a9b7b",
    "start_date": "2017-03-02",
    "end_date": "2017-03-02",
    "person": {
      "first_name": "Петро",
      "last_name": "Іванов",
      "second_name": "Миколайович",
      "birth_date": "1991-08-19",
      "birth_country": "Україна",
      "birth_settlement": "Вінниця",
      "gender": "MALE",
      "email": "email@example.com",
      "tax_id": "3126509816",
      "secret": "secret",
      "documents": [
        {
          "type": "PASSPORT",
          "number": "120518"
        }
      ],
      "addresses": [
        {
          "type": "RESIDENCE",
          "country": "UA",
          "area": "Житомирська",
          "region": "Бердичівський",
          "settlement": "Київ",
          "settlement_type": "CITY",
          "settlement_id": "43432432",
          "street_type": "STREET",
          "street": "вул. Ніжинська",
          "building": "15",
          "apartment": "23",
          "zip": "02090"
        }
      ],
      "phones": [
        {
          "type": "MOBILE",
          "number": "+380503410870"
        }
      ],
      "authentication_methods": [
        {
          "type": "OTP",
          "phone_number": "+380508887700"
        }
      ],
      "emergency_contact": {
        "first_name": "Петро",
        "last_name": "Іванов",
        "second_name": "Миколайович",
        "phones": [
          {
            "type": "MOBILE",
            "number": "+380503410870"
          }
        ]
      },
      "confidant_person": [
        {
          "relation_type": "PRIMARY",
          "first_name": "Петро",
          "last_name": "Іванов",
          "second_name": "Миколайович",
          "birth_date": "1991-08-19",
          "birth_country": "Україна",
          "birth_settlement": "Вінниця",
          "gender": "MALE",
          "tax_id": "3126509816",
          "email": "confidant_person@email.com",
          "secret": "secret",
          "documents_person": [
            {
              "type": "PASSPORT",
              "number": "120518"
            }
          ],
          "documents_relationship": [
            {
              "type": "PASSPORT",
              "number": "120518"
            }
          ],
          "phones": [
            {
              "type": "MOBILE",
              "number": "+380503410870"
            }
          ]
        }
      ],
      "patient_signed": false,
      "process_disclosure_data_consent": true
    },
    "scope": "family doctor",
    "employee": {
      "id": "d290f1ee-6c54-4b01-90e6-d701748f0851",
      "position": "P6",
      "party": {
        "id": "b075f148-7f93-4fc2-b2ec-2d81b19a9b7b",
        "first_name": "Петро",
        "last_name": "Іванов",
        "second_name": "Миколайович",
        "email": "email@example.com",
        "phones": [
          {
            "type": "MOBILE",
            "number": "+380503410870"
          }
        ]
      }
    },
    "legal_entity": {
      "name": "Клініка НоуНейм",
      "short_name": "Ноунейм",
      "legal_form": "140",
      "public_name": "ЦПМСД №1",
      "edrpou": "5432345432",
      "licenses": [
        {
          "license_number": "fd123443",
          "issued_by": "Кваліфікацйна комісія",
          "issued_date": "2017-02-28",
          "expiry_date": "2017-02-28",
          "active_from_date": "2017-02-28",
          "what_licensed": "реалізація наркотичних засобів",
          "order_no": "K-123"
        }
      ],
      "accreditation": {
        "category": "друга",
        "issued_date": "2017-02-28",
        "expiry_date": "2017-02-28",
        "order_no": "fd123443",
        "order_date": "2017-02-28"
      },
      "addresses": [
        {
          "type": "RESIDENCE",
          "country": "UA",
          "area": "Житомирська",
          "region": "Бердичівський",
          "settlement": "Київ",
          "settlement_type": "CITY",
          "settlement_id": "43432432",
          "street_type": "STREET",
          "street": "вул. Ніжинська",
          "building": "15",
          "apartment": "23",
          "zip": "02090"
        }
      ],
      "phones": [
        {
          "type": "MOBILE",
          "number": "+380503410870"
        }
      ],
      "email": "email@example.com",
      "id": "b075f148-7f93-4fc2-b2ec-2d81b19a9b7b"
    },
    "division": {
      "id": "d290f1ee-6c54-4b01-90e6-d701748f0851",
      "legal_entity_id": "d290f1ee-6c54-4b01-90e6-d701748f0851",
      "name": "Бориспільське відділення Клініки Ноунейм",
      "addresses": [
        {
          "type": "RESIDENCE",
          "country": "UA",
          "area": "Житомирська",
          "region": "Бердичівський",
          "settlement": "Київ",
          "settlement_type": "CITY",
          "settlement_id": "43432432",
          "street_type": "STREET",
          "street": "вул. Ніжинська",
          "building": "15",
          "apartment": "23",
          "zip": "02090"
        }
      ],
      "phones": [
        {
          "type": "MOBILE",
          "number": "+380503410870"
        }
      ],
      "email": "email@example.com",
      "type": "clinic",
      "external_id": "3213213"
    },
    "content": "Declaration content",
    "seed": "ghTjh409dnhHUkdi4jdh6hded"
  }
}
```

+ Parameters
    + id: b075f148-7f93-4fc2-b2ec-2d81b19a9b7b (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

    + Attributes (object)
        + `signed_declaration_request`: `MIIWmAYJKoZIhvcNAQcCoIIWiTCCFoUCAQExCzAJBgUrDgMCGgUAMIISuwYJKoZIhvcNAQcBoIISrASCEqh7XHJ0ZjFcYW5zaVxhbnNpY3BnMTI1Mlxjb2NvYXJ0ZjE1MDRcY29jb2FzdWJydGY4MTANCntcZm9udHRibFxmMFxmc3dpc3NcZmNoYXJzZXQwIEhlbHZldGljYTt9DQp7XGNvbG9ydGJsO1xyZWQyNTVcZ3JlZW4yNTVcYmx1ZTI1NTtccmVkNzBcZ3JlZW41M1xibHVlOTY7XHJlZDI0OVxncmVlbjI0OVxibHVlMjUxO30NCntcKlxleHBhbmRlZGNvbG9ydGJsOztcY3NzcmdiXGMzNDUxMFxjMjc4NDNcYzQ1MDk4O1xjc3NyZ2JcYzk4MDM5XGM5ODAzOVxjOTg4MjQ7fQ0KXG1hcmdsMTQ0MFxtYXJncjE0NDBcdmlld3cxMDgwMFx2aWV3aDg0MDBcdmlld2tpbmQwDQpcZGVmdGFiNzIwDQpccGFyZFxwYXJkZWZ0YWI3MjBccGFydGlnaHRlbmZhY3RvcjANCg0KXGYwXGZzMjggXGNmMiBcY2IzIFxleHBuZDBcZXhwbmR0dzBca2VybmluZzANClx7XA0KICAgImlkIjoiYjA3NWYxNDgiLFwNCiAgICJzdGFydF9kYXRlIjoiMjAxNy0wMy0wMlQxMDo0NToxNi4wMDBaIixcDQogICAiZW5kX2RhdGUiOiIyMDE3LTAzLTAyVDEwOjQ1OjE2LjAwMFoiLFwNCiAgICJwZXJzb24iOlx7XA0KICAgICAgImZpcnN0X25hbWUiOiJcdWMwXHUxMDU1IFx1MTA3NyBcdTEwOTAgXHUxMDg4IFx1MTA4NiAiLFwNCiAgICAgICJsYXN0X25hbWUiOiJcdWMwXHUxMDMwIFx1MTA3NCBcdTEwNzIgXHUxMDg1IFx1MTA4NiBcdTEwNzQgIixcDQogICAgICAic2blic Vjb25kX25hbWUiOiJcdWMwXHUxMDUyIFx1MTA4MCBcdTEwODIgXHUxMDg2IFx1MTA4MyBcdTEwNzIgXHUxMDgxIFx1MTA4NiBcdTEwNzQgXHUxMDgwIFx1MTA5NSAiLFwNCiAgICAgICJiaXJ0aF9kYXRlIjoiMTk5MS0wOC0xOVQwMDowMDowMC4wMDBaIixcDQogICAgICAiYmlydGhfcGxhY2UiOiJcdWMwXHUxMDQyIFx1MTExMCBcdTEwODUgXHUxMDg1IFx1MTA4MCBcdTEwOTQgXHUxMTAzICwgXHUxMDU5IFx1MTA4MiBcdTEwODggXHUxMDcyIFx1MTExMSBcdTEwODUgXHUxMDcyICIsXA0KICAgICAgImdlbmRlciI6Ik1BTEUiLFwNCiAgICAgICJlbWFpbCI6ImVtYWlsQGV4YW1wbGUuY29tIixcDQogICAgICAidGF4X2lkIjoiMzEyNjUwOTgxNiIsXA0KICAgICAgIm5hdGlvbmFsX2lkIjoiQ0M3MTUwOTg1MjQzIixcDQogICAgICAic2VjcmV0Ijoic2VjcmV0IixcDQogICAgICAiZG9jdW1lbnRzIjpbXA0KICAgICAgICAgXHtcDQogICAgICAgICAgICAidHlwZSI6IlBBU1NQT1JUIixcDQogICAgICAgICAgICAibnVtYmVyIjoiMTIwNTE4IixcDQogICAgICAgICAgICAiaXNzdWVfZGF0ZSI6IjIwMTUtMDQtMDdUMDA6MDA6MDAuMDAwWiIsXA0KICAgICAgICAgICAgImV4cGlyeV9kYXRlIjoiMjAxNS0wNC0wN1QwMDowMDowMC4wMDBaIixcDQogICAgICAgICAgICAiaXNzdWVkX2J5IjoiRE1TVSJcDQogICAgICAgICBcfVwNCiAgICAgIF0sXA0KICAgICAgImFkZHJlc3NlcyI6W1wNCiAgICAgICAgIFx7XA0KICAgICAgICAgICAgInR5cGUiOiJSRVNJREVOQ0UiLFwNCiAgICAgICAgICAgICJjb3VudHJ5IjoiVUEiLFwNCiAgICAgICAgICAgICJhcmVhIjoiXHVjMFx1MTA0NiBcdTEwODAgXHUxMDkwIFx1MTA4NiBcdTEwODQgXHUxMDgwIFx1MTA4OCBcdTEwODkgXHUxMTAwIFx1MTA4MiBcdTEwNzIgIixcDQogICAgICAgICAgICAicmVnaW9uIjoiXHVjMFx1MTA0MSBcdTEwNzcgXHUxMDg4IFx1MTA3NiBcdTEwODAgXHUxMDk1IFx1MTExMCBcdTEwNzQgXHUxMDg5IFx1MTEwMCBcdTEwODIgXHUxMDgwIFx1MTA4MSAiLFwNCiAgICAgICAgICAgICJjaXR5IjoiXHVjMFx1MTA1MCBcdTEwODAgXHUxMTExIFx1MTA3NCAiLFwNCiAgICAgICAgICAgICJjaXR5X3R5cGUiOiJDSVRZIixcDQogICAgICAgICAgICAic3RyZWV0IjoiXHVjMFx1MTA3NCBcdTEwOTEgXHUxMDgzIC4gXHUxMDUzIFx1MTExMCBcdTEwNzggXHUxMDgwIFx1MTA4NSBcdTEwODkgXHUxMTAwIFx1MTA4MiBcdTEwNzIgIixcDQogICAgICAgICAgICAiYnVpbGRpbmciOiIxNSIsXA0KICAgICAgICAgICAgImFwYXJ0bWVudCI6IjIzIixcDQogICAgICAgICAgICAiemlwIjoiMDIwOTAiXA0KICAgICAgICAgXH1cDQogICAgICBdLFwNCiAgICAgICJwaG9uZXMiOltcDQogICAgICAgICBce1wNCiAgICAgICAgICAgICJ0eXBlIjoiTU9CSUxFIixcDQogICAgICAgICAgICAibnVtYmVyIjoiKzM4MDUwMzQxMDg3MCJcDQogICAgICAgICBcfVwNCiAgICAgIF0sXA0KICAgICAgImF1dGhlbnRpY2F0aW9uX21ldGhvZHMiOltcDQogICAgICAgICBce1wNCiAgICAgICAgICAgICJ0eXBlIjoiU01TIixcDQogICAgICAgICAgICAicGhvbmVfbnVtYmVyIjoiKzM4MDUwODg4NzcwMCJcDQogICAgICAgICBcfVwNCiAgICAgIF0sXA0KICAgICAgImVtZXJnZW5jeV9jb250YWN0Ijpce1wNCiAgICAgICAgICJmaXJzdF9uYW1lIjoiXHVjMFx1MTA1NSBcdTEwNzcgXHUxMDkwIFx1MTA4OCBcdTEwODYgIixcDQogICAgICAgICAibGFzdF9uYW1lIjoiXHVjMFx1MTAzMCBcdTEwNzQgXHUxMDcyIFx1MTA4NSBcdTEwODYgXHUxMDc0ICIsXA0KICAgICAgICAgInNlY29uZF9uYW1lIjoiXHVjMFx1MTA1MiBcdTEwODAgXHUxMDgyIFx1MTA4NiBcdTEwODMgXHUxMDcyIFx1MTA4MSBcdTEwODYgXHUxMDc0IFx1MTA4MCBcdTEwOTUgIixcDQogICAgICAgICAicGhvbmVzIjpbXA0KICAgICAgICAgICAgXHtcDQogICAgICAgICAgICAgICAidHlwZSI6Ik1PQklMRSIsXA0KICAgICAgICAgICAgICAgIm51bWJlciI6IiszODA1MDM0MTA4NzAiXA0KICAgICAgICAgICAgXH1cDQogICAgICAgICBdXA0KICAgICAgXH0sXA0KICAgICAgImNvbmZpZGFudF9wZXJzb24iOlx7XA0KICAgICAgICAgInJlbGF0aW9uX3R5cGUiOiJ0cnVzdGVlIixcDQogICAgICAgICAiZmlyc3RfbmFtZSI6Ilx1YzBcdTEwNTUgXHUxMDc3IFx1MTA5MCBcdTEwODggXHUxMDg2ICIsXA0KICAgICAgICAgImxhc3RfbmFtZSI6Ilx1YzBcdTEwMzAgXHUxMDc0IFx1MTA3MiBcdTEwODUgXHUxMDg2IFx1MTA3NCAiLFwNCiAgICAgICAgICJzZWNvbmRfbmFtZSI6Ilx1YzBcdTEwNTIgXHUxMDgwIFx1MTA4MiBcdTEwODYgXHUxMDgzIFx1MTA3MiBcdTEwODEgXHUxMDg2IFx1MTA3NCBcdTEwODAgXHUxMDk1ICIsXA0KICAgICAgICAgImJpcnRoX2RhdGUiOiIxOTkxLTA4LTE5VDAwOjAwOjAwLjAwMFoiLFwNCiAgICAgICAgICJiaXJ0aF9wbGFjZSI6Ilx1YzBcdTEwNDIgXHUxMTEwIFx1MTA4NSBcdTEwODUgXHUxMDgwIFx1MTA5NCBcdTExMDMgLCBcdTEwNTkgXHUxMDgyIFx1MTA4OCBcdTEwNzIgXHUxMTExIFx1MTA4NSBcdTEwNzIgIixcDQogICAgICAgICAiZ2VuZGVyIjoiTUFMRSIsXA0KICAgICAgICAgInRheF9pZCI6IjMxMjY1MDk4MTYiLFwNCiAgICAgICAgICJkb2N1bWVudHMiOltcDQogICAgICAgICAgICBce1wNCiAgICAgICAgICAgICAgICJ0eXBlIjoiUEFTU1BPUlQiLFwNCiAgICAgICAgICAgICAgICJudW1iZXIiOiIxMjA1MTgiLFwNCiAgICAgICAgICAgICAgICJpc3N1ZV9kYXRlIjoiMjAxNS0wNC0wN1QwMDowMDowMC4wMDBaIixcDQogICAgICAgICAgICAgICAiZXhwaXJ5X2RhdGUiOiIyMDE1LTA0LTA3VDAwOjAwOjAwLjAwMFoiLFwNCiAgICAgICAgICAgICAgICJpc3N1ZWRfYnkiOiJETVNVIlwNCiAgICAgICAgICAgIFx9XA0KICAgICAgICAgXSxcDQogICAgICAgICAicGhvbmVzIjpbXA0KICAgICAgICAgICAgXHtcDQogICAgICAgICAgICAgICAidHlwZSI6Ik1PQklMRSIsXA0KICAgICAgICAgICAgICAgIm51bWJlciI6IiszODA1MDM0MTA4NzAiXA0KICAgICAgICAgICAgXH1cDQogICAgICAgICBdXA0KICAgICAgXH0sXA0KICAgICAgInJlbmV3YWxfY29uc2VudCI6dHJ1ZSxcDQogICAgICAicGF0aWVudF9zaWduZWQiOnRydWUsXA0KICAgICAgImRpc2Nsb3N1cmVfY29uc2VudCI6dHJ1ZSxcDQogICAgICAicHJvY2Vzc19kYXRhX2NvbnNlbnQiOnRydWVcDQogICBcfSxcDQogICAiZW1wbG95ZWUiOlx7XA0KICAgICAgImlkIjoiZDI5MGYxZWUtNmM1NC00YjAxLTkwZTYtZDcwMTc0OGYwODUxIixcDQogICAgICAidGl0bGUiOiJcdWMwXHUxMDgzIFx1MTExMCBcdTEwODIgXHUxMDcyIFx1MTA4OCAiLFwNCiAgICAgICJwYXJ0eSI6XHtcDQogICAgICAgICAiaWQiOiJiMDc1ZjE0OC03ZjkzLTRmYzItYjJlYy0yZDgxYjE5YTliN2IiLFwNCiAgICAgICAgICJmaXJzdF9uYW1lIjoiXHVjMFx1MTA1NSBcdTEwNzcgXHUxMDkwIFx1MTA4OCBcdTEwODYgIixcDQogICAgICAgICAibGFzdF9uYW1lIjoiXHVjMFx1MTAzMCBcdTEwNzQgXHUxMDcyIFx1MTA4NSBcdTEwODYgXHUxMDc0ICIsXA0KICAgICAgICAgInNlY29uZF9uYW1lIjoiXHVjMFx1MTA1MiBcdTEwODAgXHUxMDgyIFx1MTA4NiBcdTEwODMgXHUxMDcyIFx1MTA4MSBcdTEwODYgXHUxMDc0IFx1MTA4MCBcdTEwOTUgIlwNCiAgICAgIFx9XA0KICAgXH0sXA0KICAgIm1zcCI6XHtcDQogICAgICAiaWQiOiJkMjkwZjFlZSIsXA0KICAgICAgIm5hbWUiOiJcdWMwXHUxMDUwIFx1MTA4MyBcdTExMTAgXHUxMDg1IFx1MTExMCBcdTEwODIgXHUxMDcyICBcdTEwNDEgXHUxMDg2IFx1MTA4OCBcdTEwODAgXHUxMDg5ICIsXA0KICAgICAgInNob3J0X05hbWUiOiJcdWMwXHUxMDQxIFx1MTA4NiBcdTEwODggXHUxMDgwIFx1MTA4OSAiLFwNCiAgICAgICJ0eXBlIjoiXHVjMFx1MTA2MCBcdTEwNTQgXHUxMDU1ICIsXA0KICAgICAgImVkcnBvdSI6IjU0MzIzNDU0MzIiXA0KICAgXH0sXA0KICAgInNjb3BlIjoiZmFtaWx5IGRvY3RvciIsXA0KICAgInBsYWludGV4dF9jb250ZW50IjoiRGVjbGFyYXRpb24gY29udGVudCJcDQpcfX2gggIuMIICKjCCAZOgAwIBAgIJANj0sC/v0hWYMA0GCSqGSIb3DQEBBQUAMBkxFzAVBgNVBAMUDlBLQ1MjNyBleGFtcGxlMB4XDTE3MDMyNzE0NTczM1oXDTE3MDQyNjE0NTczM1owGTEXMBUGA1UEAxQOUEtDUyM3IGV4YW1wbGUwgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAMuqrxE/0txT+ZVRKU1O85a8eaaUAOkbcAIy1mMoxQ+UBwcBeXt07Oxu32+p51HSY93Pp5AlDLKE48sjSNvMbTk5vtZ6g8sqMpZxlBVqHLkXLXYBMf2rmtE4hfV6yTP5YUJEs+a9cotsPN0r5KlI9g8aSpIj9Ie8mML5Vh1taQHNAgMBAAGjejB4MB0GA1UdDgQWBBTET2SwL5UfUMKDyhuBGCA+CaflnzBJBgNVHSMEQjBAgBTET2SwL5UfUMKDyhuBGCA+Cafln6EdpBswGTEXMBUGA1UEAxQOUEtDUyM3IGV4YW1wbGWCCQDY9LAv79IVmDAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBBQUAA4GBAF1uOGjUb6IVS28UqZ2qLc/kd2oNU2hOEuAp1YeaKRL2OaG4bTubJO1ejoxCJNfVj0FFw5PXIgjnw87JzkAy5KLDTiotQl8eknkd1bR3nIWINemck3GeGYkR8giG3gkNxz6ky1+63ZcoJkEiS46aneDhmS6BdH0V2G/3delos8+ZMYIBgDCCAXwCAQEwJjAZMRcwFQYDVQQDFA5QS0NTIzcgZXhhbXBsZQIJANj0sC/v0hWYMAkGBSsOAwIaBQCggbEwGAYJKoZIhvcNAQkDMQsGCSqGSIb3DQEHATAcBgkqhkiG9w0BCQUxDxcNMTcwMzI4MTE1NDEwWjAjBgkqhkiG9w0BCQQxFgQU5NSvVRVYHz5tG1GW8gXrjHSnLj8wUgYJKoZIhvcNAQkPMUUwQzAKBggqhkiG9w0DBzAOBggqhkiG9w0DAgICAIAwDQYIKoZIhvcNAwICAUAwBwYFKw4DAgcwDQYIKoZIhvcNAwICASgwDQYJKoZIhvcNAQEBBQAEgYCdqnN8gGXw9OUmtxOvQQgHK5Ni/4/2WQWj7rxERh5AI6rhXs/hh3DNS5Z5mN6wO8z47SQuedbsMQ5hf6+9BbKhXD7WKeU+DtGyfa1ner5/ubz6BeVvuT98D4PrzHlqNSpe/7AirrA70QVO9kPoFSmGtBG6JjaqaCZBYbvF9InPRw==` (string, required)
        + `signed_content_encoding`: base64 (string, required)

+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + data (`Declaration_short`)


## Declarations [/api/declarations]

### Get Declarations List [GET /api/declarations{?employee_id,legal_entity_id,status,declaration_number,page,page_size}]

Use this method to obrain list of Declarations for an `empolee_id` and legal_entity_id. If you want to reduce amount of data that is going trough your application, use `status` filter and show only requests that Doctor is interested in current UI section.

Method returns shortened details, to obtain full information - get Declaration Details by it's ID.

+ Parameters
    + `employee_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - `user_id` of a Doctor.
    + `legal_entity_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - MSP ID.
    + `declaration_number`: `0000-12H4-245D` (string, optional) - unique human redable number of declaration.
    + status: active (string, optional)
        + Default: active
    + reason: offline (string, optional) - filter declaration by reason
    + page: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array[`nhs_declaration_list_Public`])

### Get Declaration by ID [GET /api/declarations/{id}]

+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - request identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (object)
            + include `Declaration_Details`

### Verify declaration  [PATCH /api/declarations/{id}/actions/approve]

This method is used by NHS_admin to verify declarations that has been created with the offline authorization.
declaration status will be changed to `active`

+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
    
    + Attributes (crud_Declaration_patch)

+ Response 200 (application/json)
    + Attributes (Response_OK)

### Reject declaration  [PATCH /declarations/{id}/reject]

This method is used by NHS_admin to reject declarations that has been created with the offline authorization.
In case if the verification result is not acceptable.
declaration status will be changed to `closed`

+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

    + Attributes (crud_Declaration_patch)

+ Response 200 (application/json)
    + Attributes (Response_OK)

## Employees [/api/employees]

The set of the end-points may be used to manage `Doctors`, `HR's` and `Accountants` that
are employed by legal entity (such as Medical Service Provider).

According to the strong binding of the Employees to the Employer (legal entity)
all GET-endpoints returning Employee info are mounted through the
`/legal_entities/{legal_entity_id}` path.

### Get Employees List [GET /api/employees{?no_tax_id,tax_id,party_id,edrpou,legal_entity_id,division_id,status,employee_type,page,page_size}]

Use this end-point to obtain all Employees of the legal entity specified by the `legal_entity_id`. 

We suggest to use `status` filter to limit response size. Eg. you MAY want to list only active employees for everyones except HR's. Also it's a good idea to filter list by employee `type`.

Method returns shortened details (for DOCTOR and PHARMACIST - additional returns specialities information), to obtain full information - get Employee it by ID.

+ Parameters
    + no_tax_id: true (boolean, optional) - filer employees with or w/o tax_id
    + tax_id: 3015492561 (string, optional)
    + party_id: 3015492561 (string, optional)
    + edrpou: 38782323 (string, optional) - filter employees by legal_entity edrpou
    + `legal_entity_id`: `d290f1ee-6c54-4b01-90e6-d701748f0152` (string, optional) - filter employees by legal_entity id
    + division_id: `d290f1ee-6c54-4b01-90e6-d701748f0152` (string, optional)
    + status: APPROVED (enum, optional) - filet employees by status
        - APPROVED
        - DISMISSED
    + employee_type: DOCTOR (string, optional) 
    + page: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array[`Employee_Short`])

### Get Employee Details [GET /api/employees/{employee_id}]

Response structure differs depending on employee type:

**For HR, ACCOUNTANT, OWNER or PHARMACY_OWNER:**

* Person info
* Employee info
* User Info

**For DOCTOR or PHARMACIST:**

* Person info
* Employee info
* User Info
* Doctor info

`Declaration_limit` and `declaration_count` are mooved to approve declaration request error, temporary are left in response with `0` value. 

+ Parameters
    + employee_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (Employee_Response)
            + division (Division_Short)
            + `legal_entity` (`Legal_Entity_Short`)


### Deactivate Employee [PATCH /api/employees/{id}/actions/deactivate]

Use this method to deactivate employee. OWNER and PHARMACY_OWNER can't be deactivated using this method.
(the 409 error with message 'Owner can't be deactivated').
OWNER and PHARMACY_OWNER deactivates when corresponding legal_entity deactivates.
Employee deactivation: 
1. Revoke role from user

2. Deactivate declarations

3. Update employee parameters:
 - change status=DISMISSED and end_date=now

+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (Employee_Response)
            + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
            + division (Division_Short)
                + `legal_entity` (`Legal_Entity_Short`)

## Employee Requests [/api/employee_requests]

### Create Employee Request [POST]

Employee_Request consist of the three mandatory parts:
* Person info
* Employee info
* User Info

**For DOCTOR or PHARMACIST:**
* Doctor ot Pharmacist info

Additionally to register/update Physician the `Doctor info` for Doctors and `Pharmacist info` for Pharmacist should be passed.

When the `Employee_Request` will be posted the Invitation e-mail with a request
secret token will be sent to the User specified in the request.

In case the employee doesn't have tax_id no_tax_id must be true and in fields tax_id input passport number (serial number in cyrillic without spaces) 

It can be also used to update employee data. In this case `employee_id` should be passed in the payload.

User may accept or decline Invitation.

For changes to take effect employee must confirm the changes.

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

    + Attributes (object)
        + `employee_request` (Employee_Request)


+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (Employee_Request_Details)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + inserted_at: `2017-05-05T14:09:59.232112` (string, required)
            + updated_at: `2017-05-05T14:09:59.232112` (string, required)

### Create Employee Request v2 [POST /api/v2/employee_requests]

Employee_Request consist of the three mandatory parts:
* Person info
* Employee info
* User Info

**For DOCTOR or PHARMACIST:**
* Doctor ot Pharmacist info

Additionally to register/update Physician the `Doctor info` for Doctors and `Pharmacist info` for Pharmacist should be passed.

When the `Employee_Request` will be posted the Invitation e-mail with a request
secret token will be sent to the User specified in the request.

In case the employee doesn't have tax_id no_tax_id must be true and in fields tax_id input passport number (serial number in cyrillic without spaces) 

It can be also used to update employee data. In this case `employee_id` should be passed in the payload.

User may accept or decline Invitation.

For changes to take effect employee must confirm the changes.
Method receives signed message (pkcs7) including signed content, digital signature and signer public key. 
All signature fields will be validated (including signer certificate authority).
Signed content MUST consists of JSON object with the `employee_request` block of [data](https://uaehealthapi.docs.apiary.io/#reference/public.-medical-service-provider-integration-layer/employee-requests/create-employee-request):


+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

    + Attributes (object)
        + `signed_content`: `...` (string, required)
        + `signed_content_encoding`: base64 (string, required)


+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (Employee_Request_Details)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + inserted_at: `2017-05-05T14:09:59.232112` (string, required)
            + updated_at: `2017-05-05T14:09:59.232112` (string, required)

### Get Employee Requests List [GET /api/employee_requests{?id,edrpou,legal_entity_name,no_tax_id,status,page,page_size}]

+ Parameters
    + `id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) 
    + `edrpou`: `341086` (string, optional)
    + `legal_entity_name`: `Лимич Медікал` (string, optional)
    + `no_tax_id`: true (boolean, optional)
    + `status`: NEW (enum, optional)
        - NEW
        - REJECTED
        - APPROVED
        + Default: NEW
    + page: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array[`Employee_Request_Short`])

### Get Employee Request by ID [GET /api/employee_requests/{id}]

This service should be used with `access_token` authetification method.

+ Parameters

    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) 

+ Request

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM (string, optional) -- the Authorization is optional if `token` is passed


+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + data (Employee_Request_Details)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + inserted_at: `2017-05-05T14:09:59.232112` (string, optional)
            + updated_at: `2017-05-05T14:09:59.232112` (string, optional)
        + urgent (object, optional)
            + user_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)

### Get Employee ID by Employee Request ID [GET /api/mis/employee_requests/{id}]

This service should be used with mis `access_token` authetification method and used to get employee id and employee request status by employee request id.
**Scopes required:** `event:read`

+ Parameters

    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) 

+ Request

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM (string, optional) -- the Authorization is optional if `token` is passed


+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + data 
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + employee_id: `836c4753-ece4-44ba-b63c-0f92900535bf` (string, optional)
            + status: `APPROVED` (string, required)
            + updated_at: `2017-05-05T14:09:59.232112` (string, optional)

## Persons [/api/persons]

### Search for a Person [GET /api/persons{?first_name,last_name,second_name,birth_date,tax_id,phone_number,birth_place,birth_certificate,page,page_size}]

This method allows to search for a Person (MPI) without disclosing personal data.

Method returns only **requested** parameters, birth place and second name in addition for manual identification on MSP side.

+ Parameters
    + first_name: Петро (string, required)
    + last_name: Іванов (string, required)
    + second_name: Миколайович (string, optional)
    + birth_date: `1991-08-19T00:00:00.000Z` (string, required) - ISO Datetime.
    + tax_id: 3126509816 (string, optional)
    + phone_number: `+380508887700` (string, optional)
    + `birth_certificate`: 123456 (string, optional) - birth_certificate is optional parameter for search
+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + data (array[`Person_Short`])

+ Response 403 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta, fixed-type)
            + code: 403 (number)
        + error (Response__Error, fixed-type)
            + type: `too_many_results`
            + message: `This API method returns only exact match results, please retry with more specific search result` (string)


### Get Person Declaration [GET /api/persons/{id}/declaration]

This method allows to receive active person declarations issued by current legal entity (based on access_token). It can be used to check if Patient has active declarations in other Legal Entities.

It returns:
1. Short declaration info if **active declaration found** AND issued by legal entity that is available for `access_token` scope.
2. 404 error if **active declaration not found**.
3. 403 if **active declaration found** issued by **other** (not available by access scopes) legal entity.

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (Response_Collection)
        + data (array[Declaration_Details])

+ Response 403 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta, fixed-type)
            + code: 403 (number)
        + error (Response__Error, fixed-type)
            + type: `forbidden`
            + message: `Active declaration belongs to another msp` (string)

### Reset authentication method [PATCH /api/persons/{id}/actions/reset_authentication_method]

This method allows to reset (set to **NA**) person authentication method.


+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Person identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (Response_Collection)
        + data (`Person_Short`)

+ Response 403 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta, fixed-type)
            + code: 403 (number)
        + error (Response__Error, fixed-type)
            + type: `forbidden`
            + message: `Not found active declaration with person for this legal entity!` (string)

## Legal Entities [/api/legal_entities]

### Get Legal Entities [GET /api/legal_entities{?edrpou,legal_entity_id,settlement_id,type,owner_property,status,nhs_verified,page,page_size}]

Use this method to get list of legal entities filtering by parameters.
List consists of legal entities with parameter `is_active = true`.

+ Parameters
    + `edrpou`: `341086` (string, optional)
    + `legal_entity_id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, optional)
    + settlement_id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, optional)
    + type: MSP (enum, optional)
        - MSP
        + Default: MSP
    + owner_property: state (enum, optional)
        - state
        - private
    + status: ACTIVE (enum, optional)
        - ACTIVE
        - CLOSED
    + mis_verified: VERIFIED (enum, optional)
        - VERIFIED
        - NOT_VERIFIED 
    + `nhs_verified`: false (boolean, optional)
    + page: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array)
            + (object)
                + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
                + include `Legal_Entity_Request_Public_Short`
                + status: ACTIVE (enum, required)
                    - ACTIVE
                    - CLOSED
                + `mis_verified`: NOT_VERIFIED (enum, required)
                    - NOT_VERIFIED
                    - VERIFIED
                + `nhs_verified`: false (boolean, required)
                + `edr_verified`: false (boolean, required)

### Get Legal Entity by ID [GET /api/legal_entities/{id}]

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + data (object)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + include `Legal_Entity_Request_Public_Short`
            + status: ACTIVE (enum, required)
                - ACTIVE
                - CLOSED
            + `mis_verified`: NOT_VERIFIED (enum, required)
                - NOT_VERIFIED
                - VERIFIED
            + `nhs_verified`: false (boolean, required)
            + `edr_verified`: false (boolean, required)
            + `nhs_reviewed`: false (boolean, required) - flag that shows whether legal entity was reviewed by nhs
            + nhs_comment: `comment` (string, optional) - nhs's comment
        + urgent (object, optional)
            + security (object)
                + `secret_key`: `secret_key` (string, required)
                + `client_id`: `client_id` (string, required)
                + `redirect_uri`: `redirect_uri` (string, required, fixed) - Redirect uri

### Create/Update Legal Entity [PUT]

Use this method to register a new Legal Entity or update existing one.

New Legal Entity is created with 
status = ACTIVE
mis_verified = NOT_VERIFIED (if legal entity IS NOT in ukr_med_registry) and VERIFIED (if legal entity IS in ukr_med_registry)
nhs_verified = false

Method receives signed message (pkcs7) including signed content, digital signature and signer public key. 
All signature fields will be validated (including signer certificate authority).
There is a [**dummy method**](https://uaehealthapi.docs.apiary.io/reference/dummy.-create-legal-entity/dummy-for-legal-entity/create/update-legal-entity) that describes the latest legal entity data model and can be used as documentation.
Signed content MUST consists of JSON object with Legal Entity data:

```
{
  "name": "Клініка Ноунейм",
  "short_name": "Ноунейм",
  "public_name": "Ноунейм",
  "type": "MSP",
  "owner_property_type": "STATE",
  "legal_form": "140",
  "edrpou": "32323454",
  "kveds": [
    "86.10"
  ],
  "addresses": [
    {
      "type": "RESIDENCE",
      "country": "UA",
      "area": "Житомирська",
      "region": "Бердичівський",
      "settlement": "Київ",
      "settlement_type": "CITY",
      "settlement_id": "43432432",
      "street_type": "STREET",
      "street": "вул. Ніжинська",
      "building": "15",
      "apartment": "23",
      "zip": "02090"
    }
  ],
  "phones": [
    {
      "type": "MOBILE",
      "number": "+380503410870"
    }
  ],
  "email": "email@example.com",
  "website": "www.msp.com.ua",
  "receiver_funds_code": "AB12345",
  "beneficiary": "Борисов Борис Борисович",
  "owner": {
    "first_name": "Петро",
    "last_name": "Іванов",
    "second_name": "Миколайович",
    "tax_id": "3015492563",
    "birth_date": "1991-08-19",
    "gender": "MALE",
    "email": "email@example.com",
    "documents": [
      {
        "type": "PASSPORT",
        "number": "120518",
        "issued_by": "Рокитнянським РВ ГУ МВС Київської області",
        "issued_at": "2017-02-28"
      }
    ],
    "phones": [
      {
        "type": "MOBILE",
        "number": "+380503410870"
      }
    ],
    "position": "P6"
  },
  "medical_service_provider": {
    "licenses": [
      {
        "license_number": "fd123443",
        "issued_by": "Кваліфікацйна комісія",
        "issued_date": "2017-02-28",
        "expiry_date": "2017-02-28",
        "active_from_date": "2017-02-28",
        "what_licensed": "реалізація наркотичних засобів",
        "order_no": "ВА43234"
      }
    ],
    "accreditation": {
      "category": "друга",
      "issued_date": "2017-02-28",
      "expiry_date": "2017-02-28",
      "order_no": "fd123443",
      "order_date": "2017-02-28"
    }
  },
  "archive": [
    {
      "date": "2017-02-28",
      "place": "вул. Грушевського 15"
    }
  ],
  "security": {
    "redirect_uri": "http://example.com"
  },
  "public_offer": {
    "consent_text": "Consent text",
    "consent": true
  }
}
```

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

    + Attributes (object)
        + `signed_legal_entity_request`: `...` (string, required)
        + `signed_content_encoding`: base64 (string, required)

+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + data (object)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + include Legal_Entity_Response_Public
            + status: ACTIVE (enum, required)
                - ACTIVE
                - CLOSED
            + `mis_verified`: NOT_VERIFIED (enum, required)
                - NOT_VERIFIED
                - VERIFIED
            + `nhs_verified`: false (boolean, required)
            + `edr_verified`: false (boolean, required)
            + `nhs_reviewed`: false (boolean, required) - flag that shows whether legal entity was reviewed by nhs
            + nhs_comment: `comment` (string, optional) - nhs's comment
        + urgent (object, optional)
            + security (object)
                + `secret_key`: `secret_key` (string, required)
                + `client_id`: `client_id` (string, required)
                + `redirect_uri`: `redirect_uri` (string, required, fixed) - Redirect uri
            + employee_request_id: `d098aee7-5ab3-4a24-a6ba-811f9cf94c6d` - Employee request identifier

+ Response 201 (application/json)
    + Attributes (Response__Process_OK)
        + data (object)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + include `Legal_Entity_Response_Public`
            + status: ACTIVE (enum, required)
                - ACTIVE
                - CLOSED
            + `mis_verified`: NOT_VERIFIED (enum, required)
                - NOT_VERIFIED
                - VERIFIED
            + `nhs_verified`: false (boolean, required)
            + `nhs_reviewed`: false (boolean, required) - flag that shows whether legal entity was reviewed by nhs
            + nhs_comment: `comment` (string, optional) - nhs's comment
            + is_active: true (boolean, required)
            + inserted_by: `A65C8369-CE3A-44D6-839B-8856E3DC4CA3` (string, required)
            + inserted_at: `2005-10-30 10:45` (string, required) - timestamp
            + created_by_mis_client_id:  `A65C8369-CE3A-44D6-839B-8856E3DC4CA3` (string, required)
            + updated_at: `1991-08-19T00:00:00.000Z` (string, required)
            + updated_by: `userid` (string, required)
        + urgent (object, optional)
            + security (object)
                + `secret_key`: `secret_key` (string, required)
                + `client_id`: `client_id` (string, required)
                + `redirect_uri`: `redirect_uri` (string, required, fixed) - Redirect uri
            + employee_request_id: `d098aee7-5ab3-4a24-a6ba-811f9cf94c6d` - Employee request identifier

### Create/Update Legal Entity V2 [PUT /api/v2/legal_entities]

Key features and main differences from V1:

* *create/update legal entity with multiple types (ex. MSP/PHARMACY)*

* *modified licenses structure in order to cover multiple legal entity types*

There is a [**dummy method Create/Update legal entity V2**](https://uaehealthapi.docs.apiary.io/#reference/dummy.-create-legal-entity/dummy-for-legal-entity/create/update-legal-entity-v2) that describes the latest legal entity data model and can be used as documentation.

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

    + Attributes (object)
        + `signed_legal_entity_request`: `...` (string, required)
        + `signed_content_encoding`: base64 (string, required)

+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + data (object)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + include Legal_Entity_Response_Public
            + status: ACTIVE (enum, required)
                - ACTIVE
                - CLOSED
            + `mis_verified`: NOT_VERIFIED (enum, required)
                - NOT_VERIFIED
                - VERIFIED
            + `nhs_verified`: false (boolean, required)
            + `edr_verified`: false (boolean, required)
            + `nhs_reviewed`: false (boolean, required) - flag that shows whether legal entity was reviewed by nhs
            + nhs_comment: `comment` (string, optional) - nhs's comment
        + urgent (object, optional)
            + security (object)
                + `secret_key`: `secret_key` (string, required)
                + `client_id`: `client_id` (string, required)
                + `redirect_uri`: `redirect_uri` (string, required, fixed) - Redirect uri
            + employee_request_id: `d098aee7-5ab3-4a24-a6ba-811f9cf94c6d` - Employee request identifier

+ Response 201 (application/json)
    + Attributes (Response__Process_OK)
        + data (object)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + include `Legal_Entity_Response_Public`
            + status: ACTIVE (enum, required)
                - ACTIVE
                - CLOSED
            + `mis_verified`: NOT_VERIFIED (enum, required)
                - NOT_VERIFIED
                - VERIFIED
            + `nhs_verified`: false (boolean, required)
            + `nhs_reviewed`: false (boolean, required) - flag that shows whether legal entity was reviewed by nhs
            + nhs_comment: `comment` (string, optional) - nhs's comment
            + is_active: true (boolean, required)
            + inserted_by: `A65C8369-CE3A-44D6-839B-8856E3DC4CA3` (string, required)
            + inserted_at: `2005-10-30 10:45` (string, required) - timestamp
            + created_by_mis_client_id:  `A65C8369-CE3A-44D6-839B-8856E3DC4CA3` (string, required)
            + updated_at: `1991-08-19T00:00:00.000Z` (string, required)
            + updated_by: `userid` (string, required)
        + urgent (object, optional)
            + security (object)
                + `secret_key`: `secret_key` (string, required)
                + `client_id`: `client_id` (string, required)
                + `redirect_uri`: `redirect_uri` (string, required, fixed) - Redirect uri
            + employee_request_id: `d098aee7-5ab3-4a24-a6ba-811f9cf94c6d` - Employee request identifier

### Verify Legal Entity by MIS [PATCH /api/legal_entities/{id}/actions/mis_verify]

Use this method to verify legal entity by MIS.
Available transition:
`mis_verified` NOt_VERIFIED --> VERIFIED

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
    

+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + data (object)
            + include `Legal_Entity_Request_Public_Short`
            

### Verify Legal Entity by NHS [PATCH /api/legal_entities/{id}/actions/nhs_verify]

Use this method to verify legal entity by NHS.
Available transition:
`nhs_verified` false --> true

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
    

+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + data (object)
            + include `Legal_Entity_Request_Public_Short`
            


### Deactivate Legal Entity [PATCH /api/legal_entities/{id}/actions/deactivate]

Use this method to deactivate msp.
1. Deactivate emploees by legal entity

2. Deactivate legal entity
Update status on CLOSED

+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (object)
            + include `Legal_Entity_Request_Public_Short`


### Get legators Legal Entities [GET /api/legal_entities/{id}/related{?page,page_size}]

Use this method to get the list of child legal entities which are related to current legal entity.


+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
    + `page`: 2 (number) - Page number.    
    + `page_size`: 50 (number) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (array[`Legal_Entity_Related`])

## Divisions [/api/divisions]

### Get divisions [GET /api/divisions{?ids,name,legal_entity_id,type,status,page,page_size}]

+ Parameters
    + ids: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional)
    + name: `Бориспільське відділення клініки` (string, optional)
    + legal_entity_id: `d8b5f374-0f3c-46e6-baf1-21d97b4c9ff5` (string, optional)
    + type: CLINIC (string, optional) - Dictionary DIVISION_TYPE
    + status: ACTIVE (string, optional)
        - ACTIVE
        - INACTIVE
    + `page`: 2 (number) - Page number.    
    + `page_size`: 50 (number) - A limit on the number of objects to be returned, between 1 and 100. Default: 50


+ Response 200 (application/json)
    + Attributes (Response_Collection_V2)
        + data (`crud_division_get`)

### Update division [PATCH /api/divisions/{id}]

This method to update the division info by ID.

+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)

+ Request (application/json)
    + Attributes (`crud_division_post`)

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (`crud_division_get`)

### Create division [POST]

This method to create the division info by ID.

+ Request (application/json)
    + Attributes (`crud_division_post`)

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (`crud_division_get`)

### Deactivate division [PATCH /api/divisions/{id}/actions/deactivate]
+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (`crud_division_get`)

### Activate division [PATCH /api/divisions/{id}/actions/activate]
+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (`crud_division_get`)

## UAdresses [/api/uaddresses]

API for searching Ukrainian Addresses

## Search Streets [/api/uaddresses/streets]

### List of Streets by Search Params [GET /api/uaddresses/streets{?settlement_id,name,type,page,page_size}]

+ Parameters
    + settlement_id: `eea333b5-e26d-4e3e-92e2-2ab37b131502` (string, required) - Settlement identifier
    + name: `Незалежності` (string, optional) - Street name
    + type: STREET (string, optional) - Street type (Dictionary STREET_TYPE)
    + `page`: 2 (number) - Page number.    
    + `page_size`: 50 (number) - A limit on the number of objects to be returned, between 1 and 100. Default: 50


+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (array[`Response_Street`])

## Search Settlements [/api/uaddresses/settlements]

### List Of Cities By Search Params [GET /api/uaddresses/settlements{?name,region,district,koatuu,page,page_size}]

Use this method to obtain list of cities. If you want to reduce amount of data that is going trough your application, use `name`, `region`, `district` or `koatuu classifier` filters and show only cities you are interested in.

+ Parameters
    + name: Новосілки (string, optional) - Name of searching settlement
    + region: Київ (string, optional) - Province name
    + district: `Києво-Святошинський` (string, optional) - Administrative district of province
    + koatuu: `2625286301` (string, optional) - koatuu classifier id
    + `page`: 2 (number) - Page number.    
    + `page_size`: 50 (number) - A limit on the number of objects to be returned, between 1 and 100. Default: 50


+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (array[`Response_Settlement`])

### Get settlement details by ID [GET /api/uaddresses/settlements/{id}]

Use this method to obtain city details. 

+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - settlement_id


+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (`Response_Settlement`)

## Search Regions [/api/uaddresses/regions]

### List Of Regions By Search Params [GET /api/uaddresses/regions{?name,koatuu,page,page_size}]
+ Parameters
    + name: Київ (string, optional) - Province name
    + koatuu: `2625286301` (string, optional) - koatuu classifier id
    + `page`: 2 (number) - Page number.    
    + `page_size`: 50 (number) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (array[`Response_Region`])

## Search Districts [/api/uaddresses/districts]

### List Of Districts By Search Params [GET /api/uaddresses/districts{?region_id,region,name,koatuu,page,page_size}]
+ Parameters
    + region_id: `09a33c98-9a5c-447a-8493-da8fcecb6873` (string, optional) - Province id
    + region: Київ (string, optional) - Province name
    + name: `Києво-Святошинський` (string, optional) - Administrative district of province
    + koatuu: `2625286301` (string, optional) - koatuu classifier id
    + `page`: 2 (number) - Page number.    
    + `page_size`: 50 (number) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (array[`Response_District`])

### Districts by Region [GET /api/uaddresses/regions/290f1ee-6c54-4b01-90e6-d701748f0851/districts{?name,koatuu,page,page_size}]

+ Parameters
    + name: `Києво-Святошинський` (string, optional) - Filter by district name
    + koatuu: `2625286301` (string, optional) - koatuu classifier id
    + `page`: 2 (number) - Page number.    
    + `page_size`: 50 (number) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (array[`Response_District_Short`])

### Settlements by district [GET /api/uaddresses/districts/290f1ee-6c54-4b01-90e6-d701748f0851/settlements{?name,koatuu,page,page_size}]

Get list of cities by district

+ Parameters
    + name: `Київ` (string, optional) - Filter by settlement name
    + koatuu: `2625286301` (string, optional) - koatuu classifier id
    + `page`: 2 (number) - Page number.    
    + `page_size`: 50 (number) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (array[`Response_Settlement_Short`])

## Roles [/admin/roles]

Roles are used to simplify Users access management.
Role scopes limits list of scopes that User can have.
By changing Role scopes this change will immidiately propagate to all users within role.

Roles are set separately for each Client.

### List Roles [GET /admin/roles{?name,page,page_size}]

+ Parameters
    + name: `My role` (string, optional) - Return only roles that contains `name` substring.
    + `page`: 2 (number) - Page number.    
    + `page_size`: 50 (number) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
    
+ Request (application/json)

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Role_Response`])

### Get Role by ID [GET /admin/roles/{id}]

+ Parameters
    + id: `role-1380df72-275a-11e7-93ae-92361f002671` (string, required)

+ Request (application/json)

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Role_Response`)

## Deprecated - Client secret [/admin/clients]

### Refresh client secret [PATCH /admin/clients/{id}/refresh_secret]

This method is used to refresh client secret for existing client (legal entity)
Only legal entity owner can request new client secret for his own legal entity

**Scopes required:** `secret:refresh`

+ Parameters
    + id: `role-1380df72-275a-11e7-93ae-92361f002671` (string, required)

+ Request (application/json)

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Client_Deprecated`)

## Manage client configuration [/api/clients]

### Get clients [GET /api/clients]

This service returns list of clients filtered by context depending on client type:

* Mithril Admin - receives all client records without context
* MSP - receives only its own client
* MIS - receives only its own client

**Scopes required:** `client:read`

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en 

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array[`Client`])

### Get client details [GET /api/clients/{id}]

This service returns client details. 

Service will return authorization error (403) if the requested client doesn't correspond with context

**Scopes required:** `client:read`

+ Parameters
    + id: `1380df72-275a-11e7-93ae-92361f002671` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en 

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Client`)
            + client_type_name: MSP (string, optional)

### Get client connections [GET /api/clients/{id}/connections]

Service returns list of connections for specified client

Service will return authorization error (403) if the requested client doesn't correspond with context

**Scopes required:** `connection:read`

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en 

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array[`Connection`])

### Get client connection details [GET /api/clients/{id}/connections/{connection_id}]

**Scopes required:** `connection:read`

+ Parameters
    + id: `1380df72-275a-11e7-93ae-92361f002671` (string, required)
    + connection_id: `e5372365-d47a-467f-81d0-f35117864352` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en 

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Connection`)

### Update client connection [PATCH /api/clients/{id}/connections/{connection_id}]

Only redirect uri can be updated using this method

**Scopes required:** `connection:write`

+ Parameters
    + id: `1380df72-275a-11e7-93ae-92361f002671` (string, required)
    + connection_id: `e5372365-d47a-467f-81d0-f35117864352` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en 

    + Attributes (object)
        + redirect_uri: `http://example3.com` (string, required)

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Connection`)

### Refresh client secret [PATCH /api/clients/{id}/connections/{connection_id}/actions/refresh_secret]

This method is used to refresh client secret for specified client connection
Only legal entity owner can request new client secret for his own legal entity

**Scopes required:** `connection:refresh_secret`

+ Parameters
    + id: `1380df72-275a-11e7-93ae-92361f002671` (string, required)
    + connection_id: `e5372365-d47a-467f-81d0-f35117864352` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en 

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (object)
            + include `Connection`
            + secret: `ZlFOaHBTR0d3Q0hQcDEraHVYdXBVZz09` (string, required)

### Delete client connection [DELETE /api/clients/{id}/connections/{connection_id}]

This method is used to **delete** specified client connection. 
Deleted connection can't be restored and used again

**Scopes required:** `connection:delete`

+ Parameters
    + id: `1380df72-275a-11e7-93ae-92361f002671` (string, required)
    + connection_id: `e5372365-d47a-467f-81d0-f35117864352` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en 

+ Response 200 (application/json)
    + Attributes (object)
        + meta (Response__Meta, fixed-type)

## Capitation reports [/api/capitation_reports]

### Get capitation reports [GET /api/capitation_reports{?page,page_size}]

This method returns list of all available already created capitation reports.
Capitation reports are created monthly

**Scopes required:** `capitation_report:read`

+ Parameters
    + `page`: 2 (number) - Page number
    + `page_size`: 50 (number) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ Request (application/json)

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (array)
            + (`Capitation_report`)

### Get capitation report details [GET /api/capitation_report_details{?edrpou,report_id}]

This method returns details of specified capitation report.

For each contract report returns dataset according to `person_age`,`mountain_group` and `total` information.

There are following age groups right now:

0 - 5 | 6 - 17 | 18 - 39 | 40 - 65 | 65 +

* For MSP User service will return the report details limited by user's MSP Id (Client Id)
* For NHS User service will return all the details

**Scopes required:** `capitation_report:read`

+ Parameters
    + `edrpou`: `34056008` (string,optional)
    + `report_id`: `role-1380df72-275a-11e7-93ae-92361f002671` (string, optional)

+ Request (application/json)

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (array)
            + (`Capitation_report_detail`)

# Group Public. Reimbursement

## Drugs [/apidrugs]

### Get drugs list [GET /api/drugs{?innm_id,innm_name,innm_sctid,innm_dosage_form,innm_dosage_id,innm_dosage_name,medication_code_atc,medical_program_id,page,page_size}]

This endpoint returns list of drugs. Each drug contains all allowed package forms and related innm.

**Scopes required:** `drug:read`

+ Parameters
    + `innm_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - Innm identifier. 
    + `innm_name`: `Аміодарон` (string, optional) - Innm local name.
    + `innm_sctid`: `52574003` (string, optional) - Innm CNOMED code.
    + `innm_dosage_form`: `PILL` (string, optional) - Innm_dosage form.
    + `innm_dosage_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - Innm_dosage identifier.
    + `innm_dosage_name`: `Аміодарон 200мг таблетки` (string, optional) - Innm_dosage name.
    + `medication_code_atc`: `С01BD01` (string, optional) - Medication code ATC..
    + `medical_program_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - medical program id.
    + page: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            API-key: uXhEczJ56adsfh3Ri9SUkc4en 

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (array[Drug_Response])

## Medication Request Requests [/api/medication_request_requests]

[Medication request Request]() is a life-cycle entity that is used to perform operations on [Medication requests]().

After Medication request Request is signed it will be automatically moved to [Medication requests]().

> **Important:** (Specific only for "Доступні ліки")
> You can't create new Medication Request for medication in case there is another Medication Request with the same medication in this period (between started_at and ended_at)

> **Important:** Dispense of Medications under this Medication Request is possible in period between dispense_valid_from and dispense_valid_to

### Get Medication Request Requests List [GET /api/medication_request_requests{?employee_id,person_id,status,intent,page,page_size}]

Use this method to obtain list of Medication request Requests an `employee_id`. If you want to reduce amount of data that is going trough your application, use `status` filter and show only requests that Doctor is interested in current UI section.

Also we suggest use `employee_id` and `legal_entity_id` to make sure that end-user understands context of actions that he or she will perform.

Method returns shortened details, to obtain full information - Get Medication request Request it by it's ID.

+ Parameters
    + `employee_id`: `7124259c-eeb1-4cbb-acac-ada2162675d1` (string, optional) - user_id of a doctor.
    + `person_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - person_id of a pacient. 
    + `status`: `NEW` (enum, optional). Default `NEW` 
        - NEW
        - SIGNED
        - EXPIRED
        - REJECTED
    + intent: order (string, optional) - Medication request request intent
    + page: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array[`Medication_request_Request_Public_Response`]) 
 

### Get Medication Request Request by ID [GET /api/medication_request_requests/{id}]

Use this method to obrain full information of Medication request Request an `id`.

+ Parameters
    + id: `48416485-cc98-46c4-8bba-e321de9e1ecd` (string, required) - request id

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
        + data (object)
            + include `Medication_request_Request_Public_Response`

    
### PreQualify Medication Request Request [POST /api/medication_request_requests/prequalify]

This method is used to pre-qualify data Medication request Request (possibility to give reimbursement for medication according the programs) before creating Medication request Request. Fields descriptions are listed in request Example view.

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

    + Attributes (object)
        + `medication_request_request` (object)
            + include `Medication_request_Request_Qualify_post_data`
        + `programs` (array[`Qualify_Medication_request_Request_List_program_post_data`], required) - Medical programs list for qualify
        
+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + urgent (object, required)
            + `authentication_method_current` (object, required)
                + type: `OTP` (enum, required)
                    - OTP
                    - OFFLINE
                    - NA
                + number: `+38093*****85` (string, optional)
        + meta (Response__Meta)
        +  data (array[`Qualify_Medication_request_Request_Responce`]))

+ Response 422 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 422
        + error
            + type: unverified (string, required)
            + message: `Only for active MPI record can create Medication request Request!` (string, required)


### Create Medication Request Request [POST /api/medication_request_requests]

This method is used to create Medication request Request (as a part of Medication request creation process)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

    + Attributes (object)
        + `medication_request_request`(`Medication_request_Request_post_data`)

+ Response 201 (application/json)
    + Attributes (Response__Process_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + include `Medication_request_Request_Public_Response`
        + urgent (object, required)
            + `authentication_method_current` (object, required)
                + type: `OTP` (enum, required)
                    - OTP
                    - OFFLINE
                    - NA
                + number: `+38093*****85` (string, required)

+ Response 422 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 422
        + error
            + type: unverified (string, required)
            + message: `Only active employee with type DOCTOR can create medication request!` (string, required)

### Sign Medication Request Request [PATCH /api/medication_request_requests/{id}/actions/sign]

This method is used to sign Medication request Request. Method receives signed message (pkcs7) including signed content, digital signature and signer public key in `signed_content` property. 
All signature fields will be validated (including signer certificate authority).

This service will store signed copy of Medication request Request in Media Content Storage and create Medication request if signature is all checks is passed.

Signed content MUST consists of JSON object with Medication request Request data. Object that need to be signed is returned by `Get Medication request Request by ID` response, `JSON.Path: $.data`.

**Important**
Invoke Get Medication request Request by ID to obtain seed - Hash of previous block in Medication request Request chain or other random component that should be signed with Medication request Request.

**Signed object example:**
```
{
    "status": "NEW",
    "started_at": "2018-11-13",
    "request_number": "0000-K8K5-5MTE-352H",
    "person": {
        "second_name": "Іванович",
        "last_name": "Іванов",
        "id": "4e709925-4bd9-432c-973a-c98976cb901d",
        "first_name": "Іван",
        "age": 18
    },
    "medication_info": {
        "medication_qty": 10,
        "medication_name": "Амідарон",
        "medication_id": "538713df-55cd-479d-b25c-4b1359bbe7ca",
        "form": "COATED_TABLET",
        "dosage": {
            "numerator_value": 300,
            "numerator_unit": "MG",
            "denumerator_value": 1,
            "denumerator_unit": "PILL"
        }
    },
    "medical_program": {
        "updated_by": "8341b7d6-f9c7-472a-960c-7da953cc4ea4",
        "updated_at": "2018-03-30T15:14:55.564897",
        "name": "Тестова програма",
        "is_active": true,
        "inserted_by": "8341b7d6-f9c7-472a-960c-7da953cc4ea4",
        "inserted_at": "2018-03-30T15:14:55.564888",
        "id": "6f6b3971-a5db-4e2a-99a8-7fdffd8d0d9a"
    },
    "legal_entity": {
        "type": "MSP",
        "status": "ACTIVE",
        "short_name": "Ноунейм Медікал",
        "public_name": "Ноунейм Медікал",
        "name": "Клініка Ноунейм Медікал",
        "id": "a0f2f598-aa0b-486d-b8ee-7bc4fd284564",
        "edrpou": "11111111"
    },
    "id": "fda6839c-7c17-4b45-bc18-14b1039fe702",
    "ended_at": "2018-12-13",
    "employee": {
        "position": "P1",
        "party": {
            "second_name": "Петрович",
            "phones": [
                {
                    "type": "MOBILE",
                    "number": "+380501234567"
                }
            ],
            "no_tax_id": false,
            "last_name": "Петров",
            "id": "642f9f9a-24dc-4447-a4df-4bb0648bcf0a",
            "first_name": "Петро"
        },
        "id": "c677954a-2d46-4a30-9314-1c20b31e6909"
    },
    "division": {
        "working_hours": {
            "wed": [
                [
                    "08.00",
                    "12.00"
                ],
                [
                    "14.00",
                    "17.00"
                ]
            ],
            "tue": [
                [
                    "08.00",
                    "12.00"
                ],
                [
                    "14.00",
                    "17.00"
                ]
            ],
            "thu": [
                [
                    "08.00",
                    "12.00"
                ],
                [
                    "14.00",
                    "17.00"
                ]
            ],
            "mon": [
                [
                    "08.00",
                    "12.00"
                ],
                [
                    "14.00",
                    "17.00"
                ]
            ],
            "fri": [
                [
                    "08.00",
                    "12.00"
                ],
                [
                    "14.00",
                    "16.00"
                ]
            ]
        },
        "type": "CLINIC",
        "status": "ACTIVE",
        "phones": [
            {
                "type": "MOBILE",
                "number": "+380501234567"
            }
        ],
        "name": "Відділення Клініки Ноунейм",
        "mountain_group": false,
        "location": null,
        "legal_entity_id": "a0f2f598-aa0b-486d-b8ee-7bc4fd284564",
        "id": "f180f85a-a55e-4ba9-b49d-e4d00338fc57",
        "external_id": "3213213",
        "email": "example@email.com",
        "addresses": [
            {
                "zip": "02090",
                "type": "RESIDENCE",
                "street_type": "STREET",
                "street": "вул. Ніжинська",
                "settlement_type": "CITY",
                "settlement_id": "707dbc55-cb6b-4aaa-97c1-2a1e03476100",
                "settlement": "СОРОКИ-ЛЬВІВСЬКІ",
                "region": "ПУСТОМИТІВСЬКИЙ",
                "country": "UA",
                "building": "15",
                "area": "ЛЬВІВСЬКА",
                "apartment": "23"
            }
        ]
    },
    "dispense_valid_to": "2018-12-13",
    "dispense_valid_from": "2018-11-13",
    "created_at": "2018-11-13"
}
```
+ Parameters
    + id: 6a8a83a4-ac39-4547-bfa2-813bc87362a4 (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

    + Attributes (object)
        + `signed_medication_request_request`: `MIIWmAYJKoZIhvcNAQcCoIIWiTCCFoUCAQExCzAJBgUrDgMCGgUAMIISuwYJKoZIhvcNAQcBoIISrASCEqh7XHJ0ZjFcYW5zaVxhbnNpY3BnMTI1Mlxjb2NvYXJ0ZjE1MDRcY29jb2FzdWJydGY4MTANCntcZm9udHRibFxmMFxmc3dpc3NcZmNoYXJzZXQwIEhlbHZldGljYTt9DQp7XGNvbG9ydGJsO1xyZWQyNTVcZ3JlZW4yNTVcYmx1ZTI1NTtccmVkNzBcZ3JlZW41M1xibHVlOTY7XHJlZDI0OVxncmVlbjI0OVxibHVlMjUxO30NCntcKlxleHBhbmRlZGNvbG9ydGJsOztcY3NzcmdiXGMzNDUxMFxjMjc4NDNcYzQ1MDk4O1xjc3NyZ2JcYzk4MDM5XGM5ODAzOVxjOTg4MjQ7fQ0KXG1hcmdsMTQ0MFxtYXJncjE0NDBcdmlld3cxMDgwMFx2aWV3aDg0MDBcdmlld2tpbmQwDQpcZGVmdGFiNzIwDQpccGFyZFxwYXJkZWZ0YWI3MjBccGFydGlnaHRlbmZhY3RvcjANCg0KXGYwXGZzMjggXGNmMiBcY2IzIFxleHBuZDBcZXhwbmR0dzBca2VybmluZzANClx7XA0KICAgImlkIjoiYjA3NWYxNDgiLFwNCiAgICJzdGFydF9kYXRlIjoiMjAxNy0wMy0wMlQxMDo0NToxNi4wMDBaIixcDQogICAiZW5kX2RhdGUiOiIyMDE3LTAzLTAyVDEwOjQ1OjE2LjAwMFoiLFwNCiAgICJwZXJzb24iOlx7XA0KICAgICAgImZpcnN0X25hbWUiOiJcdWMwXHUxMDU1IFx1MTA3NyBcdTEwOTAgXHUxMDg4IFx1MTA4NiAiLFwNCiAgICAgICJsYXN0X25hbWUiOiJcdWMwXHUxMDMwIFx1MTA3NCBcdTEwNzIgXHUxMDg1IFx1MTA4NiBcdTEwNzQgIixcDQogICAgICAic2blic Vjb25kX25hbWUiOiJcdWMwXHUxMDUyIFx1MTA4MCBcdTEwODIgXHUxMDg2IFx1MTA4MyBcdTEwNzIgXHUxMDgxIFx1MTA4NiBcdTEwNzQgXHUxMDgwIFx1MTA5NSAiLFwNCiAgICAgICJiaXJ0aF9kYXRlIjoiMTk5MS0wOC0xOVQwMDowMDowMC4wMDBaIixcDQogICAgICAiYmlydGhfcGxhY2UiOiJcdWMwXHUxMDQyIFx1MTExMCBcdTEwODUgXHUxMDg1IFx1MTA4MCBcdTEwOTQgXHUxMTAzICwgXHUxMDU5IFx1MTA4MiBcdTEwODggXHUxMDcyIFx1MTExMSBcdTEwODUgXHUxMDcyICIsXA0KICAgICAgImdlbmRlciI6Ik1BTEUiLFwNCiAgICAgICJlbWFpbCI6ImVtYWlsQGV4YW1wbGUuY29tIixcDQogICAgICAidGF4X2lkIjoiMzEyNjUwOTgxNiIsXA0KICAgICAgIm5hdGlvbmFsX2lkIjoiQ0M3MTUwOTg1MjQzIixcDQogICAgICAic2VjcmV0Ijoic2VjcmV0IixcDQogICAgICAiZG9jdW1lbnRzIjpbXA0KICAgICAgICAgXHtcDQogICAgICAgICAgICAidHlwZSI6IlBBU1NQT1JUIixcDQogICAgICAgICAgICAibnVtYmVyIjoiMTIwNTE4IixcDQogICAgICAgICAgICAiaXNzdWVfZGF0ZSI6IjIwMTUtMDQtMDdUMDA6MDA6MDAuMDAwWiIsXA0KICAgICAgICAgICAgImV4cGlyeV9kYXRlIjoiMjAxNS0wNC0wN1QwMDowMDowMC4wMDBaIixcDQogICAgICAgICAgICAiaXNzdWVkX2J5IjoiRE1TVSJcDQogICAgICAgICBcfVwNCiAgICAgIF0sXA0KICAgICAgImFkZHJlc3NlcyI6W1wNCiAgICAgICAgIFx7XA0KICAgICAgICAgICAgInR5cGUiOiJSRVNJREVOQ0UiLFwNCiAgICAgICAgICAgICJjb3VudHJ5IjoiVUEiLFwNCiAgICAgICAgICAgICJhcmVhIjoiXHVjMFx1MTA0NiBcdTEwODAgXHUxMDkwIFx1MTA4NiBcdTEwODQgXHUxMDgwIFx1MTA4OCBcdTEwODkgXHUxMTAwIFx1MTA4MiBcdTEwNzIgIixcDQogICAgICAgICAgICAicmVnaW9uIjoiXHVjMFx1MTA0MSBcdTEwNzcgXHUxMDg4IFx1MTA3NiBcdTEwODAgXHUxMDk1IFx1MTExMCBcdTEwNzQgXHUxMDg5IFx1MTEwMCBcdTEwODIgXHUxMDgwIFx1MTA4MSAiLFwNCiAgICAgICAgICAgICJjaXR5IjoiXHVjMFx1MTA1MCBcdTEwODAgXHUxMTExIFx1MTA3NCAiLFwNCiAgICAgICAgICAgICJjaXR5X3R5cGUiOiJDSVRZIixcDQogICAgICAgICAgICAic3RyZWV0IjoiXHVjMFx1MTA3NCBcdTEwOTEgXHUxMDgzIC4gXHUxMDUzIFx1MTExMCBcdTEwNzggXHUxMDgwIFx1MTA4NSBcdTEwODkgXHUxMTAwIFx1MTA4MiBcdTEwNzIgIixcDQogICAgICAgICAgICAiYnVpbGRpbmciOiIxNSIsXA0KICAgICAgICAgICAgImFwYXJ0bWVudCI6IjIzIixcDQogICAgICAgICAgICAiemlwIjoiMDIwOTAiXA0KICAgICAgICAgXH1cDQogICAgICBdLFwNCiAgICAgICJwaG9uZXMiOltcDQogICAgICAgICBce1wNCiAgICAgICAgICAgICJ0eXBlIjoiTU9CSUxFIixcDQogICAgICAgICAgICAibnVtYmVyIjoiKzM4MDUwMzQxMDg3MCJcDQogICAgICAgICBcfVwNCiAgICAgIF0sXA0KICAgICAgImF1dGhlbnRpY2F0aW9uX21ldGhvZHMiOltcDQogICAgICAgICBce1wNCiAgICAgICAgICAgICJ0eXBlIjoiU01TIixcDQogICAgICAgICAgICAicGhvbmVfbnVtYmVyIjoiKzM4MDUwODg4NzcwMCJcDQogICAgICAgICBcfVwNCiAgICAgIF0sXA0KICAgICAgImVtZXJnZW5jeV9jb250YWN0Ijpce1wNCiAgICAgICAgICJmaXJzdF9uYW1lIjoiXHVjMFx1MTA1NSBcdTEwNzcgXHUxMDkwIFx1MTA4OCBcdTEwODYgIixcDQogICAgICAgICAibGFzdF9uYW1lIjoiXHVjMFx1MTAzMCBcdTEwNzQgXHUxMDcyIFx1MTA4NSBcdTEwODYgXHUxMDc0ICIsXA0KICAgICAgICAgInNlY29uZF9uYW1lIjoiXHVjMFx1MTA1MiBcdTEwODAgXHUxMDgyIFx1MTA4NiBcdTEwODMgXHUxMDcyIFx1MTA4MSBcdTEwODYgXHUxMDc0IFx1MTA4MCBcdTEwOTUgIixcDQogICAgICAgICAicGhvbmVzIjpbXA0KICAgICAgICAgICAgXHtcDQogICAgICAgICAgICAgICAidHlwZSI6Ik1PQklMRSIsXA0KICAgICAgICAgICAgICAgIm51bWJlciI6IiszODA1MDM0MTA4NzAiXA0KICAgICAgICAgICAgXH1cDQogICAgICAgICBdXA0KICAgICAgXH0sXA0KICAgICAgImNvbmZpZGFudF9wZXJzb24iOlx7XA0KICAgICAgICAgInJlbGF0aW9uX3R5cGUiOiJ0cnVzdGVlIixcDQogICAgICAgICAiZmlyc3RfbmFtZSI6Ilx1YzBcdTEwNTUgXHUxMDc3IFx1MTA5MCBcdTEwODggXHUxMDg2ICIsXA0KICAgICAgICAgImxhc3RfbmFtZSI6Ilx1YzBcdTEwMzAgXHUxMDc0IFx1MTA3MiBcdTEwODUgXHUxMDg2IFx1MTA3NCAiLFwNCiAgICAgICAgICJzZWNvbmRfbmFtZSI6Ilx1YzBcdTEwNTIgXHUxMDgwIFx1MTA4MiBcdTEwODYgXHUxMDgzIFx1MTA3MiBcdTEwODEgXHUxMDg2IFx1MTA3NCBcdTEwODAgXHUxMDk1ICIsXA0KICAgICAgICAgImJpcnRoX2RhdGUiOiIxOTkxLTA4LTE5VDAwOjAwOjAwLjAwMFoiLFwNCiAgICAgICAgICJiaXJ0aF9wbGFjZSI6Ilx1YzBcdTEwNDIgXHUxMTEwIFx1MTA4NSBcdTEwODUgXHUxMDgwIFx1MTA5NCBcdTExMDMgLCBcdTEwNTkgXHUxMDgyIFx1MTA4OCBcdTEwNzIgXHUxMTExIFx1MTA4NSBcdTEwNzIgIixcDQogICAgICAgICAiZ2VuZGVyIjoiTUFMRSIsXA0KICAgICAgICAgInRheF9pZCI6IjMxMjY1MDk4MTYiLFwNCiAgICAgICAgICJkb2N1bWVudHMiOltcDQogICAgICAgICAgICBce1wNCiAgICAgICAgICAgICAgICJ0eXBlIjoiUEFTU1BPUlQiLFwNCiAgICAgICAgICAgICAgICJudW1iZXIiOiIxMjA1MTgiLFwNCiAgICAgICAgICAgICAgICJpc3N1ZV9kYXRlIjoiMjAxNS0wNC0wN1QwMDowMDowMC4wMDBaIixcDQogICAgICAgICAgICAgICAiZXhwaXJ5X2RhdGUiOiIyMDE1LTA0LTA3VDAwOjAwOjAwLjAwMFoiLFwNCiAgICAgICAgICAgICAgICJpc3N1ZWRfYnkiOiJETVNVIlwNCiAgICAgICAgICAgIFx9XA0KICAgICAgICAgXSxcDQogICAgICAgICAicGhvbmVzIjpbXA0KICAgICAgICAgICAgXHtcDQogICAgICAgICAgICAgICAidHlwZSI6Ik1PQklMRSIsXA0KICAgICAgICAgICAgICAgIm51bWJlciI6IiszODA1MDM0MTA4NzAiXA0KICAgICAgICAgICAgXH1cDQogICAgICAgICBdXA0KICAgICAgXH0sXA0KICAgICAgInJlbmV3YWxfY29uc2VudCI6dHJ1ZSxcDQogICAgICAicGF0aWVudF9zaWduZWQiOnRydWUsXA0KICAgICAgImRpc2Nsb3N1cmVfY29uc2VudCI6dHJ1ZSxcDQogICAgICAicHJvY2Vzc19kYXRhX2NvbnNlbnQiOnRydWVcDQogICBcfSxcDQogICAiZW1wbG95ZWUiOlx7XA0KICAgICAgImlkIjoiZDI5MGYxZWUtNmM1NC00YjAxLTkwZTYtZDcwMTc0OGYwODUxIixcDQogICAgICAidGl0bGUiOiJcdWMwXHUxMDgzIFx1MTExMCBcdTEwODIgXHUxMDcyIFx1MTA4OCAiLFwNCiAgICAgICJwYXJ0eSI6XHtcDQogICAgICAgICAiaWQiOiJiMDc1ZjE0OC03ZjkzLTRmYzItYjJlYy0yZDgxYjE5YTliN2IiLFwNCiAgICAgICAgICJmaXJzdF9uYW1lIjoiXHVjMFx1MTA1NSBcdTEwNzcgXHUxMDkwIFx1MTA4OCBcdTEwODYgIixcDQogICAgICAgICAibGFzdF9uYW1lIjoiXHVjMFx1MTAzMCBcdTEwNzQgXHUxMDcyIFx1MTA4NSBcdTEwODYgXHUxMDc0ICIsXA0KICAgICAgICAgInNlY29uZF9uYW1lIjoiXHVjMFx1MTA1MiBcdTEwODAgXHUxMDgyIFx1MTA4NiBcdTEwODMgXHUxMDcyIFx1MTA4MSBcdTEwODYgXHUxMDc0IFx1MTA4MCBcdTEwOTUgIlwNCiAgICAgIFx9XA0KICAgXH0sXA0KICAgIm1zcCI6XHtcDQogICAgICAiaWQiOiJkMjkwZjFlZSIsXA0KICAgICAgIm5hbWUiOiJcdWMwXHUxMDUwIFx1MTA4MyBcdTExMTAgXHUxMDg1IFx1MTExMCBcdTEwODIgXHUxMDcyICBcdTEwNDEgXHUxMDg2IFx1MTA4OCBcdTEwODAgXHUxMDg5ICIsXA0KICAgICAgInNob3J0X05hbWUiOiJcdWMwXHUxMDQxIFx1MTA4NiBcdTEwODggXHUxMDgwIFx1MTA4OSAiLFwNCiAgICAgICJ0eXBlIjoiXHVjMFx1MTA2MCBcdTEwNTQgXHUxMDU1ICIsXA0KICAgICAgImVkcnBvdSI6IjU0MzIzNDU0MzIiXA0KICAgXH0sXA0KICAgInNjb3BlIjoiZmFtaWx5IGRvY3RvciIsXA0KICAgInBsYWludGV4dF9jb250ZW50IjoiRGVjbGFyYXRpb24gY29udGVudCJcDQpcfX2gggIuMIICKjCCAZOgAwIBAgIJANj0sC/v0hWYMA0GCSqGSIb3DQEBBQUAMBkxFzAVBgNVBAMUDlBLQ1MjNyBleGFtcGxlMB4XDTE3MDMyNzE0NTczM1oXDTE3MDQyNjE0NTczM1owGTEXMBUGA1UEAxQOUEtDUyM3IGV4YW1wbGUwgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAMuqrxE/0txT+ZVRKU1O85a8eaaUAOkbcAIy1mMoxQ+UBwcBeXt07Oxu32+p51HSY93Pp5AlDLKE48sjSNvMbTk5vtZ6g8sqMpZxlBVqHLkXLXYBMf2rmtE4hfV6yTP5YUJEs+a9cotsPN0r5KlI9g8aSpIj9Ie8mML5Vh1taQHNAgMBAAGjejB4MB0GA1UdDgQWBBTET2SwL5UfUMKDyhuBGCA+CaflnzBJBgNVHSMEQjBAgBTET2SwL5UfUMKDyhuBGCA+Cafln6EdpBswGTEXMBUGA1UEAxQOUEtDUyM3IGV4YW1wbGWCCQDY9LAv79IVmDAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBBQUAA4GBAF1uOGjUb6IVS28UqZ2qLc/kd2oNU2hOEuAp1YeaKRL2OaG4bTubJO1ejoxCJNfVj0FFw5PXIgjnw87JzkAy5KLDTiotQl8eknkd1bR3nIWINemck3GeGYkR8giG3gkNxz6ky1+63ZcoJkEiS46aneDhmS6BdH0V2G/3delos8+ZMYIBgDCCAXwCAQEwJjAZMRcwFQYDVQQDFA5QS0NTIzcgZXhhbXBsZQIJANj0sC/v0hWYMAkGBSsOAwIaBQCggbEwGAYJKoZIhvcNAQkDMQsGCSqGSIb3DQEHATAcBgkqhkiG9w0BCQUxDxcNMTcwMzI4MTE1NDEwWjAjBgkqhkiG9w0BCQQxFgQU5NSvVRVYHz5tG1GW8gXrjHSnLj8wUgYJKoZIhvcNAQkPMUUwQzAKBggqhkiG9w0DBzAOBggqhkiG9w0DAgICAIAwDQYIKoZIhvcNAwICAUAwBwYFKw4DAgcwDQYIKoZIhvcNAwICASgwDQYJKoZIhvcNAQEBBQAEgYCdqnN8gGXw9OUmtxOvQQgHK5Ni/4/2WQWj7rxERh5AI6rhXs/hh3DNS5Z5mN6wO8z47SQuedbsMQ5hf6+9BbKhXD7WKeU+DtGyfa1ner5/ubz6BeVvuT98D4PrzHlqNSpe/7AirrA70QVO9kPoFSmGtBG6JjaqaCZBYbvF9InPRw==` (string, required)
        + `signed_content_encoding`: base64 (string, required)

+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + data (`Medication_request_Public_Response`)

### Reject Medication Request Request [PATCH /api/medication_request_requests/{id}/actions/reject]

Use this method to reject previously created Medication request Request.

+ Parameters
    + `id`: `a89f6a26-4221-4597-a1d2-542d5e40b565` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + meta (Response__Meta)
        + data (`Medication_request_Request_Public_Response`)

## Medication Request [/api/medication_requests]
### Qualify Medication Request by ID [POST /api/medication_requests/{id}/actions/qualify]

This method is used to qualify (possibility to use Innm for the program) Medication request by Id . Fields descriptions are listed in request Example view.

+ Parameters
    + id: `2848a935-5fd7-48ba-b235-a9b5d475c647` (string, required) - `Medication request identifier`

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

    + Attributes (object)
        + `programs` (array[`Qualify_Medication_request_Request_List_program_post_data`], required) - Medical programs list for qualify
    
+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + meta (Response__Meta)
        +  data (array[`Qualify_by_ID_Request_for_Medication_request_Responce`]))

+ Response 422 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 422
        + error
            + type: unverified (string, required)
            + message: `Only for active MPI record can create medication request!` (string, required)

### Get Medication request by ID [GET /api/medication_requests/{id}]

Use this method to obtain full information of Medication request an `id`.

+ Parameters
    + id: `48416485-cc98-46c4-8bba-e321de9e1ecd` (string, required) - `Medication Request identifier OR request_number`

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
        + data (object)
            + include `Medication_request_Public_Response`

### Get Medication requests List [GET /api/medication_requests{?legal_entity_id,employee_id,person_id,status,request_number,created_from,created_to,medication_id,intent,page,page_size}]

Use this method to obtain list of Medication request an `employee_id` or/and `person_id`. If you want to reduce amount of data that is going trough your application, use `status` filter and show only requests that Doctor is interested in current UI section.

Also we suggest use `employee_id` to make sure that end-user understands context of actions that he or she will perform.

Method returns shortened details, to obtain full information - get Medication request it by it's ID.

+ Parameters
    + `legal_entity_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - legal entity identifier.
    + `employee_id`: `7124259c-eeb1-4cbb-acac-ada2162675d1` (string, optional) - user_id of a doctor.
    + `person_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional) - person_id of a pacient. 
    + `status`: `ACTIVE` (enum, optional). Default `ACTIVE` 
        - ACTIVE
        - COMPLETED
        - EXPIRED
        - REJECTED
    + `request_number` : `0000-243P-1X53-EH38` (string, optional) - Public medication request human readable number
    + `created_from`: `2017-08-17` (string, optional) - Medication request creation date period start, which is determined by the external system. Format *DATE '2017-08-17'*
    + `created_to`: `2017-08-30` (string, optional) - Medication request creation date period end, which is determined by the external system. Format *DATE '2017-08-30'*
    + `medication_id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b5b` (string, optional) - innm dosage id
    + intent: order (string, optional) - Medication request intent
    + page: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
   + Attributes (`Response_Collection_V2`)
        + data (array[`Medication_request_Public_Response`]) 

### Reject Medication Request [PATCH /api/medication_requests/{id}/actions/reject]

Use this method to reject previously created and signed Medication request.

**Important**

Invoke Get Medication request by ID to obtain previously created medication request. In order to reject medication request `reason` should be added.

**Note!** that medication request with intent *plan* and *order* has different structure.

* *Medical program* is required for *order*
* *Medical program* is absent in *plan*

**Signed object example:**
```
{
        "status": "ACTIVE",
        "started_at": "2018-10-19",
        "request_number": "0000-MX87-0X36-01M2",
        "person": {
            "second_name": "Іванович",
            "last_name": "Іванов",
            "id": "34e77202-94d0-45f7-b714-cb581307db26",
            "first_name": "Іван",
            "age": 18
        },
        "medication_info": {
            "medication_qty": 10,
            "medication_name": "Амідарон",
            "medication_id": "2c020fb0-e418-4e5a-b108-3d8a2ab4dfec",
            "form": "COATED_TABLET",
            "dosage": {
                "numerator_value": 300,
                "numerator_unit": "MG",
                "denumerator_value": 1,
                "denumerator_unit": "PILL"
            }
        },
        "medical_program": {
            "name": "Тестова програма",
            "id": "9bedfff4-a642-4bbe-a535-737a9f088f8d"
        },
        "legal_entity": {
            "type": "MSP",
            "status": "ACTIVE",
            "short_name": "Клініка Ноунейм",
            "public_name": "Клініка Ноунейм",
            "name": "Клініка Ноунейм Медікал",
            "id": "c8aadb87-ecb9-41ca-9ad4-ffdfe1dd89c9",
            "edrpou": "11111111"
        },
        "id": "5e8f6b74-76d1-42e2-8a51-a6e8a837c7a0",
        "ended_at": "2018-11-19",
        "employee": {
            "position": "P2",
            "party": {
                "second_name": "Петрович",
                "phones": [
                    {
                        "type": "MOBILE",
                        "number": "+380501234567"
                    }
                ],
                "last_name": "Петров",
                "id": "1816a1ff-40f3-44ea-9665-82ea375e8be0",
                "first_name": "Петро"
            },
            "id": "b810a901-1173-4a56-9f12-75fbe182f162"
        },
        "division": {
            "working_hours": {
                "wed": [
                    [
                        "08.00",
                        "12.00"
                    ],
                    [
                        "14.00",
                        "17.00"
                    ]
                ],
                "tue": [
                    [
                        "08.00",
                        "12.00"
                    ],
                    [
                        "14.00",
                        "17.00"
                    ]
                ],
                "thu": [
                    [
                        "08.00",
                        "12.00"
                    ],
                    [
                        "14.00",
                        "17.00"
                    ]
                ],
                "mon": [
                    [
                        "08.00",
                        "12.00"
                    ],
                    [
                        "14.00",
                        "17.00"
                    ]
                ],
                "fri": [
                    [
                        "08.00",
                        "12.00"
                    ],
                    [
                        "14.00",
                        "16.00"
                    ]
                ]
            },
            "type": "CLINIC",
            "phones": [
                {
                    "type": "MOBILE",
                    "number": "+380501234567"
                }
            ],
            "name": "Відділення клініки Ноунейм",
            "location": {
                "longitude": 31.900939,
                "latitude": 49.180239
            },
            "legal_entity_id": "c8aadb87-ecb9-41ca-9ad4-ffdfe1dd89c9",
            "id": "034b6bbc-53be-477c-919e-d182120a21d8",
            "external_id": "3213213",
            "email": "email@email.com",
            "addresses": [
                {
                    "type": "RESIDENCE",
                    "country": "UA",
                    "area": "Житомирська",
                    "region": "Бердичівський",
                    "settlement": "Київ",
                    "settlement_type": "CITY",
                    "settlement_id": "43432432",
                    "street_type": "STREET",
                    "street": "вул. Ніжинська",
                    "building": "15",
                    "apartment": "23",
                    "zip": "02090"
              }
            ]
        },
        "dispense_valid_to": "2018-11-19",
        "dispense_valid_from": "2018-10-19",
        "created_at": "2018-10-19",
        "reject_reason": "Помилка призначення. Несумісні препарати."
    }
```

+ Parameters
    + `id`: `a89f6a26-4221-4597-a1d2-542d5e40b565` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

    + Attributes (object)
        + `signed_medication_reject`: `MIIWmAYJKoZIhvcNAQcCoIIWiTCCFoUCAQExCzAJBgUrDgMCGgUAMIISuwYJKoZIhvcNAQcBoIISrASCEqh7XHJ0ZjFcYW5zaVxhbnNpY3BnMTI1Mlxjb2NvYXJ0ZjE1MDRcY29jb2FzdWJydGY4MTANCntcZm9udHRibFxmMFxmc3dpc3NcZmNoYXJzZXQwIEhlbHZldGljYTt9DQp7XGNvbG9ydGJsO1xyZWQyNTVcZ3JlZW4yNTVcYmx1ZTI1NTtccmVkNzBcZ3JlZW41M1xibHVlOTY7XHJlZDI0OVxncmVlbjI0OVxibHVlMjUxO30NCntcKlxleHBhbmRlZGNvbG9ydGJsOztcY3NzcmdiXGMzNDUxMFxjMjc4NDNcYzQ1MDk4O1xjc3NyZ2JcYzk4MDM5XGM5ODAzOVxjOTg4MjQ7fQ0KXG1hcmdsMTQ0MFxtYXJncjE0NDBcdmlld3cxMDgwMFx2aWV3aDg0MDBcdmlld2tpbmQwDQpcZGVmdGFiNzIwDQpccGFyZFxwYXJkZWZ0YWI3MjBccGFydGlnaHRlbmZhY3RvcjANCg0KXGYwXGZzMjggXGNmMiBcY2IzIFxleHBuZDBcZXhwbmR0dzBca2VybmluZzANClx7XA0KICAgImlkIjoiYjA3NWYxNDgiLFwNCiAgICJzdGFydF9kYXRlIjoiMjAxNy0wMy0wMlQxMDo0NToxNi4wMDBaIixcDQogICAiZW5kX2RhdGUiOiIyMDE3LTAzLTAyVDEwOjQ1OjE2LjAwMFoiLFwNCiAgICJwZXJzb24iOlx7XA0KICAgICAgImZpcnN0X25hbWUiOiJcdWMwXHUxMDU1IFx1MTA3NyBcdTEwOTAgXHUxMDg4IFx1MTA4NiAiLFwNCiAgICAgICJsYXN0X25hbWUiOiJcdWMwXHUxMDMwIFx1MTA3NCBcdTEwNzIgXHUxMDg1IFx1MTA4NiBcdTEwNzQgIixcDQogICAgICAic2blic Vjb25kX25hbWUiOiJcdWMwXHUxMDUyIFx1MTA4MCBcdTEwODIgXHUxMDg2IFx1MTA4MyBcdTEwNzIgXHUxMDgxIFx1MTA4NiBcdTEwNzQgXHUxMDgwIFx1MTA5NSAiLFwNCiAgICAgICJiaXJ0aF9kYXRlIjoiMTk5MS0wOC0xOVQwMDowMDowMC4wMDBaIixcDQogICAgICAiYmlydGhfcGxhY2UiOiJcdWMwXHUxMDQyIFx1MTExMCBcdTEwODUgXHUxMDg1IFx1MTA4MCBcdTEwOTQgXHUxMTAzICwgXHUxMDU5IFx1MTA4MiBcdTEwODggXHUxMDcyIFx1MTExMSBcdTEwODUgXHUxMDcyICIsXA0KICAgICAgImdlbmRlciI6Ik1BTEUiLFwNCiAgICAgICJlbWFpbCI6ImVtYWlsQGV4YW1wbGUuY29tIixcDQogICAgICAidGF4X2lkIjoiMzEyNjUwOTgxNiIsXA0KICAgICAgIm5hdGlvbmFsX2lkIjoiQ0M3MTUwOTg1MjQzIixcDQogICAgICAic2VjcmV0Ijoic2VjcmV0IixcDQogICAgICAiZG9jdW1lbnRzIjpbXA0KICAgICAgICAgXHtcDQogICAgICAgICAgICAidHlwZSI6IlBBU1NQT1JUIixcDQogICAgICAgICAgICAibnVtYmVyIjoiMTIwNTE4IixcDQogICAgICAgICAgICAiaXNzdWVfZGF0ZSI6IjIwMTUtMDQtMDdUMDA6MDA6MDAuMDAwWiIsXA0KICAgICAgICAgICAgImV4cGlyeV9kYXRlIjoiMjAxNS0wNC0wN1QwMDowMDowMC4wMDBaIixcDQogICAgICAgICAgICAiaXNzdWVkX2J5IjoiRE1TVSJcDQogICAgICAgICBcfVwNCiAgICAgIF0sXA0KICAgICAgImFkZHJlc3NlcyI6W1wNCiAgICAgICAgIFx7XA0KICAgICAgICAgICAgInR5cGUiOiJSRVNJREVOQ0UiLFwNCiAgICAgICAgICAgICJjb3VudHJ5IjoiVUEiLFwNCiAgICAgICAgICAgICJhcmVhIjoiXHVjMFx1MTA0NiBcdTEwODAgXHUxMDkwIFx1MTA4NiBcdTEwODQgXHUxMDgwIFx1MTA4OCBcdTEwODkgXHUxMTAwIFx1MTA4MiBcdTEwNzIgIixcDQogICAgICAgICAgICAicmVnaW9uIjoiXHVjMFx1MTA0MSBcdTEwNzcgXHUxMDg4IFx1MTA3NiBcdTEwODAgXHUxMDk1IFx1MTExMCBcdTEwNzQgXHUxMDg5IFx1MTEwMCBcdTEwODIgXHUxMDgwIFx1MTA4MSAiLFwNCiAgICAgICAgICAgICJjaXR5IjoiXHVjMFx1MTA1MCBcdTEwODAgXHUxMTExIFx1MTA3NCAiLFwNCiAgICAgICAgICAgICJjaXR5X3R5cGUiOiJDSVRZIixcDQogICAgICAgICAgICAic3RyZWV0IjoiXHVjMFx1MTA3NCBcdTEwOTEgXHUxMDgzIC4gXHUxMDUzIFx1MTExMCBcdTEwNzggXHUxMDgwIFx1MTA4NSBcdTEwODkgXHUxMTAwIFx1MTA4MiBcdTEwNzIgIixcDQogICAgICAgICAgICAiYnVpbGRpbmciOiIxNSIsXA0KICAgICAgICAgICAgImFwYXJ0bWVudCI6IjIzIixcDQogICAgICAgICAgICAiemlwIjoiMDIwOTAiXA0KICAgICAgICAgXH1cDQogICAgICBdLFwNCiAgICAgICJwaG9uZXMiOltcDQogICAgICAgICBce1wNCiAgICAgICAgICAgICJ0eXBlIjoiTU9CSUxFIixcDQogICAgICAgICAgICAibnVtYmVyIjoiKzM4MDUwMzQxMDg3MCJcDQogICAgICAgICBcfVwNCiAgICAgIF0sXA0KICAgICAgImF1dGhlbnRpY2F0aW9uX21ldGhvZHMiOltcDQogICAgICAgICBce1wNCiAgICAgICAgICAgICJ0eXBlIjoiU01TIixcDQogICAgICAgICAgICAicGhvbmVfbnVtYmVyIjoiKzM4MDUwODg4NzcwMCJcDQogICAgICAgICBcfVwNCiAgICAgIF0sXA0KICAgICAgImVtZXJnZW5jeV9jb250YWN0Ijpce1wNCiAgICAgICAgICJmaXJzdF9uYW1lIjoiXHVjMFx1MTA1NSBcdTEwNzcgXHUxMDkwIFx1MTA4OCBcdTEwODYgIixcDQogICAgICAgICAibGFzdF9uYW1lIjoiXHVjMFx1MTAzMCBcdTEwNzQgXHUxMDcyIFx1MTA4NSBcdTEwODYgXHUxMDc0ICIsXA0KICAgICAgICAgInNlY29uZF9uYW1lIjoiXHVjMFx1MTA1MiBcdTEwODAgXHUxMDgyIFx1MTA4NiBcdTEwODMgXHUxMDcyIFx1MTA4MSBcdTEwODYgXHUxMDc0IFx1MTA4MCBcdTEwOTUgIixcDQogICAgICAgICAicGhvbmVzIjpbXA0KICAgICAgICAgICAgXHtcDQogICAgICAgICAgICAgICAidHlwZSI6Ik1PQklMRSIsXA0KICAgICAgICAgICAgICAgIm51bWJlciI6IiszODA1MDM0MTA4NzAiXA0KICAgICAgICAgICAgXH1cDQogICAgICAgICBdXA0KICAgICAgXH0sXA0KICAgICAgImNvbmZpZGFudF9wZXJzb24iOlx7XA0KICAgICAgICAgInJlbGF0aW9uX3R5cGUiOiJ0cnVzdGVlIixcDQogICAgICAgICAiZmlyc3RfbmFtZSI6Ilx1YzBcdTEwNTUgXHUxMDc3IFx1MTA5MCBcdTEwODggXHUxMDg2ICIsXA0KICAgICAgICAgImxhc3RfbmFtZSI6Ilx1YzBcdTEwMzAgXHUxMDc0IFx1MTA3MiBcdTEwODUgXHUxMDg2IFx1MTA3NCAiLFwNCiAgICAgICAgICJzZWNvbmRfbmFtZSI6Ilx1YzBcdTEwNTIgXHUxMDgwIFx1MTA4MiBcdTEwODYgXHUxMDgzIFx1MTA3MiBcdTEwODEgXHUxMDg2IFx1MTA3NCBcdTEwODAgXHUxMDk1ICIsXA0KICAgICAgICAgImJpcnRoX2RhdGUiOiIxOTkxLTA4LTE5VDAwOjAwOjAwLjAwMFoiLFwNCiAgICAgICAgICJiaXJ0aF9wbGFjZSI6Ilx1YzBcdTEwNDIgXHUxMTEwIFx1MTA4NSBcdTEwODUgXHUxMDgwIFx1MTA5NCBcdTExMDMgLCBcdTEwNTkgXHUxMDgyIFx1MTA4OCBcdTEwNzIgXHUxMTExIFx1MTA4NSBcdTEwNzIgIixcDQogICAgICAgICAiZ2VuZGVyIjoiTUFMRSIsXA0KICAgICAgICAgInRheF9pZCI6IjMxMjY1MDk4MTYiLFwNCiAgICAgICAgICJkb2N1bWVudHMiOltcDQogICAgICAgICAgICBce1wNCiAgICAgICAgICAgICAgICJ0eXBlIjoiUEFTU1BPUlQiLFwNCiAgICAgICAgICAgICAgICJudW1iZXIiOiIxMjA1MTgiLFwNCiAgICAgICAgICAgICAgICJpc3N1ZV9kYXRlIjoiMjAxNS0wNC0wN1QwMDowMDowMC4wMDBaIixcDQogICAgICAgICAgICAgICAiZXhwaXJ5X2RhdGUiOiIyMDE1LTA0LTA3VDAwOjAwOjAwLjAwMFoiLFwNCiAgICAgICAgICAgICAgICJpc3N1ZWRfYnkiOiJETVNVIlwNCiAgICAgICAgICAgIFx9XA0KICAgICAgICAgXSxcDQogICAgICAgICAicGhvbmVzIjpbXA0KICAgICAgICAgICAgXHtcDQogICAgICAgICAgICAgICAidHlwZSI6Ik1PQklMRSIsXA0KICAgICAgICAgICAgICAgIm51bWJlciI6IiszODA1MDM0MTA4NzAiXA0KICAgICAgICAgICAgXH1cDQogICAgICAgICBdXA0KICAgICAgXH0sXA0KICAgICAgInJlbmV3YWxfY29uc2VudCI6dHJ1ZSxcDQogICAgICAicGF0aWVudF9zaWduZWQiOnRydWUsXA0KICAgICAgImRpc2Nsb3N1cmVfY29uc2VudCI6dHJ1ZSxcDQogICAgICAicHJvY2Vzc19kYXRhX2NvbnNlbnQiOnRydWVcDQogICBcfSxcDQogICAiZW1wbG95ZWUiOlx7XA0KICAgICAgImlkIjoiZDI5MGYxZWUtNmM1NC00YjAxLTkwZTYtZDcwMTc0OGYwODUxIixcDQogICAgICAidGl0bGUiOiJcdWMwXHUxMDgzIFx1MTExMCBcdTEwODIgXHUxMDcyIFx1MTA4OCAiLFwNCiAgICAgICJwYXJ0eSI6XHtcDQogICAgICAgICAiaWQiOiJiMDc1ZjE0OC03ZjkzLTRmYzItYjJlYy0yZDgxYjE5YTliN2IiLFwNCiAgICAgICAgICJmaXJzdF9uYW1lIjoiXHVjMFx1MTA1NSBcdTEwNzcgXHUxMDkwIFx1MTA4OCBcdTEwODYgIixcDQogICAgICAgICAibGFzdF9uYW1lIjoiXHVjMFx1MTAzMCBcdTEwNzQgXHUxMDcyIFx1MTA4NSBcdTEwODYgXHUxMDc0ICIsXA0KICAgICAgICAgInNlY29uZF9uYW1lIjoiXHVjMFx1MTA1MiBcdTEwODAgXHUxMDgyIFx1MTA4NiBcdTEwODMgXHUxMDcyIFx1MTA4MSBcdTEwODYgXHUxMDc0IFx1MTA4MCBcdTEwOTUgIlwNCiAgICAgIFx9XA0KICAgXH0sXA0KICAgIm1zcCI6XHtcDQogICAgICAiaWQiOiJkMjkwZjFlZSIsXA0KICAgICAgIm5hbWUiOiJcdWMwXHUxMDUwIFx1MTA4MyBcdTExMTAgXHUxMDg1IFx1MTExMCBcdTEwODIgXHUxMDcyICBcdTEwNDEgXHUxMDg2IFx1MTA4OCBcdTEwODAgXHUxMDg5ICIsXA0KICAgICAgInNob3J0X05hbWUiOiJcdWMwXHUxMDQxIFx1MTA4NiBcdTEwODggXHUxMDgwIFx1MTA4OSAiLFwNCiAgICAgICJ0eXBlIjoiXHVjMFx1MTA2MCBcdTEwNTQgXHUxMDU1ICIsXA0KICAgICAgImVkcnBvdSI6IjU0MzIzNDU0MzIiXA0KICAgXH0sXA0KICAgInNjb3BlIjoiZmFtaWx5IGRvY3RvciIsXA0KICAgInBsYWludGV4dF9jb250ZW50IjoiRGVjbGFyYXRpb24gY29udGVudCJcDQpcfX2gggIuMIICKjCCAZOgAwIBAgIJANj0sC/v0hWYMA0GCSqGSIb3DQEBBQUAMBkxFzAVBgNVBAMUDlBLQ1MjNyBleGFtcGxlMB4XDTE3MDMyNzE0NTczM1oXDTE3MDQyNjE0NTczM1owGTEXMBUGA1UEAxQOUEtDUyM3IGV4YW1wbGUwgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAMuqrxE/0txT+ZVRKU1O85a8eaaUAOkbcAIy1mMoxQ+UBwcBeXt07Oxu32+p51HSY93Pp5AlDLKE48sjSNvMbTk5vtZ6g8sqMpZxlBVqHLkXLXYBMf2rmtE4hfV6yTP5YUJEs+a9cotsPN0r5KlI9g8aSpIj9Ie8mML5Vh1taQHNAgMBAAGjejB4MB0GA1UdDgQWBBTET2SwL5UfUMKDyhuBGCA+CaflnzBJBgNVHSMEQjBAgBTET2SwL5UfUMKDyhuBGCA+Cafln6EdpBswGTEXMBUGA1UEAxQOUEtDUyM3IGV4YW1wbGWCCQDY9LAv79IVmDAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBBQUAA4GBAF1uOGjUb6IVS28UqZ2qLc/kd2oNU2hOEuAp1YeaKRL2OaG4bTubJO1ejoxCJNfVj0FFw5PXIgjnw87JzkAy5KLDTiotQl8eknkd1bR3nIWINemck3GeGYkR8giG3gkNxz6ky1+63ZcoJkEiS46aneDhmS6BdH0V2G/3delos8+ZMYIBgDCCAXwCAQEwJjAZMRcwFQYDVQQDFA5QS0NTIzcgZXhhbXBsZQIJANj0sC/v0hWYMAkGBSsOAwIaBQCggbEwGAYJKoZIhvcNAQkDMQsGCSqGSIb3DQEHATAcBgkqhkiG9w0BCQUxDxcNMTcwMzI4MTE1NDEwWjAjBgkqhkiG9w0BCQQxFgQU5NSvVRVYHz5tG1GW8gXrjHSnLj8wUgYJKoZIhvcNAQkPMUUwQzAKBggqhkiG9w0DBzAOBggqhkiG9w0DAgICAIAwDQYIKoZIhvcNAwICAUAwBwYFKw4DAgcwDQYIKoZIhvcNAwICASgwDQYJKoZIhvcNAQEBBQAEgYCdqnN8gGXw9OUmtxOvQQgHK5Ni/4/2WQWj7rxERh5AI6rhXs/hh3DNS5Z5mN6wO8z47SQuedbsMQ5hf6+9BbKhXD7WKeU+DtGyfa1ner5/ubz6BeVvuT98D4PrzHlqNSpe/7AirrA70QVO9kPoFSmGtBG6JjaqaCZBYbvF9InPRw==` (string, required)
        + `signed_content_encoding`: base64 (string, required)
        
+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + meta (Response__Meta)
        + data (`Medication_request_Public_Response`)
            + `rejected_at`: `2017-04-20T19:14:13Z` (string, required) - Reject date - ISO 8601 date and time in UTC timezone.
            + `rejected_by`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required) - Rejected user identifier
            + `reject_reason` : `Помилка призначення. Несумісні препарати.` (string, required) - Medication request reject reason 

### Resend Medication Request [PATCH /api/medication_requests/{id}/actions/resend]

Use this method to resend SMS to person with medication request number & verification code. This could be done only for medication request with type **order**


+ Parameters
    + `id`: `a89f6a26-4221-4597-a1d2-542d5e40b565` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + meta (Response__Meta)
        + data (`Medication_request_Public_Response`)

### Get Medication Dispenses list by Medication Request ID [GET /api/medication_requests/{id}/dispenses{?status}]

Use this method to obtain list of Medication Dispenses by doctor with medication request ID. 

Only Medication dispenses linked to medication request id will be shown. If you want to reduce amount of data that is going trough your application, use `status` filter and show only dispenses that Doctor is interested in.

+ Parameters
    + `id`: `a89f6a26-4221-4597-a1d2-542d5e40b565` (string, required)
    + status: PROCESSED (string, optional) - Status

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array[Medication_Dispense_Response])

## Medication Dispense [/api/medication_dispenses]

Medication Dispense - Indicates that a medication product has been dispensed for a named person/patient

1. Dispense of medication is possible only under Medication Request and during the period specified in Medication Request

2. **Medical program** - mandatory attribute for the first phase. There is no options to dispense medication without program

3. **Dispense details** - several medications of different manufacturers with the same innm can be dispensed at a time. Total of medication_qty should be less or equal to medication quantity specified in Medication Request

**Sequence diagram**

![Medication Dispense Sequence](https://www.websequencediagrams.com/cgi-bin/cdraw?lz=dGl0bGUgUHJvY2VzcyBtZWRpY2F0aW9uIERpc3BlbnNlCgpQaGFybWFjeS0-R1c6IENyZWF0ZQAeDGQAIghHVwAdBkF1dGhvcml6AAwGRUhlYWx0aAAdHQAdBwAiC1ZlcmlmeQABLHkAgQAJIHBlcmlvZAA8GnJlcXVlc3RlZCBwcm9ncmFtAF0kAIESE0dldCByZWltYnVzZW1lbnQgcmF0AIFCCwCCMQg6IFJlc3BvAIJIBWFsdACCZQlNAIJbEyAgICAAgmcKADgKU2lnbgCCYBUAIw5HVzoAgzkUACENAIMVEgAOCACDIgkAIyAAgxcZRFMgAAoXQ2hhbmcAhCMVIHN0YXR1cwAPKQCDNwcAIhUAgmATZWxzZSBSZWplY3QAgk8jR1c6ACUIAIIFOwAjHwCBXUEAgVMUbmQKCg&s=modern-blue)

### Create Medication Dispense [POST /api/medication_dispenses{?code}]

This method is used to dispense medications to patient
Full list of all validations can be found [here](https://edenlab.atlassian.net/wiki/x/-Jcz)

+ Parameters
    + `code`: `3114` (string, optional)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
    
    + Attributes (object)
        + medication_dispense (object)
            + include `Medication_Dispense_Request`

+ Response 201 (application/json)
    + Attributes (Response__Process_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (`Medication_Dispense_Response`)

+ Response 409 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 409 (number)
        + error (Response__Error)
            + message: `Invalid division dls status` (string)
            + type: `request_conflict` (string)

### Process Medication Dispense [PATCH /api/medication_dispenses/{id}/actions/process]

This method is used to process created dispense

**Important**
Invoke Get Medication dispanse details to obtain previously created medication dispense. In order to process dispense `payment_id (optional)` and `payment_amount` should be added. 

**Signed object example:**
```
{
    "id": "b075f148-7f93-4fc2-b2ec-2d81b19a9b7b",
    "medication_request": {
      "id": "b075f148-7f93-4fc2-b2ec-2d81b19a9b7b",
      "status": "ACTIVE",
      "request_number": "0000-243P-1X53-EH38",
      "created_at": "2017-08-17",
      "started_at": "2017-08-17",
      "ended_at": "2017-09-16",
      "dispense_valid_from": "2017-08-17",
      "dispense_valid_to": "2017-09-16",
      "legal_entity": {
        "id": "b075f148-7f93-4fc2-b2ec-2d81b19a9b7b",
        "name": "Клініка Ноунейм",
        "short_name": "Ноунейм",
        "public_name": "Клініка Ноунейм",
        "type": "MSP",
        "edrpou": "5432345432",
        "status": "ACTIVE"
      },
      "division": {
        "id": "d290f1ee-6c54-4b01-90e6-d701748f0851",
        "legal_entity_id": "c8aadb87-ecb9-41ca-9ad4-ffdfe1dd89c9",
        "name": "Бориспільське відділення Клініки Ноунейм",
        "addresses": [
          {
            "type": "RESIDENCE",
            "country": "UA",
            "area": "Житомирська",
            "region": "Бердичівський",
            "settlement": "Київ",
            "settlement_type": "CITY",
            "settlement_id": "43432432",
            "street_type": "STREET",
            "street": "вул. Ніжинська",
            "building": "15",
            "apartment": "23",
            "zip": "02090"
          }
        ],
        "phones": [
          {
            "type": "MOBILE",
            "number": "+380503410870"
          }
        ],
        "email": "email@example.com",
        "working_hours": {
          "mon": [
            [
              "08.00",
              "12.00"
            ],
            [
              "14.00",
              "18.00"
            ]
          ],
          "tue": [
            [
              "08.00",
              "12.00"
            ]
          ],
          "wed": [
            [
              "08.00",
              "12.00"
            ]
          ],
          "thu": [
            [
              "08.00",
              "12.00"
            ]
          ],
          "fri": [
            [
              "08.00",
              "12.00"
            ]
          ],
          "sat": [],
          "sun": []
        },
        "type": "clinic",
        "external_id": "3213213",
        "location": {
          "latitude": 30.1233,
          "longitude": 50.32423
        }
      },
      "employee": {
        "id": "d290f1ee-6c54-4b01-90e6-d701748f0851",
        "position": "P6",
        "party": {
          "id": "b075f148-7f93-4fc2-b2ec-2d81b19a9b7b",
          "no_tax_id": true,
          "first_name": "Петро",
          "last_name": "Іванов",
          "second_name": "Миколайович",
          "email": "email@example.com",
          "phones": [
            {
              "type": "MOBILE",
              "number": "+380503410870"
            }
          ]
        }
      },
      "person": {
        "id": "b075f148-7f93-4fc2-b2ec-2d81b19a9b7b",
        "first_name": "Петро",
        "last_name": "Іванов",
        "second_name": "Миколайович",
        "age": 35
      },
      "medication_info": {
        "medication_id": "4a63b858-c138-4921-9341-ae9e384bcbd6",
        "medication_name": "Аміодарон 200мг таблетки",
        "form": "PILL",
        "dosage": {
          "numerator_unit": "MG",
          "numerator_value": 200,
          "denumerator_unit": "PILL",
          "denumerator_value": 1
        },
        "medication_qty": 10
      },
      "medical_program": {
        "id": "59781de0-2e64-4359-b716-bcc05a32c10f",
        "name": "program 'DOSTUPNI LIKI'"
      }
    },
    "dispensed_at": "2017-08-17",
    "dispensed_by": "Іванов Іван Іванович",
    "party": {
      "id": "b075f148-7f93-4fc2-b2ec-2d81b19a9b7b",
      "first_name": "Петро",
      "last_name": "Іванов",
      "second_name": "Миколайович"
    },
    "legal_entity": {
      "id": "b075f148-7f93-4fc2-b2ec-2d81b19a9b7b",
      "name": "Клініка Ноунейм",
      "short_name": "Ноунейм",
      "public_name": "Клініка Ноунейм",
      "type": "MSP",
      "edrpou": "5432345432",
      "status": "ACTIVE"
    },
    "division": {
      "id": "d290f1ee-6c54-4b01-90e6-d701748f0851",
      "name": "Бориспільське відділення Клініки Ноунейм",
      "legal_entity_id": "d290f1ee",
      "type": "CLINIC",
      "status": "ACTIVE",
      "mountain_group": false
    },
    "medical_program": {
      "id": "59781de0-2e64-4359-b716-bcc05a32c10f",
      "name": "program 'DOSTUPNI LIKI'"
    },
    "details": [
      {
        "medication": {
          "name": "Амідарон",
          "type": "MEDICATION",
          "manufacturer": {
            "name": "ПАТ \"Київський вітамінний завод\"",
            "country": "UA"
          },
          "form": "PILL",
          "container": {
            "numerator_unit": "PILL",
            "numerator_value": 1,
            "denumerator_unit": "PILL",
            "denumerator_value": 1
          }
        },
        "medication_qty": 10,
        "sell_price": 18.65,
        "sell_amount": 186.5,
        "discount_amount": 150,
        "reimbursement_amount": 450
      }
    ],
    "status": "NEW",
    "inserted_at": "2017-04-20T19:14:13Z",
    "inserted_by": "e1453f4c-1077-4e85-8c98-c13ffca0063e",
    "updated_at": "2017-04-20T19:14:13Z",
    "updated_by": "2922a240-63db-404e-b730-09222bfeb2dd",
    "payment_id": "1239804",
    "payment_amount": 50
}
```

+ Parameters
    + `id`: `a89f6a26-4221-4597-a1d2-542d5e40b565` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
    
    + Attributes (object)
        + `signed_medication_dispense`: `MIIWmAYJKoZIhvcNAQcCoIIWiTCCFoUCAQExCzAJBgUrDgMCGgUAMIISuwYJKoZIhvcNAQcBoIISrASCEqh7XHJ0ZjFcYW5zaVxhbnNpY3BnMTI1Mlxjb2NvYXJ0ZjE1MDRcY29jb2FzdWJydGY4MTANCntcZm9udHRibFxmMFxmc3dpc3NcZmNoYXJzZXQwIEhlbHZldGljYTt9DQp7XGNvbG9ydGJsO1xyZWQyNTVcZ3JlZW4yNTVcYmx1ZTI1NTtccmVkNzBcZ3JlZW41M1xibHVlOTY7XHJlZDI0OVxncmVlbjI0OVxibHVlMjUxO30NCntcKlxleHBhbmRlZGNvbG9ydGJsOztcY3NzcmdiXGMzNDUxMFxjMjc4NDNcYzQ1MDk4O1xjc3NyZ2JcYzk4MDM5XGM5ODAzOVxjOTg4MjQ7fQ0KXG1hcmdsMTQ0MFxtYXJncjE0NDBcdmlld3cxMDgwMFx2aWV3aDg0MDBcdmlld2tpbmQwDQpcZGVmdGFiNzIwDQpccGFyZFxwYXJkZWZ0YWI3MjBccGFydGlnaHRlbmZhY3RvcjANCg0KXGYwXGZzMjggXGNmMiBcY2IzIFxleHBuZDBcZXhwbmR0dzBca2VybmluZzANClx7XA0KICAgImlkIjoiYjA3NWYxNDgiLFwNCiAgICJzdGFydF9kYXRlIjoiMjAxNy0wMy0wMlQxMDo0NToxNi4wMDBaIixcDQogICAiZW5kX2RhdGUiOiIyMDE3LTAzLTAyVDEwOjQ1OjE2LjAwMFoiLFwNCiAgICJwZXJzb24iOlx7XA0KICAgICAgImZpcnN0X25hbWUiOiJcdWMwXHUxMDU1IFx1MTA3NyBcdTEwOTAgXHUxMDg4IFx1MTA4NiAiLFwNCiAgICAgICJsYXN0X25hbWUiOiJcdWMwXHUxMDMwIFx1MTA3NCBcdTEwNzIgXHUxMDg1IFx1MTA4NiBcdTEwNzQgIixcDQogICAgICAic2blic Vjb25kX25hbWUiOiJcdWMwXHUxMDUyIFx1MTA4MCBcdTEwODIgXHUxMDg2IFx1MTA4MyBcdTEwNzIgXHUxMDgxIFx1MTA4NiBcdTEwNzQgXHUxMDgwIFx1MTA5NSAiLFwNCiAgICAgICJiaXJ0aF9kYXRlIjoiMTk5MS0wOC0xOVQwMDowMDowMC4wMDBaIixcDQogICAgICAiYmlydGhfcGxhY2UiOiJcdWMwXHUxMDQyIFx1MTExMCBcdTEwODUgXHUxMDg1IFx1MTA4MCBcdTEwOTQgXHUxMTAzICwgXHUxMDU5IFx1MTA4MiBcdTEwODggXHUxMDcyIFx1MTExMSBcdTEwODUgXHUxMDcyICIsXA0KICAgICAgImdlbmRlciI6Ik1BTEUiLFwNCiAgICAgICJlbWFpbCI6ImVtYWlsQGV4YW1wbGUuY29tIixcDQogICAgICAidGF4X2lkIjoiMzEyNjUwOTgxNiIsXA0KICAgICAgIm5hdGlvbmFsX2lkIjoiQ0M3MTUwOTg1MjQzIixcDQogICAgICAic2VjcmV0Ijoic2VjcmV0IixcDQogICAgICAiZG9jdW1lbnRzIjpbXA0KICAgICAgICAgXHtcDQogICAgICAgICAgICAidHlwZSI6IlBBU1NQT1JUIixcDQogICAgICAgICAgICAibnVtYmVyIjoiMTIwNTE4IixcDQogICAgICAgICAgICAiaXNzdWVfZGF0ZSI6IjIwMTUtMDQtMDdUMDA6MDA6MDAuMDAwWiIsXA0KICAgICAgICAgICAgImV4cGlyeV9kYXRlIjoiMjAxNS0wNC0wN1QwMDowMDowMC4wMDBaIixcDQogICAgICAgICAgICAiaXNzdWVkX2J5IjoiRE1TVSJcDQogICAgICAgICBcfVwNCiAgICAgIF0sXA0KICAgICAgImFkZHJlc3NlcyI6W1wNCiAgICAgICAgIFx7XA0KICAgICAgICAgICAgInR5cGUiOiJSRVNJREVOQ0UiLFwNCiAgICAgICAgICAgICJjb3VudHJ5IjoiVUEiLFwNCiAgICAgICAgICAgICJhcmVhIjoiXHVjMFx1MTA0NiBcdTEwODAgXHUxMDkwIFx1MTA4NiBcdTEwODQgXHUxMDgwIFx1MTA4OCBcdTEwODkgXHUxMTAwIFx1MTA4MiBcdTEwNzIgIixcDQogICAgICAgICAgICAicmVnaW9uIjoiXHVjMFx1MTA0MSBcdTEwNzcgXHUxMDg4IFx1MTA3NiBcdTEwODAgXHUxMDk1IFx1MTExMCBcdTEwNzQgXHUxMDg5IFx1MTEwMCBcdTEwODIgXHUxMDgwIFx1MTA4MSAiLFwNCiAgICAgICAgICAgICJjaXR5IjoiXHVjMFx1MTA1MCBcdTEwODAgXHUxMTExIFx1MTA3NCAiLFwNCiAgICAgICAgICAgICJjaXR5X3R5cGUiOiJDSVRZIixcDQogICAgICAgICAgICAic3RyZWV0IjoiXHVjMFx1MTA3NCBcdTEwOTEgXHUxMDgzIC4gXHUxMDUzIFx1MTExMCBcdTEwNzggXHUxMDgwIFx1MTA4NSBcdTEwODkgXHUxMTAwIFx1MTA4MiBcdTEwNzIgIixcDQogICAgICAgICAgICAiYnVpbGRpbmciOiIxNSIsXA0KICAgICAgICAgICAgImFwYXJ0bWVudCI6IjIzIixcDQogICAgICAgICAgICAiemlwIjoiMDIwOTAiXA0KICAgICAgICAgXH1cDQogICAgICBdLFwNCiAgICAgICJwaG9uZXMiOltcDQogICAgICAgICBce1wNCiAgICAgICAgICAgICJ0eXBlIjoiTU9CSUxFIixcDQogICAgICAgICAgICAibnVtYmVyIjoiKzM4MDUwMzQxMDg3MCJcDQogICAgICAgICBcfVwNCiAgICAgIF0sXA0KICAgICAgImF1dGhlbnRpY2F0aW9uX21ldGhvZHMiOltcDQogICAgICAgICBce1wNCiAgICAgICAgICAgICJ0eXBlIjoiU01TIixcDQogICAgICAgICAgICAicGhvbmVfbnVtYmVyIjoiKzM4MDUwODg4NzcwMCJcDQogICAgICAgICBcfVwNCiAgICAgIF0sXA0KICAgICAgImVtZXJnZW5jeV9jb250YWN0Ijpce1wNCiAgICAgICAgICJmaXJzdF9uYW1lIjoiXHVjMFx1MTA1NSBcdTEwNzcgXHUxMDkwIFx1MTA4OCBcdTEwODYgIixcDQogICAgICAgICAibGFzdF9uYW1lIjoiXHVjMFx1MTAzMCBcdTEwNzQgXHUxMDcyIFx1MTA4NSBcdTEwODYgXHUxMDc0ICIsXA0KICAgICAgICAgInNlY29uZF9uYW1lIjoiXHVjMFx1MTA1MiBcdTEwODAgXHUxMDgyIFx1MTA4NiBcdTEwODMgXHUxMDcyIFx1MTA4MSBcdTEwODYgXHUxMDc0IFx1MTA4MCBcdTEwOTUgIixcDQogICAgICAgICAicGhvbmVzIjpbXA0KICAgICAgICAgICAgXHtcDQogICAgICAgICAgICAgICAidHlwZSI6Ik1PQklMRSIsXA0KICAgICAgICAgICAgICAgIm51bWJlciI6IiszODA1MDM0MTA4NzAiXA0KICAgICAgICAgICAgXH1cDQogICAgICAgICBdXA0KICAgICAgXH0sXA0KICAgICAgImNvbmZpZGFudF9wZXJzb24iOlx7XA0KICAgICAgICAgInJlbGF0aW9uX3R5cGUiOiJ0cnVzdGVlIixcDQogICAgICAgICAiZmlyc3RfbmFtZSI6Ilx1YzBcdTEwNTUgXHUxMDc3IFx1MTA5MCBcdTEwODggXHUxMDg2ICIsXA0KICAgICAgICAgImxhc3RfbmFtZSI6Ilx1YzBcdTEwMzAgXHUxMDc0IFx1MTA3MiBcdTEwODUgXHUxMDg2IFx1MTA3NCAiLFwNCiAgICAgICAgICJzZWNvbmRfbmFtZSI6Ilx1YzBcdTEwNTIgXHUxMDgwIFx1MTA4MiBcdTEwODYgXHUxMDgzIFx1MTA3MiBcdTEwODEgXHUxMDg2IFx1MTA3NCBcdTEwODAgXHUxMDk1ICIsXA0KICAgICAgICAgImJpcnRoX2RhdGUiOiIxOTkxLTA4LTE5VDAwOjAwOjAwLjAwMFoiLFwNCiAgICAgICAgICJiaXJ0aF9wbGFjZSI6Ilx1YzBcdTEwNDIgXHUxMTEwIFx1MTA4NSBcdTEwODUgXHUxMDgwIFx1MTA5NCBcdTExMDMgLCBcdTEwNTkgXHUxMDgyIFx1MTA4OCBcdTEwNzIgXHUxMTExIFx1MTA4NSBcdTEwNzIgIixcDQogICAgICAgICAiZ2VuZGVyIjoiTUFMRSIsXA0KICAgICAgICAgInRheF9pZCI6IjMxMjY1MDk4MTYiLFwNCiAgICAgICAgICJkb2N1bWVudHMiOltcDQogICAgICAgICAgICBce1wNCiAgICAgICAgICAgICAgICJ0eXBlIjoiUEFTU1BPUlQiLFwNCiAgICAgICAgICAgICAgICJudW1iZXIiOiIxMjA1MTgiLFwNCiAgICAgICAgICAgICAgICJpc3N1ZV9kYXRlIjoiMjAxNS0wNC0wN1QwMDowMDowMC4wMDBaIixcDQogICAgICAgICAgICAgICAiZXhwaXJ5X2RhdGUiOiIyMDE1LTA0LTA3VDAwOjAwOjAwLjAwMFoiLFwNCiAgICAgICAgICAgICAgICJpc3N1ZWRfYnkiOiJETVNVIlwNCiAgICAgICAgICAgIFx9XA0KICAgICAgICAgXSxcDQogICAgICAgICAicGhvbmVzIjpbXA0KICAgICAgICAgICAgXHtcDQogICAgICAgICAgICAgICAidHlwZSI6Ik1PQklMRSIsXA0KICAgICAgICAgICAgICAgIm51bWJlciI6IiszODA1MDM0MTA4NzAiXA0KICAgICAgICAgICAgXH1cDQogICAgICAgICBdXA0KICAgICAgXH0sXA0KICAgICAgInJlbmV3YWxfY29uc2VudCI6dHJ1ZSxcDQogICAgICAicGF0aWVudF9zaWduZWQiOnRydWUsXA0KICAgICAgImRpc2Nsb3N1cmVfY29uc2VudCI6dHJ1ZSxcDQogICAgICAicHJvY2Vzc19kYXRhX2NvbnNlbnQiOnRydWVcDQogICBcfSxcDQogICAiZW1wbG95ZWUiOlx7XA0KICAgICAgImlkIjoiZDI5MGYxZWUtNmM1NC00YjAxLTkwZTYtZDcwMTc0OGYwODUxIixcDQogICAgICAidGl0bGUiOiJcdWMwXHUxMDgzIFx1MTExMCBcdTEwODIgXHUxMDcyIFx1MTA4OCAiLFwNCiAgICAgICJwYXJ0eSI6XHtcDQogICAgICAgICAiaWQiOiJiMDc1ZjE0OC03ZjkzLTRmYzItYjJlYy0yZDgxYjE5YTliN2IiLFwNCiAgICAgICAgICJmaXJzdF9uYW1lIjoiXHVjMFx1MTA1NSBcdTEwNzcgXHUxMDkwIFx1MTA4OCBcdTEwODYgIixcDQogICAgICAgICAibGFzdF9uYW1lIjoiXHVjMFx1MTAzMCBcdTEwNzQgXHUxMDcyIFx1MTA4NSBcdTEwODYgXHUxMDc0ICIsXA0KICAgICAgICAgInNlY29uZF9uYW1lIjoiXHVjMFx1MTA1MiBcdTEwODAgXHUxMDgyIFx1MTA4NiBcdTEwODMgXHUxMDcyIFx1MTA4MSBcdTEwODYgXHUxMDc0IFx1MTA4MCBcdTEwOTUgIlwNCiAgICAgIFx9XA0KICAgXH0sXA0KICAgIm1zcCI6XHtcDQogICAgICAiaWQiOiJkMjkwZjFlZSIsXA0KICAgICAgIm5hbWUiOiJcdWMwXHUxMDUwIFx1MTA4MyBcdTExMTAgXHUxMDg1IFx1MTExMCBcdTEwODIgXHUxMDcyICBcdTEwNDEgXHUxMDg2IFx1MTA4OCBcdTEwODAgXHUxMDg5ICIsXA0KICAgICAgInNob3J0X05hbWUiOiJcdWMwXHUxMDQxIFx1MTA4NiBcdTEwODggXHUxMDgwIFx1MTA4OSAiLFwNCiAgICAgICJ0eXBlIjoiXHVjMFx1MTA2MCBcdTEwNTQgXHUxMDU1ICIsXA0KICAgICAgImVkcnBvdSI6IjU0MzIzNDU0MzIiXA0KICAgXH0sXA0KICAgInNjb3BlIjoiZmFtaWx5IGRvY3RvciIsXA0KICAgInBsYWludGV4dF9jb250ZW50IjoiRGVjbGFyYXRpb24gY29udGVudCJcDQpcfX2gggIuMIICKjCCAZOgAwIBAgIJANj0sC/v0hWYMA0GCSqGSIb3DQEBBQUAMBkxFzAVBgNVBAMUDlBLQ1MjNyBleGFtcGxlMB4XDTE3MDMyNzE0NTczM1oXDTE3MDQyNjE0NTczM1owGTEXMBUGA1UEAxQOUEtDUyM3IGV4YW1wbGUwgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAMuqrxE/0txT+ZVRKU1O85a8eaaUAOkbcAIy1mMoxQ+UBwcBeXt07Oxu32+p51HSY93Pp5AlDLKE48sjSNvMbTk5vtZ6g8sqMpZxlBVqHLkXLXYBMf2rmtE4hfV6yTP5YUJEs+a9cotsPN0r5KlI9g8aSpIj9Ie8mML5Vh1taQHNAgMBAAGjejB4MB0GA1UdDgQWBBTET2SwL5UfUMKDyhuBGCA+CaflnzBJBgNVHSMEQjBAgBTET2SwL5UfUMKDyhuBGCA+Cafln6EdpBswGTEXMBUGA1UEAxQOUEtDUyM3IGV4YW1wbGWCCQDY9LAv79IVmDAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBBQUAA4GBAF1uOGjUb6IVS28UqZ2qLc/kd2oNU2hOEuAp1YeaKRL2OaG4bTubJO1ejoxCJNfVj0FFw5PXIgjnw87JzkAy5KLDTiotQl8eknkd1bR3nIWINemck3GeGYkR8giG3gkNxz6ky1+63ZcoJkEiS46aneDhmS6BdH0V2G/3delos8+ZMYIBgDCCAXwCAQEwJjAZMRcwFQYDVQQDFA5QS0NTIzcgZXhhbXBsZQIJANj0sC/v0hWYMAkGBSsOAwIaBQCggbEwGAYJKoZIhvcNAQkDMQsGCSqGSIb3DQEHATAcBgkqhkiG9w0BCQUxDxcNMTcwMzI4MTE1NDEwWjAjBgkqhkiG9w0BCQQxFgQU5NSvVRVYHz5tG1GW8gXrjHSnLj8wUgYJKoZIhvcNAQkPMUUwQzAKBggqhkiG9w0DBzAOBggqhkiG9w0DAgICAIAwDQYIKoZIhvcNAwICAUAwBwYFKw4DAgcwDQYIKoZIhvcNAwICASgwDQYJKoZIhvcNAQEBBQAEgYCdqnN8gGXw9OUmtxOvQQgHK5Ni/4/2WQWj7rxERh5AI6rhXs/hh3DNS5Z5mN6wO8z47SQuedbsMQ5hf6+9BbKhXD7WKeU+DtGyfa1ner5/ubz6BeVvuT98D4PrzHlqNSpe/7AirrA70QVO9kPoFSmGtBG6JjaqaCZBYbvF9InPRw==` (string, required)
        + `signed_content_encoding`: base64 (string, required)
        

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (object)
            + include `Medication_Dispense_Response`

### Reject Medication Dispense [PATCH /api/medication_dispenses/{id}/actions/reject]

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (object)
            + include `Medication_Dispense_Response`

### Get Medication Dispenses List [GET /api/medication_dispenses{?id,medication_request_id,legal_entity_id,division_id,status,dispensed_from,dispensed_to,page,page_size}]

+ Parameters
    + id: `a89f6a26-4221-4597-a1d2-542d5e40b565` (string, optional) - Medication dispense ID
    + medication_request_id: `a89f6a26-4221-4597-a1d2-542d5e40b565` (string, optional) - Medication request ID
    + legal_entity_id: `a89f6a26-4221-4597-a1d2-542d5e40b565` (string, optional) - Legal entity ID
    + division_id: `a89f6a26-4221-4597-a1d2-542d5e40b565` (string, optional) - Division ID
    + status: PROCESSED (string, optional) - Status
    + dispensed_from: '2017-09-01' (string, optional) - date of dispense
    + dispensed_to: '2017-10-01' (string, optional) - date of dispense
    + page: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50


+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array)
            + (object)
                + include `Medication_Dispense_Response`

### Get Medication Dispense by ID [GET /api/medication_dispenses/{id}]

+ Parameters
    + `id`: `a89f6a26-4221-4597-a1d2-542d5e40b565` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (object)
            + include `Medication_Dispense_Response`

## Reimbursement Report [/api/reimbursement_report]

Reimbursement Report combines information about Medication requests and corresponding Medication Dispenses

**Scopes required:** `reimbursement_report:read`

1. **MIS (OWNER)** is allowed to see Medication Requests made by its' legal_entity and related to those Medication Requests Medication Dispenses

2. **PHARMACY (PHARAMCY_OWNER)** - is allowed to see Medication Dispenses made by its' legal_entity and related to those Medication Dispenses Medication Requests.

### Get Reimbursement Report [GET /api/reimbursement_report{?date_from_request,date_to_request,date_from_dispense,date_to_dispense,page,page_size}]

+ Parameters
    + date_from_request: `2017-09-01` (date, optional) - Start date for Medication Requests created date
    + date_to_request: `2017-10-01` (date, optional) - End date for Medication Requests created date
    + date_from_dispense: `2017-09-01` (date, optional) - Start date for Medication Dispense disbursed_at date
    + date_to_dispense: `2017-10-01` (date, optional) - End date for Medication Dispense disbursed_at date
    + page: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned. Maximum: 500


+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
         + data (array[`Reimbursement_Report_Response`])

## Reimbursement Report for NHS admin [/api/reimbursement_report_download]

Reimbursement Report combines information about Medication Dispenses and corresponding Medication Requests

**Scopes required:** `reimbursement_report:download`


### Get Reimbursement Report [GET /api/reimbursement_report_download{?date_from_dispense,date_to_dispense}]

+ Parameters
    + date_from_dispense: `2017-09-01` (date, optional) - Start date for Medication Dispense disbursed_at date
    + date_to_dispense: `2017-10-01` (date, optional) - End date for Medication Dispense disbursed_at date

+ Request (application/json)
    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (text/csv;charset=UTF-8)

# Group Public. Event Manager

Event Manager is used to collect different events (like `ATTRIBUTE_CHANGED`, `OBJECT_ADDED` etc) from different sources and store them in one place. At the moment only statuses are monitored. All changed statuses are stored to EventDB.

Event types
- StatusChangeEvent
- StateChangeEvent

List of events that are stored to EventDB:
- employee request status changed
- employee status changed
- declaration status changed
- medication request status changed
- medication dispense status changed
- contract_request status change
- contract status change
- person status change
- contract's is_suspended change

Entity_type variants:
- Declaration
- MedicationDispense
- EmployeeRequest
- MedicationRequest
- Employee
- ContractRequest
- Contract
- Person

In the EventDB events are kept during one month or till 10K. The duration and amount of events are parametrized.

## Get Events

### Get events by ID [GET /api/events/{id}]

This method is used to obtain events by id. 

+ Parameters
    + `id`: `a89f6a26-4221-4597-a1d2-542d5e40b565` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
         + data (array[`Get_events`])

### Get events list [GET /api/events/{?date,event_type,entity_type,attribute_name,new_value,page,page_size}]

This method is used to abtain list of events with filters.

+ Parameters
    + date: `2017-12-06T15:00:00` (datetime, optional) - evets created between datetime and now.
    + event_type: `StatusChangeEvent` (enum, optional) - type of event.
    + entity_type: `MedicationDispense` (enum, optional) - type of entity.
    + attribute_name: `status` (string, optional) - name of event in properties.
    + new_value: `COMPLETED` (enum, optional)- new status of entity.
    + page: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned. Maximum: 500

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
         + data (array[`Get_events`])

# Group Dummy. Create legal entity

## Dummy for legal entity [/dummy/legal_entities]

### Create/Update Legal Entity [PUT]

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

    + Attributes (object)
        + include Legal_Entity_Request_Public

+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + data (object)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + include Legal_Entity_Request_Public
            + status: VERIFIED (enum, required)
                - VERIFIED
                - DECLINED
                - VERIFICATION_EXP
        + urgent (object, optional)
            + security (object)
                + `secret_key`: `secret_key` (string, required)
                + `client_id`: `client_id` (string, required)
                + `redirect_uri`: `redirect_uri` (string, required, fixed) - Redirect uri
            + employee_request_id: `d098aee7-5ab3-4a24-a6ba-811f9cf94c6d` - Employee request identifier

+ Response 201 (application/json)
    + Attributes (Response__Process_OK)
        + data (object)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + include Legal_Entity_Request_Public
            + status: VERIFIED (enum, required)
                - VERIFIED
                - DECLINED
                - VERIFICATION_EXP
        + urgent (object, optional)
            + security (object)
                + `secret_key`: `secret_key` (string, required)
                + `client_id`: `client_id` (string, required)
                + `redirect_uri`: `redirect_uri` (string, required, fixed) - Redirect uri
            + employee_request_id: `d098aee7-5ab3-4a24-a6ba-811f9cf94c6d` - Employee request identifier

### Create/Update Legal Entity V2 [PUT /dummy/legal_entities/v2]

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

    + Attributes (object)
        + include Legal_Entity_Request_Public_V2

+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + data (object)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + include Legal_Entity_Request_Public
            + status: VERIFIED (enum, required)
                - VERIFIED
                - DECLINED
                - VERIFICATION_EXP
        + urgent (object, optional)
            + security (object)
                + `secret_key`: `secret_key` (string, required)
                + `client_id`: `client_id` (string, required)
                + `redirect_uri`: `redirect_uri` (string, required, fixed) - Redirect uri
            + employee_request_id: `d098aee7-5ab3-4a24-a6ba-811f9cf94c6d` - Employee request identifier

+ Response 201 (application/json)
    + Attributes (Response__Process_OK)
        + data (object)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
            + include Legal_Entity_Request_Public
            + status: VERIFIED (enum, required)
                - VERIFIED
                - DECLINED
                - VERIFICATION_EXP
        + urgent (object, optional)
            + security (object)
                + `secret_key`: `secret_key` (string, required)
                + `client_id`: `client_id` (string, required)
                + `redirect_uri`: `redirect_uri` (string, required, fixed) - Redirect uri
            + employee_request_id: `d098aee7-5ab3-4a24-a6ba-811f9cf94c6d` - Employee request identifier

# Group Public. Contracts

Note: In the new version of API contracts(relese TBD) will be divided into two types - capitation and reimbursement. Each type will be managed by its own route. The type of the contract should be declared in the URL like this:
```
/api/contract_requests/capitation
/api/contract_requests/reimbursement
```
If contract_type is not defined in the URL it counts as a capitation contract.

## Contract request [/api/contract_requests]

###Business logic
In order to create a new contract or update an existing contract, legal entity owner should create a contract request first. The contract request should be approved by both sides - Medical Service Provider(MSP) and National Health Service(NHS), and than signed by both sides as well. After that a new contract will be created or an existing contract will be updated. 
The detailed flow is described in a schema below:

[Confluence: Status Chart](https://edenlab.atlassian.net/wiki/x/GIDMIg)

![Contract request flow](https://www.websequencediagrams.com/cgi-bin/cdraw?lz=dGl0bGUgQ29udHJhY3QgcmVxdWVzdHMKCnBhcnRpY2lwYW50IE1TUCBhcyBtc3AACg1lSGVhbHRoIGFzIGVoAAYFACkNRG9jdW1lbnQgc3RvcmFnZSBhcwADCABRDU5IUyBhcyBuaHMKCm1zcC0-AEYHOiA8PEluaXRpYWxpemUgYwCBFQ8-PgoAbwcAJwtHZW5lcmF0ZSBVUkxzABYKbXNwOiA8PFJlc3BvbnNlIHdpdGggaWQgYW5kACUFPj4AdAYAgSMHOiBVcGxvYWQgZACBPAdzAIETBgBCBVNpZ24AfBEgdXNpbmcgZGlnaXRhbCBzaWduYXR1cmUgAIFBEUNyZWF0AIE5FW5ocwCBbw1HZXQAgWQRcyBsaQAEKSBkZXRhaWxzPj4KCmFsdCBBcHByb3YAgjgSCiAgICAAbhBVcGQAgREXACUJbmhzAIFgLwBVFQCAfxggYnkgTkhTPj4KZWxzZSBEZWNsaW4AgSIcAElHAFEYPj4KZW5kIACFExIAgwwdAAkkAIMeCwCFcRAAggEcTVNQAINiKHByaW50b3UAhEsGZW4AhGYJAIMQMwCFFxAAhXoWAIMzCQCBTDQAhn4JRG93bgCHBAUAiQkFYWxseQCGVgVlZACFMhIAhxIPABgZXG4AhysIAIgABTJuZACFFAsAiG8QAIFDGQCCdQYKb3B0IFRlcm1pbgCHQBQAhlMFAIlCEAAVGgCDSQplbmQK&s=modern-blue)

Using this API could be created both reimbursement and capitation contracts.
### Public. Initialize Contract Request [POST /api/contract_requests/{contract_type}]

***Scope  contract_request:create***

This web service allows to initialize contract request creation by generating links for contract request documents upload.

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + data (object)
            + include `Init_contract_request_response`
            


### Public. Create Contract Request [POST /api/contract_requests/{contract_type}/{id}]

***Scope  contract_request:create***

This web service allows to create contract request, using contract_request_id, generated by Initialize Contract Request WS. 
As an input parameters should be transfered signed data in PKCS7 format. Digital signiture should be applied to data filled by legal entity owner and MD5 HASH of provided files (statuste and equipment agreement).
In DS EDRPOU/DRFO must be equal to contractor_legal_entity.edrpou
#### Contract_request object scheme to be signed
The following tables describes contract_request object fields and it`s child objects.

There are two types of schemas depending on contract_type - capitation version and reimbursement version
For reimbursement version only documents are optional.ci
#####Capitation Contract_request

Attribute |Is required| Description
----------|-----------|-------------
contractor_owner_id|true| підписант, зі сторони мед. закладу
contractor_base|true| на якій підставі діє підписант: закон/домовленість
contractor_payment_details|true| об'єкт, що містить дані по рахунку, на який будуть здійснюватися виплати
contractor_rmsp_amount|true| к-сть осіб, що обслуговувалися мед закладом (додаток 1.1 пункт 7)
previous_request_id | false | опційне поле, яке вказує, що поточний запит на контракт є новою версією вказаного запиту
contractor_divisions|true| масив id відділень мед. закладу, що включаються в договір
contractor_employee_divisions|true| масив лікарів (на конкретних відділеннях), що входять да контракту та капітаційного звіту
external_contractor_flag|true| наявність додатку 2 (підрядники, залучені до надання медичних послуг за Договором)
external_contractors|false|масив об'єктів типу external_contractor objects - підрядники, залучені до надання медичних послуг за Договором
start_date|false| пункт 9.2 - цей договір діє з (рік має бути поточний або настпуний)
end_date|false| пункт 9.2 - цей договір діє по (рік має співпадати з роком у start_date)
id_form|true| словник `CONTRACT_TYPE`, поки що лише один вид Договір на ПМД
contract_number|false| human-redable номер контракту
statute_md5|true| хеш завантаженого документу (статуту)
additional_document_md5|true| хеш завантаженого документу (додатковий документ)
consent_text|true|

#####Reimbursement Contract_request

Attribute |Is required| Description
----------|-----------|-------------
contractor_owner_id|true| підписант, зі сторони мед. закладу
contractor_base|true| на якій підставі діє підписант: закон/домовленість
contractor_payment_details|true| об'єкт, що містить дані по рахунку, на який будуть здійснюватися виплати
previous_request_id | false | опційне поле, яке вказує, що поточний запит на контракт є новою версією вказаного запиту
contractor_divisions|true| масив id відділень мед. закладу, що включаються в договір
start_date|false| пункт 9.2 - цей договір діє з (рік має бути поточний або настпуний)
end_date|false| пункт 9.2 - цей договір діє по (рік має співпадати з роком у start_date)
id_form|true| словник `CONTRACT_TYPE`, поки що лише один вид Договір на ПМД
contract_number|false| human-redable номер контракту
statute_md5|false| хеш завантаженого документу (статуту)
additional_document_md5|false| хеш завантаженого документу (додатковий документ)
medical_program_id|true| ідентифікатор державної програми компенсації, що є субєктом договору
consent_text|true|

####Contractor_payment_details
Attribute |Is required| Description
----------|-----------|-------------
bank_name|true| назва банку
MFO|true| МФО
payer_account|true| розрахунковий рахунок
####Contractor_employee_division
Attribute |Is required| Description
----------|-----------|------------
employee_id|true| id запис про медичного працівника в системі
staff_units|true| штатна одиниця 
declaration_limit|true| максимальна к-сть пацієнтів, які можуть подати декларації про вибір такого лікаря за Договором
division_id|true| місце надання медичних послуг пов'язаниз з ПМД (підмножина contractor_divisions)
####External_contractors
Attribute |Is required| Description
----------|-----------|----------
legal_entity_id|true| запис про надавача з системи  
contract|true| договір з Підрядником
divisions|true| масив об'єктів типу Division, що зберігає запис про Місце надання медичних послуг з Системи та послугу
####Contract
Attribute |Is required| Description
----------|-----------|------------
number|true| номер договору з Підрядником
issued_at|true| дата укладення договору з Підрядником
expires_at|true| строк дії договору з Підрядником
####Division
Attribute |Is required| Description
----------|-----------|------------
id|true| запис про Місце надання медичних послуг з Системи
medical_service|true| послуга, що надається на відділені (словник `medical_service`)

####Business ruels

1. Create new or update existsing contract

    > 1.1 In order to create new contract, contract_number should be empty, start_date and end_date should be filled.
    
    > 1.2 In order to update existing contract, contract_number should be filled, start_date and end_date should be empty. Existing contract must be in `VERIFIED` status.

2. External contractors
    
    > 2.1 In case you have external_contractors - external_contractors_flag should be set as TRUE and external_contractors array must be provided (filled).
    
    > 2.2 In case you don't have external_contractors - external_contractors_flag should be set as FALSE and external_contractors array must empty.

####JSON example
Capitation version:
```
{
  "contractor_owner_id": "df9f70ee-4b12-4740-b0f5-bb5aea116863",
  "contractor_base": "на підставі статуту",
  "previous_request_id": "df9f70ee-4b12-4740-b0f5-bb5aea116863",
  "contractor_payment_details": {
    "bank_name": "Банк номер 1",
    "MFO": "351005",
    "payer_account": "32009102701026"
  },
  "contractor_rmsp_amount": 50000,
  "contractor_divisions": [
    "adeac295-0d39-4a8e-8e16-9526787de3f1"
  ],
  "contractor_employee_divisions": [
    {
      "employee_id": "2922a240-63db-404e-b730-09222bfeb2dd",
      "staff_units": 0.5,
      "declaration_limit": 2000,
      "division_id": "2922a240-63db-404e-b730-09222bfeb2dd"
    }
  ],
  "external_contractor_flag": true,
   "external_contractors": [
    {
      "legal_entity_id": "443e901e-b365-45d2-be14-083ee0aba657",
      "contract": {
        "number": "1234567",
        "issued_at": "2018-01-01",
        "expires_at": "2019-01-01"
      },
      "divisions": [
        {
          "id": "2922a240-63db-404e-b730-09222bfeb2dd",
          "medical_service": "PHC_SERVICES"
        }
      ]
    }
  ],
  "start_date": "2017-04-20",
  "end_date": "2017-04-20",
  "id_form": "PMD_1",
  "contract_number": "0000-9EAX-XT7X-3115",
  "statute_md5": "db218b04eff70f86f40c1572ce8ca16a",
  "additional_document_md5": "ac642b04eff40f86f40c1572ce8ca16a",
  "consent_text": "Цією заявою Заявник висловлює бажання укласти договір про медичне обслуговування населення за програмою державних гарантій медичного обслуговування населення (далі – Договір) на умовах, визначених в оголошенні про укладення договорів про медичне обслуговування населення (далі – Оголошення). Заявник підтверджує, що: 1. на момент подання цієї заяви Заявник має чинну ліцензію на провадження господарської діяльності з медичної практики та відповідає ліцензійним умовам з медичної практики; 2. Заявник надає медичні послуги, пов’язані з первинною медичною допомогою (далі – ПМД); 3. Заявник зареєстрований в електронній системі охорони здоров’я (далі – Система); 4. уповноважені особи та медичні працівники, які будуть залучені до виконання Договору, зареєстровані в Системі та отримали електронний цифровий підпис (далі – ЕЦП); 5. в кожному місці надання медичних послуг Заявника наявне матеріально-технічне оснащення, передбачене розділом І Примірного табелю матеріально-технічного оснащення закладів охорони здоров’я та фізичних осіб – підприємців, які надають ПМД, затвердженого наказом Міністерства охорони здоров’я України від 26 січня 2018 року № 148; 6. установчими або іншими документами не обмежено право керівника Заявника підписувати договори від імені Заявника без попереднього погодження власника. Якщо таке право обмежено, у тому числі щодо укладання договорів, ціна яких перевищує встановлену суму, Заявник повідомить про це Національну службу здоров’я та отримає необхідні погодження від власника до моменту підписання договору зі сторони Заявника; 7. інформація, зазначена Заявником у цій Заяві та доданих до неї документах, а також інформація, внесена Заявником (його уповноваженими особами) до Системи, є повною та достовірною. Заявник усвідомлює, що у разі зміни інформації, зазначеної Заявником у цій заяві та (або) доданих до неї документах Заявник зобов’язаний повідомити про такі зміни НСЗУ протягом трьох робочих днів з дня настання таких змін шляхом надсилання інформації про такі зміни на електронну пошту dohovir@nszu.gov.ua, з одночасним внесенням таких змін в Систему. Заявник усвідомлює, що законодавством України передбачена відповідальність за подання недостовірної інформації органам державної влади."
}
```
Reimbursement version:
```
{
  "contractor_owner_id": "df9f70ee-4b12-4740-b0f5-bb5aea116863",
  "contractor_base": "на підставі статуту",
  "previous_request_id": "df9f70ee-4b12-4740-b0f5-bb5aea116863",
  "contractor_payment_details": {
    "bank_name": "Банк номер 1",
    "MFO": "351005",
    "payer_account": "32009102701026"
  },
  "contractor_divisions": [
    "adeac295-0d39-4a8e-8e16-9526787de3f1"
  ],
  "start_date": "2019-04-20",
  "end_date": "2020-04-19",
  "id_form": "PMD_1",
  "contract_number": "0000-9EAX-XT7X",
  "statute_md5": "db218b04eff70f86f40c1572ce8ca16a",
  "additional_document_md5": "ac642b04eff40f86f40c1572ce8ca16a",
  "medical_program_id": "3922a240-63db-404e-b730-09222bfeb2d1"
  "consent_text": "Цією заявою Заявник висловлює бажання укласти договір про реімбурсацію з Національною службою здоров'я України та підтверджує, що на момент подання цієї заяви Заявник провадить господарську діяльність на підставі ліцензії на провадження господарської діяльності з роздрібної торгівлі лікарськими засобами та відповідає ліцензійним умовам. Заявник усвідомлює, що у разі зміни інформації, зазначеної Заявником у цій заяві та (або) доданих до неї документах Заявник зобов'язаний повідомити про такі зміни НСЗУ протягом трьох робочих днів з дня настання таких змін шляхом надсилання інформації про такі зміни на електронну пошту dohovir@nszu.gov.ua, з одночасним внесенням таких змін в Систему. Заявник усвідомлює, що законодавством України передбачена відповідальність за подання недостовірної інформації органам державної влади."
}
```


+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

    + Attributes (object)
        + include `Contract_request_Request_signed`

+ Response 201 (application/json)
    + Attributes (Response__Process_OK)
        + data (object)
            + include `Contract_request_Details_Capitation`
            
+ Response 201 (application/json)
    + Attributes (Response__Process_OK)
        + data (object)
            + include `Contract_request_Details_Reimbursement`

### Public. Get Contract Requests list [GET /api/contract_requests/{contract_type}/{?id,contractor_legal_entity_id,edrpou,contractor_owner_id,nhs_signer_id,issue_city,status,contract_number,page,page_size}]

***Scope  contract_request:read***

This method is designed to obtain list of contract request with filters. This method returns shorten information about contract request, in order to see all information try to use 'get contract request details'

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, optional) - id of contract request
    + contractor_legal_entity_id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, optional) - id of legal entity which created contract request.
    + contractor_owner_id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, optional) - id of legal entity owner.
    + `nhs_signer_id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, optional) - id of nhs employee
    + issue_city: `КИЇВ` (string, optional) - contract request place
    + edrpou: `12345678` (string, optional) - legal entity edrpou
    + status: `NEW` (enum, optional) - current status on contract request.
        - NEW
        - IN_PROCESS
        - APPROVED
        - DECLINED
        - TERMINATED
        - `PENDING_NHS_SIGN`
        - NHS_SIGNED
        - SIGNED
    + contract_number: `0000-9EAX-XT7X-3115` (string, optional) - human readable number of contract request.
    + program_id: `2075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, optional) - id of a program that is a subject of reimbursement contract
    + page: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned. Maximum: 500

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array[`Contract_request_list_capitation`])
+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array[`Contract_request_list_reimbursement`])
        
        

### Public. Get Contract Request Details [GET /api/contract_requests/{contract_type}/{id}]

***Scope  contract_request:read***

This method is designed to get full information of contract request by id

+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - contract request identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + data (object)
            + include `Contract_request_Details_Capitation`
        + urgent (object, required)
            + documents (array[`contract_media_content`], optional)

+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + data (object)
            + include `Contract_request_Details_Reimbursement`
        + urgent (object, required)
            + documents (array[`contract_media_content`], optional)

### Public. Approve Contract Request by MSP [PATCH /api/contract_requests/{contract_type}/{id}/actions/approve_msp]

***Scope  contract_request:approve***

This WS is designed to approve contract request by MSP side after it was approved by NHS side. 
Contract request only in status APPROVED can be approved by MSP and as a result status changes to 'PENDING_NHS_SIGN'.
Only after that NHS employee can sign the contract request.

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
    

+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + include `Contract_request_Details_Capitation`
+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + include `Contract_request_Details_Reimbursement`

### Public. Terminate Contract Request by MSP [PATCH /api/contract_requests/{contract_type}/{id}/actions/terminate]

***Scope  contract_request:terminate***

This WS is designed to terminate contract request by contractor. Contract request can't be in status='SIGNED'

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            
    + Attributes (object)
        + `status_reason`: `Неправильний період контракту`(string, optional) - the reason of terminated status

+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + include `Contract_request_Details_Reimbursement`

+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + include `Contract_request_Details_Capitation`

### Public. Get Contract Request Printout Content [GET /api/contract_requests/{contract_type}/{id}/printout_content]

***Scope  contract_request:read***

This method is designed to get printout content by contract request id. In order to sign contract it's need to invoke
Get Contract Request Details and Get Contract Request Printout Content and sign whole data.

+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - contract request identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + data (object)
            + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - contract request identifier
            + `printout_content`: `Contract request content` (string, required) - HTML document for contract request



### Public. Sign Contract Request by MSP [PATCH /api/contract_requests/{contract_type}/{id}/actions/sign_msp]

***Scope  contract_request:sign***

This WS is designed to sign contract request from MSP side. Contract request's status must be in status ='NHS_SIGNED'.
EDRPOU in DS certeficate = contractor_owner_id.lega_entity.edrpou and suranme in DS=contractor_owner_id.party_id.last_name
Method receives signed message (pkcs7) including signed content, digital signature of first signer, digital stamp of first signer, digital signature of second signer and signer public key in signed_content property. 
All signature fields will be validated (including signer certificate authority). This service will store signed copy of Contract Request in Media Content Storage (will update previous version of file),created contract records and linked employees_divisions if signature is all checks is passed. 
Object that need to be signed is returned by Get Contract request by ID, urgent, type='signed_content'. In response will be receive a link to download a file in pkcs7 format (signed by NHS side).
This data must be signed.

In DS EDRPOU/DRFO must be equal to contractor_legal_entity.edrpou

> **Note!** In response you will receive Contract object.

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            
    + Attributes (object)
        + `signed_content`: `MIIU2wYJKoZIhvcNAQcCoIIUzDCCFMgCAQExDjAMBgoqhiQCAQEBAQIBMIIG+QYJKoZIhvcNAQcBoIIG6gSCBuZ7CiAgICAiaWQiOiAiMDkxMDZiNzAtMThiMC00NzI2LWIwZWQtNmJkYTEzNjlmZDUyIiwKICAgICJjb250cmFjdG9yX293bmVyX2lkIjogImRmOWY3MGVlLTRiMTItNDc0MC1iMGY1LWJiNWFlYTExNjg2MyIsCiAgICAiY29udHJhY3Rvcl9iYXNlIjogItC90LAg0L/RltC00YHRgtCw0LLRliDQt9Cw0LrQvtC90YMg0L/RgNC+INCc0LXQtNC40YfQvdC1INC+0LHRgdC70YPQs9C+0LLRg9Cy0LDQvdC90Y8g0L3QsNGB0LXQu9C10L3QvdGPIiwKICAgICJjb250cmFjdG9yX3BheW1lbnRfZGV0YWlscyI6IHsKICAgICAgImJhbmtfbmFtZSI6ICLQkdCw0L3QuiDQvdC+0LzQtdGAIDEiLAogICAgICAiTUZPIjogIjM1MTAwNSIsCiAgICAgICJwYXllcl9hY2NvdW50IjogIjMyMDA5MTAyNzAxMDI2IgogICAgfSwKICAgICJjb250cmFjdG9yX3Jtc3BfYW1vdW50IjogNTAwMDAsCiAgICAiZXh0ZXJuYWxfY29udHJhY3Rvcl9mbGFnIjogdHJ1ZSwKICAgICJleHRlcm5hbF9jb250cmFjdG9ycyI6IHsKICAgICAgImxlZ2FsX2VudGl0eV9pZCI6ICIyOTIyYTI0MC02M2RiLTQwNGUtYjczMC0wOTIyMmJmZWIyZGQiLAogICAgICAiY29udHJhY3QiOiB7CiAgICAgICAgIm51bWJlciI6ICIxMjM0NTY3IiwKICAgICAgICAiaXNzdWVkX2F0IjogIjIwMTgtMDEtMDEiLAogICAgICAgICJleHBpcmVzX2F0IjogIjIwMTktMDEtMDEiCiAgICAgIH0sCiAgICAgICJkaXZpc2lvbnMiOiBbCiAgICAgICAgewogICAgICAgICAgImlkIjogIjI5MjJhMjQwLTYzZGItNDA0ZS1iNzMwLTA5MjIyYmZlYjJkZCIsCiAgICAgICAgICAibWVkaWNhbF9zZXJ2aWNlIjogItCf0L7RgdC70YPQs9CwINCf0JzQlCIKICAgICAgICB9CiAgICAgIF0KICAgIH0sCiAgICAiY29udHJhY3Rvcl9lbXBsb3llZV9kaXZpc2lvbnMiOiBbCiAgICAgIHsKICAgICAgICAiZW1wbG95ZWVfaWQiOiAiMjkyMmEyNDAtNjNkYi00MDRlLWI3MzAtMDkyMjJiZmViMmRkIiwKICAgICAgICAic3RhZmZfdW5pdHMiOiAwLjUsCiAgICAgICAgImRlY2xhcmF0aW9uX2xpbWl0IjogMjAwMCwKICAgICAgICAiZGl2aXNpb25faWQiOiAiMjkyMmEyNDAtNjNkYi00MDRlLWI3MzAtMDkyMjJiZmViMmRkIgogICAgICB9CiAgICBdLAogICAgImlkX2Zvcm0iOiAiNSIsCiAgICAibmhzX3NpZ25lcl9iYXNlIjogItC90LAg0L/RltC00YHRgtCw0LLRliDQvdCw0LrQsNC30YMiLAogICAgIm5oc19jb250cmFjdF9wcmljZSI6IDUwMDAwLAogICAgIm5oc19wYXltZW50X21ldGhvZCI6ICJwcmVwYXltZW50IiwKICAgICJpc3N1ZV9jaXR5IjogItCa0LjRl9CyIiwKICAgICJzdGF0dXMiOiAiTkVXIiwKICAgICJzdGF0dXNfcmVhc29uIjogItCd0LUg0LLRltC00L/QvtCy0ZbQtNCw0ZQg0L/QvtC/0LXRgNC10LTQvdGW0Lwg0LTQvtC80L7QstC70LXQvdC+0YHRgtGP0LwiLAogICAgIm5oc19zaWduZXJfaWQiOiAiZGY5ZjcwZWUtNGIxMi00NzQwLWIwZjUtYmI1YWVhMTE2ODYzIiwKICAgICJuaHNfbGVnYWxfZW50aXR5X2lkIjogImRmOWY3MGVlLTRiMTItNDc0MC1iMGY1LWJiNWFlYTExNjg2MyIsCiAgICAiY29udHJhY3RfbnVtYmVyIjogIjAwMDAtOUVBWC1YVDdYLTMxMTUiLAogICAgImNvbnRyYWN0X2lkIjogImRmOWY3MGVlLTRiMTItNDc0MC1iMGY1LWJiNWFlYTExNjg2MyIsCiAgICAic3RhcnRfZGF0ZSI6ICIyMDE3LTA0LTIwIiwKICAgICJlbmRfZGF0ZSI6ICIyMDE3LTA0LTIwIiwKICAgICJwcmludG91dF9jb250ZW50IjogIkNvbnRyYWN0IHJlcXVlc3QgY29udGVudCIKICB9CqCCBbkwggW1MIIFXaADAgECAhQNhO2hu5OB6AQAAABetCIAv7N0ADANBgsqhiQCAQEBAQMBATCCAUIxfDB6BgNVBAoMc9Cf0KPQkdCb0IbQp9Cd0JUg0JDQmtCm0IbQntCd0JXQoNCd0JUg0KLQntCS0JDQoNCY0KHQotCS0J4g0JrQntCc0JXQoNCm0IbQmdCd0JjQmSDQkdCQ0J3QmiDCq9Cf0KDQmNCS0JDQotCR0JDQndCawrsxETAPBgNVBAsMCNCQ0KbQodCaMTYwNAYDVQQDDC3QkNCm0KHQmiDQn9CQ0KIg0JrQkSDCq9Cf0KDQmNCS0JDQotCR0JDQndCawrsxFjAUBgNVBAUMDVVBLTE0MzYwNTcwLTExCzAJBgNVBAYTAlVBMScwJQYDVQQHDB7QlNC90ZbQv9GA0L7Qv9C10YLRgNC+0LLRgdGM0LoxKTAnBgNVBAgMINCU0L3RltC/0YDQvtC/0LXRgtGA0L7QstGB0YzQutCwMB4XDTE4MDEyMzE0NTMzNFoXDTE5MDEyMzIxNTk1OVowggETMSIwIAYDVQQKDBnQpNCG0JfQmNCn0J3QkCDQntCh0J7QkdCQMTkwNwYDVQQDDDDQn9CY0KDQntCT0J7QkiDQhNCS0JPQldCdINCS0JDQm9CV0KDQhtCZ0J7QktCY0KcxFzAVBgNVBAQMDtCf0JjQoNCe0JPQntCSMSowKAYDVQQqDCHQhNCS0JPQldCdINCS0JDQm9CV0KDQhtCZ0J7QktCY0KcxEDAOBgNVBAUMBzIyNzQzOTgxCzAJBgNVBAYTAlVBMScwJQYDVQQHDB7QnC4g0JrQoNCe0J/QmNCS0J3QmNCm0KzQmtCY0JkxJTAjBgNVBAgMHNCa0IbQoNCe0JLQntCT0KDQkNCU0KHQrNCa0JAwRjAeBgsqhiQCAQEBAQMBATAPBg0qhiQCAQEBAQMBAQIGAyQABCGNGaguWpXdyBk172CZxkuWynHt6GAUImGZI9ZFJp6oMAGjggJqMIICZjApBgNVHQ4EIgQgztjUwYvcULAWp/FyOQUBNpFx9HsyWh9lgiY21nLzYEkwKwYDVR0jBCQwIoAgjYTtobuTgejDEZCorJKFP8TYx4TGSgG4NxFX2F0YVVcwLwYDVR0QBCgwJqARGA8yMDE4MDEyMzE0NTMzNFqhERgPMjAxOTAxMjMyMTU5NTlaMA4GA1UdDwEB/wQEAwIGwDAZBgNVHSABAf8EDzANMAsGCSqGJAIBAQECAjAMBgNVHRMBAf8EAjAAMB4GCCsGAQUFBwEDAQH/BA8wDTALBgkqhiQCAQEBAgEwOAYDVR0fBDEwLzAtoCugKYYnaHR0cDovL2Fjc2sucHJpdmF0YmFuay51YS9jcmwvUEItUzkuY3JsMEMGA1UdLgQ8MDowOKA2oDSGMmh0dHA6Ly9hY3NrLnByaXZhdGJhbmsudWEvY3JsZGVsdGEvUEItRGVsdGEtUzkuY3JsMIGUBggrBgEFBQcBAQSBhzCBhDA0BggrBgEFBQcwAYYoaHR0cDovL2Fjc2sucHJpdmF0YmFuay51YS9zZXJ2aWNlcy9vY3NwLzBMBggrBgEFBQcwAoZAaHR0cDovL2Fjc2sucHJpdmF0YmFuay51YS9kb3dubG9hZC9jZXJ0aWZpY2F0ZXMvY2VydGlmaWNhdGVzLnA3YjBDBggrBgEFBQcBCwQ3MDUwMwYIKwYBBQUHMAOGJ2h0dHA6Ly9hY3NrLnByaXZhdGJhbmsudWEvc2VydmljZXMvdHNwLzAnBgNVHQkEIDAeMBwGDCqGJAIBAQELAQQBATEMEwozMjI4NTEyNTk3MA0GCyqGJAIBAQEBAwEBA0MABEDV3X/RhIP0TLUcuXc1cIKv01Z1mOPnNhodBM1sVKyxJji/HjkgYpt48+Eew05fWwuFs9LytruxRJ16E7mL7G1PMYIH9zCCB/MCAQEwggFcMIIBQjF8MHoGA1UECgxz0J/Qo9CR0JvQhtCn0J3QlSDQkNCa0KbQhtCe0J3QldCg0J3QlSDQotCe0JLQkNCg0JjQodCi0JLQniDQmtCe0JzQldCg0KbQhtCZ0J3QmNCZINCR0JDQndCaIMKr0J/QoNCY0JLQkNCi0JHQkNCd0JrCuzERMA8GA1UECwwI0JDQptCh0JoxNjA0BgNVBAMMLdCQ0KbQodCaINCf0JDQoiDQmtCRIMKr0J/QoNCY0JLQkNCi0JHQkNCd0JrCuzEWMBQGA1UEBQwNVUEtMTQzNjA1NzAtMTELMAkGA1UEBhMCVUExJzAlBgNVBAcMHtCU0L3RltC/0YDQvtC/0LXRgtGA0L7QstGB0YzQujEpMCcGA1UECAwg0JTQvdGW0L/RgNC+0L/QtdGC0YDQvtCy0YHRjNC60LACFA2E7aG7k4HoBAAAAF60IgC/s3QAMAwGCiqGJAIBAQEBAgGgggYtMBgGCSqGSIb3DQEJAzELBgkqhkiG9w0BBwEwHAYJKoZIhvcNAQkFMQ8XDTE4MDQyMzExMTY1MlowLwYJKoZIhvcNAQkEMSIEIMAdYVO8e/4E9usncxHy/CN128dFo878R/guITulNEtLMIIBtQYLKoZIhvcNAQkQAi8xggGkMIIBoDCCAZwwggGYMAwGCiqGJAIBAQEBAgEEIA7ygmjZ8tufBvOKqZW++z4W7TJu9MmyYGLG7gQ/RMCOMIIBZDCCAUqkggFGMIIBQjF8MHoGA1UECgxz0J/Qo9CR0JvQhtCn0J3QlSDQkNCa0KbQhtCe0J3QldCg0J3QlSDQotCe0JLQkNCg0JjQodCi0JLQniDQmtCe0JzQldCg0KbQhtCZ0J3QmNCZINCR0JDQndCaIMKr0J/QoNCY0JLQkNCi0JHQkNCd0JrCuzERMA8GA1UECwwI0JDQptCh0JoxNjA0BgNVBAMMLdCQ0KbQodCaINCf0JDQoiDQmtCRIMKr0J/QoNCY0JLQkNCi0JHQkNCd0JrCuzEWMBQGA1UEBQwNVUEtMTQzNjA1NzAtMTELMAkGA1UEBhMCVUExJzAlBgNVBAcMHtCU0L3RltC/0YDQvtC/0LXRgtGA0L7QstGB0YzQujEpMCcGA1UECAwg0JTQvdGW0L/RgNC+0L/QtdGC0YDQvtCy0YHRjNC60LACFA2E7aG7k4HoBAAAAF60IgC/s3QAMIIEBwYLKoZIhvcNAQkQAhQxggP2MIID8gYJKoZIhvcNAQcCoIID4zCCA98CAQMxDjAMBgoqhiQCAQEBAQIBMGsGCyqGSIb3DQEJEAEEoFwEWjBYAgEBBgoqhiQCAQEBAgMBMDAwDAYKKoYkAgEBAQECAQQgwB1hU7x7/gT26ydzEfL8I3Xbx0WjzvxH+C4hO6U0S0sCBA7BQYgYDzIwMTgwNDIzMTExNzI1WjGCA1swggNXAgEBMIIBEzCB+jE/MD0GA1UECgw20JzRltC90ZbRgdGC0LXRgNGB0YLQstC+INGO0YHRgtC40YbRltGXINCj0LrRgNCw0ZfQvdC4MTEwLwYDVQQLDCjQkNC00LzRltC90ZbRgdGC0YDQsNGC0L7RgCDQhtCi0KEg0KbQl9CeMUkwRwYDVQQDDEDQptC10L3RgtGA0LDQu9GM0L3QuNC5INC30LDRgdCy0ZbQtNGH0YPQstCw0LvRjNC90LjQuSDQvtGA0LPQsNC9MRkwFwYDVQQFDBBVQS0wMDAxNTYyMi0yMDEyMQswCQYDVQQGEwJVQTERMA8GA1UEBwwI0JrQuNGX0LICFDAEdR3vLHiuAgAAAAEAAABKAAAAMAwGCiqGJAIBAQEBAgGgggHaMBoGCSqGSIb3DQEJAzENBgsqhkiG9w0BCRABBDAcBgkqhkiG9w0BCQUxDxcNMTgwNDIzMTExNzI1WjAvBgkqhkiG9w0BCQQxIgQgCJtCNs3qiVo9TGE/mRMPNzCm/+JJKMtYsovNFgQLyPAwggFrBgsqhkiG9w0BCRACLzGCAVowggFWMIIBUjCCAU4wDAYKKoYkAgEBAQECAQQg2Q2mtkhTwy2/l7j25VzNasV5UgPimES648nWVhtnvOowggEaMIIBAKSB/TCB+jE/MD0GA1UECgw20JzRltC90ZbRgdGC0LXRgNGB0YLQstC+INGO0YHRgtC40YbRltGXINCj0LrRgNCw0ZfQvdC4MTEwLwYDVQQLDCjQkNC00LzRltC90ZbRgdGC0YDQsNGC0L7RgCDQhtCi0KEg0KbQl9CeMUkwRwYDVQQDDEDQptC10L3RgtGA0LDQu9GM0L3QuNC5INC30LDRgdCy0ZbQtNGH0YPQstCw0LvRjNC90LjQuSDQvtGA0LPQsNC9MRkwFwYDVQQFDBBVQS0wMDAxNTYyMi0yMDEyMQswCQYDVQQGEwJVQTERMA8GA1UEBwwI0JrQuNGX0LICFDAEdR3vLHiuAgAAAAEAAABKAAAAMA0GCyqGJAIBAQEBAwEBBEDE0LghB5AMretfTrP7pmjj0cylQFjujnRSeUBFXCcvPDF+6IWQ5lhhvgxVNsUFPVfd4TKdcBxe3NQa90gvYxRAMA0GCyqGJAIBAQEBAwEBBED0SMMU1AsD2jQYZw8yVJMcrgpsVIhaPx+v7qWaNo5KRc8F/v8xoDQAmts/LmvybnwRuAOOiKPw4MwZEG2KIoNO`(string, required) 
        + `signed_content_encoding`: `base64` (string, required)
+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + include `Contract_Details_Capitation`
+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data (object)
            + include `Contract_Details_Reimbursement`

## Contracts [/api/contract]
### Public. Get Contracts list [GET /api/contracts/{contract_type}/{?id,contractor_legal_entity_id,edrpou,contractor_owner_id,nhs_signer_id,is_suspended,status,contract_number,date_from_start_date,date_to_start_date,date_from_end_date,date_to_end_date,page,page_size}]

***Scope  contract:read***

This method is designed to obtain list of contracts with filters. This mothod return shorten information about contract, in order to see all information try to use 'get contract details'

+ Parameters
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, optional) - id of contract request
    + contractor_legal_entity_id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, optional) - id of legal entity which created contract request.
    + edrpou: `5432345432` (string, optional) - contractor legal entity EDRPOU
    + contractor_owner_id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, optional) - id of legal entity owner.
    + `nhs_signer_id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, optional) - id of nhs employee
    + status: `VERIFIED` (enum, optional) - current contract status.
        - TERMINATED
        - VERIFIED
    + is_suspended: true (boolean, optional) - wether contract is active
    + date_from_start_date: `2018-01-01` (string, optional)
    + date_to_start_date: `2019-01-01` (string, optional)
    + date_from_end_date: `2018-01-01` (string, optional)
    + date_to_end_date: `2019-01-01` (string, optional)
    + contract_number: `0000-9EAX-XT7X-3115` (string, optional) - human readable number of contract request.
    + program_id: `2075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, optional) - id of a program that is a subject of reimbursement contract
    + page: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned. Maximum: 500

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
    
+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array[`Contracts_list_capitation`])
+ Response 200 (application/json)
    + Attributes (`Response_Collection_V2`)
        + data (array[`Contracts_list_reimbursement`])

### Public. Get Contract Details [GET /api/contracts/{contract_type}/{id}]

***Scope  contract:read***

This method is designed to get full information of contract by id

+ Parameters
    + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - contract identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + data (object)
            + include `Contract_Details_Capitation`
        + urgent (object, required)
            + documents (array[`contract_media_content`], optional)
+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + data (object)
            + include `Contract_Details_Reimbursement`
        + urgent (object, required)
            + documents (array[`contract_media_content`], optional)

### Public. Get Contract Employees [GET /api/contracts/{contract_id}/capitation/employees{?is_active,employee_id,division_id,page,page_size}]

***Scope  contract:read***

This method allows to get whole history of all changes employees and divisions which were included in Contract.
In order to see list of employees as for now set parametr `is_active:true`.
The data received in response can be changed and signed in order to update employees and divisions in conract.

+ Parameters
    + `contract_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - contract identifier
    + `is_active`: true (boolean, optional) - Return only active employees. Default: true
    + `employee_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional)
    + `division_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional)
    + page: 2 (number, optional) - Page number.
    + page_size: 50 (number, optional) - A limit on the number of objects to be returned. Maximum: 500

     
+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
        
+ Response 200 (application/json)
    + Attributes (Response_Collection_V2)
        + data (object)
            + `contractor_employee_divisions` (array, fixed, required)
                + (object)
                    + include `Employee_divisions_response`
                    + `start_date`: `2017-04-20` (string, required) - employee start date 
                    + `end_date`: `2017-04-20` (string, required) - employee end date
                    + `contract_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - contract identifier
                       

### Public. Update Contract Employees [PATCH /api/contracts/{contract_id}/employees/actions/update]

***Scope  contract:write***

This method is designed to add, update and deactivate employee and their division in contract.
Contract itself can be updated only through 2 signed contract request with input contract_number.
Divisions also must be updated same way as contract (through 2 signed contract request with input contract_number).

Employees in contract update must be done through signed content. 
Each employee updates individually.

For each employee there is start_date and end_date (within contract). In case of updating emplpoyee, previous version is deactivated (end_date=updated_date) and new version is starting being active from updated_date.

To deactivate employee in contract parameter `is_active=false` must be set in signed content. 
It's impossible to add and deactivate employee trough one request (emlpoyee already must be added in order to deactivate).
To update employees in contract contract's status must be 'VERIFIED'.

Example data to sign in order to update/add employee:
```
{
 "employee_id": "09106b70-18b0-4726-b0ed-6bda1369fd52",
 "staff_units": 1,
 "declaration_limit": 800,
 "division_id": "6eb6123a-b3ce-4d27-ad3a-f6e3fb3ef1a1"
}
```

Example data to sign in order to deactivate employee:
```
{
 "employee_id": "09106b70-18b0-4726-b0ed-6bda1369fd52",
 "division_id": "6eb6123a-b3ce-4d27-ad3a-f6e3fb3ef1a1",
 "is_active": false
}
```

+ Parameters
    + contract_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - contract identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            
    + Attributes (object)
        + `signed_content`: `ICB7DQogICAgImVtcGxveWVlX2lkIjogew0KICAgICAgImlkIjogImIwNzVmMTQ4LTdmOTMtNGZjMi1iMmVjLTJkODFiMTlhOWI3YiIsDQogICAgICAiZmlyc3RfbmFtZSI6ICLQn9C10YLRgNC+IiwNCiAgICAgICJsYXN0X25hbWUiOiAi0IbQstCw0L3QvtCyIiwNCiAgICAgICJzZWNvbmRfbmFtZSI6ICLQnNC40LrQvtC70LDQudC+0LLQuNGHIiwNCiAgICAgICJzcGVjaWFsaXRpZXMiOiBbDQogICAgICAgIHsNCiAgICAgICAgICAic3BlY2lhbGl0eSI6ICJUSEVSQVBJU1QiLA0KICAgICAgICAgICJzcGVjaWFsaXR5X29mZmljaW8iOiB0cnVlLA0KICAgICAgICAgICJsZXZlbCI6ICJGSVJTVCIsDQogICAgICAgICAgInF1YWxpZmljYXRpb25fdHlwZSI6ICJBV0FSRElORyIsDQogICAgICAgICAgImF0dGVzdGF0aW9uX25hbWUiOiAi0JDQutCw0LTQtdC80ZbRjyDQkdC+0LPQvtC80L7Qu9GM0YbRjyIsDQogICAgICAgICAgImF0dGVzdGF0aW9uX2RhdGUiOiAiMjAxNyIsDQogICAgICAgICAgInZhbGlkX3RvX2RhdGUiOiAiMjAyMCIsDQogICAgICAgICAgImNlcnRpZmljYXRlX251bWJlciI6ICJBQi8yMTMzMSINCiAgICAgICAgfQ0KICAgICAgXQ0KICAgIH0sDQogICAgInN0YWZmX3VuaXRzIjogMC41LA0KICAgICJpc19hY3RpdmUiOiB0cnVlLA0KICAgICJkaXZpc2lvbiI6IHsNCiAgICAgICJpZCI6ICIyOTIyYTI0MC02M2RiLTQwNGUtYjczMC0wOTIyMmJmZWIyZGQiLA0KICAgICAgIm5hbWUiOiAi0JHQvtGA0LjRgdC/0ZbQu9GM0YHRjNC60LUg0LLRltC00LTRltC70LXQvdC90Y8g0JrQu9GW0L3RltC60Lgg0J3QvtGD0L3QtdC50LwiDQogICAgfQ0KICB9`(string, required) 
        + `signed_content_encoding`: `base64` (string, required)
        
+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + data (object)
            + include `Contract_Details_Capitation`

# Data Structures
## Responses
### `Response_Collection`
+ meta (Response__Meta, fixed-type)
+ data (array[], fixed-type)
+ paging (Response__Pagination, fixed-type)

### `Response_Collection_V2`
+ meta (Response__Meta, fixed-type)
+ data (array[], fixed-type)
+ paging (`Response__Pagination__V2`, fixed-type)

### `Response_Collection_OK`
+ meta (Response__Meta, fixed-type)
+ data (array[], fixed-type)

### `Response_OK`
+ meta (Response__Meta, fixed-type)
+ data (object, fixed-type)

### `Response__Process_OK`
+ meta (Response__Meta, fixed-type)
+ data (object, fixed-type)
    + affordances (array[Affordance], required) - List of available affordances and their URLs

### `Response_verification_by_phone`
+ `phone_number`: `+380508887700` (string, required)

### `Response_Error`
+ meta (Response__Meta, fixed-type)
    + code: 400 (number)
+ error (Response__Error, fixed-type)

### `Response__Meta`
+ code: 200 (number) - HTTP response code.
+ url: http://example.com/resource (string) - URL to requested resource.
+ type (enum) - Type of data that is located in `data` attribute.
    - object (string) - `data` attribute is a JSON object.
    - list (string) - `data` attribute is a list.
+ `request_id`: `req-adasdoijasdojsda` (string) - [Request ID](http://docs.apimanifest.apiary.io/#introduction/interacting-with-api/request-id). Send it with `X-Request-ID` header.

### `Response__Error`
+ type: type_atom (string) - Atom that represents error type.
+ message: Error description (string) - Human-readable error message. This is for developers, not end-users.

### `Response__Error_DuplicateEntity`
+ type: `object_already_exists` (string) - Atom that represents error type.
+ message: This API already exists (string) - Human-readable error message. This is for developers, not end-users.

### `Response__Error_ValidationFailed`
+ type: validation_failed (string) - type of an error.
+ message: Validation failed. You can find validators description at our API Manifest: http://docs.apimanifest.apiary.io/#introduction/interacting-with-api/errors. (string)
+ invalid (array)
    + `entry_type`: `json_data_proprty` (string) - Type of error.
    + entry: $.cvv (string) - JSON Path to an invalid property.
    + rules (array)
        + rule: required (string) - String constant that represents validation rule type. List of all types can be found in [API Manifest](http://docs.apimanifest.apiary.io/#introduction/interacting-with-api/errors).
        + params (array) - Validation Parameters.

### `Response__Pagination`
+ limit: 20 (number) - A limit on the number of objects to be returned, between 1 and 100. Default: 50.
+ cursors (object)
    + `starting_after`: 56c31536a60ad644060041af (string) - A cursor for use in pagination. An object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
    + `ending_before`: 56c31536a60ad644060041aa (string) - A cursor for use in pagination. An object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
+ size: 50 (number) - Total number of objects in collection.
+ has_more: false (boolean) - Is this collection have more data to load in the same style as last request loaded it.

### `Response__Pagination__V2`
+ page_number: 2 (number) - Page number.
+ page_size: 50 (number) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
+ total_entries: 1000 (number) - Total number of objects in collection.
+ total_pages: 23 (number) - Total number of pages.

## Persons
### `Person`
+ first_name: Петро (string, required)
+ last_name: Іванов (string, required)
+ second_name: Миколайович (string, optional)
+ birth_date: `1991-08-19` (string, required)
+ birth_country: `Україна` (string, required)
+ birth_settlement: `Вінниця` (string, required)
+ gender: MALE, FEMALE (enum[string], required)
+ email: email@example.com (string, optional)
+ tax_id: 3126509816 (string, optional)
+ secret: secret (string, required)
+ documents (array[Document], required)
+ addresses (array[Address], required)
+ phones (array[Phone], optional)
+ `authentication_methods` (array[Authentication_Method], required)
+ preferred_way_communication: email (enum, optional) - the way how a patient wants to be reached
    - email
    - phone

### `Confidant_Person`
+ relation_type: PRIMARY (enum, required)
    - PRIMARY
    - SECONDARY
+ first_name: Петро (string, required)
+ last_name: Іванов (string, required)
+ second_name: Миколайович (string, optional)
+ birth_date: `1991-08-19` (string, required)
+ birth_country: `Україна` (string, required)
+ birth_settlement: `Вінниця` (string, required)
+ gender: MALE, FEMALE (enum[string], required)
+ email: confidant_person@example.com (string, optional)
+ tax_id: 3126509816 (string, optional)
+ secret: `secret` (string, required)
+ documents_person (array[Document], required)
+ documents_relationship (array[Document], required)
+ phones (array[Phone], optional)

### `Confidant_Person_v2`
+ relation_type: PRIMARY (enum, required)
    - PRIMARY
    - SECONDARY
+ first_name: Петро (string, required)
+ last_name: Іванов (string, required)
+ second_name: Миколайович (string, optional)
+ birth_date: `1991-08-19` (string, required)
+ birth_country: `Україна` (string, required)
+ birth_settlement: `Вінниця` (string, required)
+ gender: MALE, FEMALE (enum[string], required)
+ tax_id: 3126509816 (string, optional)
+ secret: `secret` (string, required)
+ documents_person (array[Document], required)
+ documents_relationship (array[Document], required)
+ phones (array[Phone], optional)
+ email: emaill@example.com (string, optional)

### `Emergency_Contact`
+ first_name: Петро (string, required)
+ last_name: Іванов (string, required)
+ second_name: Миколайович (string, optional)
+ phones (array[Phone], required)

### `Person_Request`
+ include `Person`
+ emergency_contact (object, required)
    + include `Emergency_Contact`
+ `confidant_person` (array[`Confidant_Person`], optional) - Should be set if this Person is disabled, underage, etc.

### `Person_Full`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ Include Person_Request
+ confident_persons (array[Person])  - Should be set if this Person is disabled, underage, etc.
+ is_active: true (boolean, required)
+ merged_ids (array)
    + (object)
        + id: `7bca069f-21e4-4546-90cf-b65e3f39d93d` (string, required)
+ inserted_at: `2017-03-02T10:45:16.000Z` (string, optional)
+ updated_at: `2017-03-02T10:45:16.000Z` (string, optional)

### `Person_Minimal`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ first_name: Петро (string, required)
+ last_name: Іванов (string, required)
+ second_name: Миколайович (string, optional)

### `Person_Minimal_Declaration_Request`
+ first_name: Петро (string, required)
+ last_name: Іванов (string, required)
+ second_name: Миколайович (string, optional)

### `Person_Minimal_Contract`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ party (object)
    + first_name: Петро (string, required)
    + last_name: Іванов (string, required)
    + second_name: Миколайович (string, optional)

### `Person_Short`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ first_name: Петро (string, required)
+ last_name: Іванов (string, required)
+ second_name: Миколайович (string, optional)
+ birth_date: `1991-08-19` (string, required) - ISO Datetime.
+ gender (enum, required)
    - FEMALE
    - MALE
+ tax_id: 3126509816 (string, optional)
+ phones (array[Phone], required)
+ birth_settlement: Вінниця (string, required)
+ birth_country: Україна (string, required) - країна народження
+ documents (array[Document],optional) 

### `Person_Medication_Request`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ first_name: Петро (string, required)
+ last_name: Іванов (string, required)
+ second_name: Миколайович (string, optional)
+ age: 35 (number, required) - full years between medication request date and birth date.


### `Authentication_Method`
+ type (enum, required)
    - OTP
    - OFFLINE
    - NA
+ phone_number: `+380508887700` (string, optional)

### `cabinet_person_response`
+ include `Person`
+ unzr: `19900101-00099` (string, optional)
+ `emergency_contact`(`Emergency_Contact`)
+ `process_disclosure_data_consent`: true (boolean, required)

## `Merge_Candidates`
### `Merge_Candidate`
+ id: `8aa4d353-a58f-45f6-b5ce-a89a9cc39391` (string, optional) - Unique record identifier
+ person_id: `50320ee5-2bca-472c-a1a0-28e2e003ec2a` (string, optional) - Merge candidate identifier
+ `master_person_id`: `cb553981-4b7f-45ec-8f73-f77faf2dcb22` (string, optional) - Master person identifier
+ status: NEW (enum, optional) - Record status
        - NEW
        - MERGED
+ inserted_at: `1991-08-19T00:00:00.000Z` (string, required) - ISO Datetime.
+ updated_at: `1991-08-19T00:00:00.000Z` (string, required) - ISO Datetime.


## DeclarationRequests
### `crud_Declaration_request_get`
+ id: `73FF38F0-A873-4DB4-A47A-CC0F3D7A6D6A` (string, required)
+ data: `json structure` (string, required)
+ status: `pending` (string, required)
+ inserted_by: `A65C8369-CE3A-44D6-839B-8856E3DC4CA3` (string, required)
+ inserted_at: `2005-10-30 10:45` (string, required) - timestamp
+ updated_at: `2005-10-30 10:45` (string, required) - timestamp

### `declaration_request_patch`
+ id: `73FF38F0-A873-4DB4-A47A-CC0F3D7A6D6A` (string, required)
+ status: `pending` (string, required)

### `media_content`
+ type: `PASSPORT` (string, required)
+ url: `https://storage.ehealth.world` (string, required)

### `contract_media_content`
+ type: `SIGNED_CONTENT` (string, required)
+ url: `https://storage.ehealth.world` (string, required)

## Declarations
### Declaration
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - id of the signed document stored on the Media content storage
+ person_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ employee_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ division_id: `d290f1ee-6c54-4b01-90e6-d701748f0851`m (string, required)
+ `legal_entity_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851`m (string, required)
+ scope (enum, required)
    - family_doctor
+ start_date: `2017-03-02` (string, required)
+ end_date: `2017-03-02` (string, required)
+ signed_at: `2017-03-02T10:45:16.000Z` (string, required)
+ status (enum, optional)
    - active
    - closed

### `crud_Declaration_patch`
+ status (enum, optional)
    - active
    - closed

### `crud_Declaration_get`
+ include `Declaration`
+ inserted_at: `1991-08-19T00:00:00.000Z` (string, required)
+ inserted_by: `userid` (string, required)
+ updated_at: `1991-08-19T00:00:00.000Z` (string, required)
+ updated_by: `userid` (string, required)

### `Declaration_Request_Public`
+ person(`Person_Request`, required) - Object that described a Patient. Confidant person should be set for disabled persons, underage persons, etc.
    + patient_signed: false (boolean, required) - Факт подписания заявки на декларацию.
    + `process_disclosure_data_consent`: true (boolean, required) - Согласие на раскрытие персональных данных
+ `employee_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - Employee ID with `type=DOCTOR` selected from available Employees as a third contract party.
+ division_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - Registered Medical Service Provider Division identifier.
+ scope (enum, required)
    - family_doctor
+ overlimit: false (boolean, optional) - when doctor needs more declaration then in declaration_limit is, overlimit should be true

### `Declaration_Request_Public_v2`
+ person (object, required) - Object that described a Patient. Confidant person should be set for disabled persons, underage persons, etc.
    + first_name: Петро (string, required)
    + last_name: Іванов (string, required)
    + second_name: Миколайович (string, optional)
    + birth_date: `1991-08-19` (string, required)
    + birth_country: `Україна` (string, required)
    + birth_settlement: `Вінниця` (string, required)
    + gender: MALE, FEMALE (enum[string], required)
    + email: email@example.com (string, optional)
    + tax_id: 3126509816 (string, optional)
    + secret: secret (string, required)
    + documents (array, required)
        + include
            + type: PASSPORT (string, required) - `Dictionary DOCUMENT_TYPE`
            + number: АА120518 (string, required) - document issue number
            + issued_by: `Рокитнянським РВ ГУ МВС Київської області` (string, required) - authority which issued the document
            + issued_at: `2017-02-28` (string, required) - the date when document was issued
            + expiration_date: `2027-02-28` (string, optional) - the date when document expired, is necessery for those documents which has this date, ex, Temporary certificate, etc.
    + addresses (array[Address], required)
    + phones (array[Phone], optional)
    + `authentication_methods` (array[Authentication_Method], required)
    + preferred_way_communication: email (enum, optional) - the way how a patient wants to be reached
        - email
        - phone
    + `no_tax_id`: false (boolean, required) - fact of declining tax_id
    + unzr: `19900101-00011` (string, optional) - the record number in the demographic register
    + emergency_contact (object, required)
        + include `Emergency_Contact`
    + `confidant_person` (array[`Confidant_Person_v2`], optional) - Should be set if this Person is disabled, underage, etc.
    + patient_signed: false (boolean, required) - Факт подписания заявки на декларацию.
    + `process_disclosure_data_consent`: true (boolean, required) - Согласие на раскрытие персональных данных
+ `employee_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - Employee ID with `type=DOCTOR` selected from available Employees as a third contract party.
+ division_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - Registered Medical Service Provider Division identifier.
+ scope (enum, required)
    - family_doctor
+ overlimit: false (boolean, optional) - when doctor needs more declaration then in declaration_limit is, overlimit should be true

### `Declaration_Request_Public_Response`
+ start_date: `2017-03-02` (string, required) - Should be defined on the client side.
+ end_date: `2017-03-02` (string, required) - Will be defined on eHealth side if it's not set.
+ person(`Person_Request`, required) - Object that described a Patient. Confidant person should be set for disabled persons, underage persons, etc.
    + patient_signed: false (boolean, required) - Факт подписания заявки на декларацию.
    + `process_disclosure_data_consent`: true (boolean, required) - Согласие на раскрытие персональных данных
+ scope (enum, required)
    - family doctor
+ declaration_number: `0000-12H4-245D` (string, required) - unique number of declaration.
+ declaration_id: `8311ab82-e341-4da0-8a95-235ec9885e23` (string, required) - presetted id for future declaration 

### `Declaration_Request_Public_Response_v2`
+ start_date: `2017-03-02` (string, required) - Should be defined on the client side.
+ end_date: `2017-03-02` (string, required) - Will be defined on eHealth side if it's not set.
+ person (object, required) - Object that described a Patient. Confidant person should be set for disabled persons, underage persons, etc.
    + include `Person`
    + `no_tax_id`: false (boolean, required) - fact of declining tax_id
    + unzr: `19900101-00011` (string, optional) - the record number in the demographic register
    + emergency_contact (object, required)
        + include `Emergency_Contact`
    + `confidant_person` (array[`Confidant_Person_v2`], optional) - Should be set if this Person is disabled, underage, etc.
    + patient_signed: false (boolean, required) - Факт подписания заявки на декларацию.
    + `process_disclosure_data_consent`: true (boolean, required) - Согласие на раскрытие персональных данных
+ scope (enum, required)
    - family doctor
+ declaration_number: `0000-12H4-245D` (string, required) - unique number of declaration.
+ declaration_id: `8311ab82-e341-4da0-8a95-235ec9885e23` (string, required) - presetted id for future declaration 

### `Declaration_Request_Details_Public`
+ start_date: `2017-03-02` (string, required)
+ end_date: `2017-03-02` (string, required)
+ person(`Person_Request`, required)
    + patient_signed: false (boolean, required) - Факт подписания заявки на декларацию.
    + `process_disclosure_data_consent`: true (boolean, required) - Согласие на раскрытие персональных данных
+ employee (Employee_Minimal)
+ `legal_entity` (`Medical_Service_Provider`)
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ division (`Division_Details`)
+ scope (enum, required)
    - family doctor
+ overlimit: false (boolean, optional) - when doctor needs more declaration then in declaration_limit is, overlimit should be true
+ `declaration_request_id`: `74a6fae6-4207-4e03-a136-f2e70c6b0c02` (string, required)

### `Declaration_Request_Online`
+ `person_id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Person ID
+ `employee_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - Employee ID with `type=DOCTOR` selected from available Employees as a third contract party.
+ `division_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - Registered Medical Service Provider Division identifier.

### `Declaration_Request_Online_Response`
+ start_date: `2017-03-02` (string, required) - Should be defined on the client side.
+ end_date: `2017-03-02` (string, required) - Will be defined on eHealth side if it's not set.
+ person(object, required) - Object that described a Patient. Confidant person should be set for disabled persons, underage persons, etc.
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Person ID
+ overlimit: false (boolean, optional) - when doctor needs more declaration then in declaration_limit is, overlimit should be true

### `Declaration_Request_Short`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - unique id of declaration
+ start_date: `2017-03-02` (string, required)
+ end_date: `2025-03-02` (string, required)
+ status (enum, required)
    - active
    - pending_verification
    - terminated
+ person (Person_Minimal_Declaration_Request)
+ employee (Employee_Minimal)
+ `legal_entity` (`MSP_Short`)
+ division (`Division_Short_List`)

### `Declaration_short`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ start_date: `2017-03-02` (string, required)
+ end_date: `2017-03-02` (string, required)
+ signed_at: `2017-03-02T00:00:00.000Z` (string, required)
+ status (enum, required)
    - active
    - pending_verification
    - terminated
+ scope (enum, required)
    - family doctor
+ `declaration_request_id`: `74a6fae6-4207-4e03-a136-f2e70c6b0c02` (string, required)
+ person_id: `5fb57a5d-1457-430e-9678-c81cec72779f` (string, required)
+ `legal_entity_id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ employee_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ division_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ inserted_at: `2017-07-06T16:54:05.161571Z` (string, required)
+ is_active: true (boolean, required)
+ reason: `manual_employee` (string, optional)
+ reason_description: `Згідно постанови 1 від 10.01.2017` (string, optional)

### `Declaration_Details`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ declaration_number: `0000-12H4-245D` (string, required) - unique number of declaration.
+ start_date: `2017-03-02` (string, required)
+ end_date: `2017-03-02` (string, required)
+ signed_at: `2017-03-02T00:00:00.000Z` (string, required)
+ person(`Person_Short`)
    + `emergency_contact` (`Emergency_Contact`, required)
    + `confidant_person` (array[`Confidant_Person`], optional) - Should be set if this Person is disabled, underage, etc.
+ employee (`Employee_Declaration_Short`)
+ division (`Division_Short`)
+ `legal_entity` (MSP_Details)
+ status (enum, required)
    - active
    - pending_verification
    - terminated
+ scope (enum, required)
    - family_doctor
+ `declaration_request_id`: `74a6fae6-4207-4e03-a136-f2e70c6b0c02` (string, required)
+ inserted_at: `2017-03-02T10:45:16.000Z` (string, optional)
+ updated_at: `2017-03-02T10:45:16.000Z` (string, optional)
+ reason: `manual_employee` (string, optional)
+ reason_description: `Згідно постанови 1 від 10.01.2017` (string, optional)

### `Declaration_Details_Cabinet`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ declaration_number: `0000-12H4-245D` (string, required) - unique number of declaration.
+ start_date: `2017-03-02` (string, required)
+ end_date: `2017-03-02` (string, required)
+ person(`Person_Short`)
    + unzr: `19910819-00011` (string, optional) - the record number in the demographic register
    + `emergency_contact` (`Emergency_Contact`, required)
    + `confidant_person` (array[`Confidant_Person`], optional) - Should be set if this Person is disabled, underage, etc.
+ employee (`Employee_Declaration_Short`)
+ division (`Division_Details_Cabinet`)
+ `legal_entity` (MSP_Details)
+ status (enum, required)
    - active
    - pending_verification
    - terminated
+ scope (enum, required)
    - family_doctor
+ `declaration_request_id`: `74a6fae6-4207-4e03-a136-f2e70c6b0c02` (string, required)
+ content: `Declaration content` (string, required) - HTML document that MUST be shown to a end-user and signed by hes key. - Should be defined on the client side.
+ inserted_at: `2017-03-02T10:45:16.000Z` (string, optional)
+ updated_at: `2017-03-02T10:45:16.000Z` (string, optional)

### `Declaration_Request_Details_Cabinet`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ declaration_number: `0000-12H4-245D` (string, required) - unique number of declaration.
+ start_date: `2017-03-02` (string, required)
+ end_date: `2017-03-02` (string, required)
+ seed: hash (string, required)
+ person_id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ person(`Person`)
    + `emergency_contact` (`Emergency_Contact`, required)
    + `confidant_person` (array[`Confidant_Person`], optional) - Should be set if this Person is disabled, underage, etc.
+ employee (Employee_Declaration_Short)
+ `legal_entity` (`MSP_Details`)
+ division (`Division_Details_Cabinet`)
+ status (enum, required)
    - new
    - approved
    - signed
    - expired
+ scope (enum, required)
    - family_doctor
+ `declaration_id`: `74a6fae6-4207-4e03-a136-f2e70c6b0c02` (string, required)
+ content: `Declaration content` (string, required) - HTML document that MUST be shown to a end-user and signed by hes key. - Should be defined on the client side.
+ inserted_at: `2017-03-02T10:45:16.000Z` (string, optional)
+ updated_at: `2017-03-02T10:45:16.000Z` (string, optional)
+ channel: `CABINET` (enum, required) - channel that invoke declaration create service

### `Declaration_list_cabinet`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - unique id of declaration
+ declaration_number: `0000-12H4-245D` (string, required) - unique number of declaration.
+ start_date: `2017-03-02` (string, required)
+ status (enum, required)
    - active
    - pending_verification
    - terminated
+ person (Person_Minimal)
+ employee (`Employee_Minimal_cabinet`)
+ `legal_entity` (`MSP_Short`)
+ division (`Division_Short_List`)

### `Declaration_requests_list_cabinet`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - unique id of declaration request
+ declaration_number: `0000-12H4-245D` (string, required) - unique number of declaration.
+ start_date: `2017-03-02` (string, required)
+ status (enum, required)
    - new
    - approved
    - signed
    - expired
+ person (Person_Minimal)
+ employee (`Employee_Minimal_cabinet`)
+ `legal_entity` (`MSP_Short`)
+ division (`Division_Short_List`)

### `Declaration_Details_Public`
+ start_date: `2017-03-02` (string, required)
+ end_date: `2017-03-02` (string, required)
+ person(`Person_Request`, required)
    + id: `5fb57a5d-1457-430e-9678-c81cec72779f` (string)
    + patient_signed: false (boolean, required) - Факт подписания заявки на декларацию.
    + `process_disclosure_data_consent`: true (boolean, required) - Согласие на раскрытие персональных данных
    + `legal_entity` (`Medical_Service_Provider`)
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ division (`Division_Details`)
+ scope (enum, required)
    - family doctor
+ `declaration_request_id`: `74a6fae6-4207-4e03-a136-f2e70c6b0c02` (string, required)

## Party
### `Party_Short`
+ first_name: Петро (string, required)
+ last_name: Іванов (string, required)
+ second_name: Миколайович (string, optional)

### `Party_Request`
+ include `Party_Short`
+ birth_date: `1991-08-19T00:00:00.000Z` (string, required)
+ gender: MALE (string, required) - `Dictionary GENDER`
+ `no_tax_id`: false (boolean, optional)
+ tax_id: 3126509816 (string, required)
+ email: email@example.com (string, optional)
+ documents (array[Document], optional)
+ phones (array[Phone], optional)
+ educations (array[Education], optional)  - освіта
+ qualifications (array[Qualification], optional) - підвищення кваліфікації
+ specialities (array[Speciality_party], optional)  - блок інформації про отримання сертифікату спеціалісту та проходження атестацій
+ science_degree (ScienceDegree, optional)

### `Party_Request_old`
+ include `Party_Short`
+ birth_date: `1991-08-19T00:00:00.000Z` (string, required)
+ gender: MALE (string, required) - `Dictionary GENDER`
+ `no_tax_id`: false (boolean, optional) - true if employee doesn't have tax_id and false otherwise 
+ tax_id: 3126509816 (string, required) - if no_tax_id=true then passport number, otherwise tax_id
+ email: email@example.com (string, optional)
+ documents (array[Document], optional)
+ phones (array[Phone], optional)
+ working_experience: 10 (number, optional) - full years of working experience
+ about_myself: `Закінчив всі можливі курси` (string, optional) - field for medical employee to describe the most important statements.

### `Party_Response_old`
+ id:`b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ include `Party_Short`
+ birth_date: `1991-08-19T00:00:00.000Z` (string, required)
+ gender: MALE (string, required) - `Dictionary GENDER`
+ `no_tax_id`: false (boolean, optional)
+ tax_id: 3126509816 (string, required)
+ documents (array[Document], optional)
+ phones (array[Phone], optional)
+ working_experience: 10 (number, optional) - full years of working experience
+ about_myself: `Закінчив всі можливі курси` (string, optional) - field for medical employee to describe the most important statements.
+ declaration_limit: `0` (number) - TO BE DEPRECATED, always zero! maximum number of declaration with a doctor.
+ declaration_count: `0` (number) - TO BE DEPRECATED, always zero! current number of declaration with a doctor.

### `Party_Update`
+ include `Party_Short`
+ no_tax_id: false (boolean, optional)
+ tax_id: 3126509816 (string, required)
+ birth_date: `1991-08-19T00:00:00.000Z` (string, required)
+ gender: MALE(string, required) - `Dictionary GENDER`
+ documents (array[Document], optional)
+ phones (array[Phone], optional)
+ working_experience: 10 (number, optional) - full years of working experience
+ about_myself: `Закінчив всі можливі курси` (string, optional) - field for medical employee to describe the most important statements.
+ declaration_limit: `2000` (number) - maximum number of declaration with a doctor.
+ educations (array[Education], optional)  - освіта
+ qualifications (array[Qualification], optional) - підвищення кваліфікації
+ specialities (array[Speciality_party], optional)  - блок інформації про отримання сертифікату спеціалісту та проходження атестацій
+ science_degree (ScienceDegree, optional)

### `crud_party`
+ first_name: Петро (string, required)
+ last_name: Іванов (string, required)
+ second_name: Миколайович (string, optional)
+ birth_date: `1991-08-19T00:00:00.000Z` (string, required)
+ gender: MALE(string, required) - `Dictionary GENDER`
+ no_tax_id: false (boolean, optional)
+ tax_id: 3126509816 (string, required)
+ documents (array[Document], optional)
+ phones (array[Phone], optional)
+ working_experience: 10 (number, optional) - full years of working experience
+ about_myself: `Закінчив всі можливі курси` (string, optional) - field for medical employee to describe the most important statements.
+ educations (array[Education], optional)  - освіта
+ qualifications (array[Qualification], optional) - підвищення кваліфікації
+ specialities (array[Speciality_party], optional)  - блок інформації про отримання сертифікату спеціалісту та проходження атестацій
+ science_degree (ScienceDegree, optional)

### `crud_party_post`
+ include `crud_party`

### `crud_party_get`
+ id: d290f1ee-6c54-4b01-90e6-d701748f0851 (string, required)
+ include `crud_party`
+ inserted_at: `1991-08-19T00:00:00.000Z` (string, required)
+ inserted_by: `userid` (string, required)
+ updated_at: `1991-08-19T00:00:00.000Z` (string, required)
+ updated_by: `userid` (string, required)

##2FA

### `authentication_factor`
+ id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ type: `sms` (string, required) - 2fa type
+ factor: `+380881234567` (string, required) - 2fa factor, ex. phone number
+ is_active: true (boolean)
+ user_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)

## Employees
### `crud_employee`
+ party_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ no_tax_id: true (boolean, optional) - true if employee doesn't have tax_id and false otherwise
+ legal_entity_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ division_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional)
+ `employee_type`: DOCTOR (string) - `Dictionary EMPLOYEE_TYPE`
+ position: P1 (string, required) - `Dictionary POSITION`
+ start_date: 2017-02-28 (string, required)
+ end_date: 2017-02-28 (string, optional)
+ status: NEW, APPROVED (enum, required)
+ speciality (`Speciality`, optional)  - блок інформації про отримання сертифікату спеціалісту та проходження атестацій
+ `status_reason`: `new_employee` (string, optional)

### `crud_employee_get`
+ id: d290f1ee-6c54-4b01-90e6-d701748f0851 (string, required)
+ include `crud_employee`
+ inserted_at: `1991-08-19T00:00:00.000Z` (string, required)
+ inserted_by: `userid` (string, required)
+ updated_at: `1991-08-19T00:00:00.000Z` (string, required)
+ updated_by: `userid` (string, required)

### `crud_employee_post`
+ include `crud_employee`


### `Employee`
+ user_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ msp_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ `employee_type`: doctor (enum) - `Dictionary EMPLOYEE_TYPE`
+ position: P6 (string, required) - `Dictionary POSITION`
+ speciality: THERAPIST (string) - `Dictionary SPECIALITY_TYPE`
+ employee_details (DoctorNew, optional)
+ start_date: 2017-02-28 (string, required)
+ expiry_date: 2017-02-28 (string, optional)

### `Employee_Minimal`
+ id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ position: P6 (string, required) - `Dictionary POSITION`
+ party (object)
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
    + no_tax_id: true (boolean, required)
    + include `Party_Short`
    + email: email@example.com (string, optional)
    + phones (array[Phone], optional)

### `Employee_Minimal_cabinet`
+ id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ position: P6 (string, required) - `Dictionary POSITION`
+ party (object)
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
    + include `Party_Short`

### `Employee_For_Declaration_Minimal`
+ id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ position: P6 (string, required) - `Dictionary POSITION`
+ `employee_type`: doctor (enum) - `Dictionary EMPLOYEE_TYPE`

### `Employee_Response`
+ id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ position: P8 (string, required) - `Dictionary POSITION`
+ start_date: `2017-03-02T10:45:16.000Z` (string, required)
+ end_date: `2018-03-02T10:45:16.000Z` (string, optional)
+ status: APPROVED, DISMISSED (enum, required) 
+ `employee_type`: DOCTOR (string, required) - `Dictionary EMPLOYEE_TYPE`
+ party (`Party_Response_old`)
+ doctor (DoctorNew, optional)

### `Employee_Update`
+ division_id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, optional)
+ position: лікар (string, required)
+ start_date: `2017-03-02T10:45:16.000Z` (string, required)
+ end_date: `2018-03-02T10:45:16.000Z` (string, optional)
+ status: APPROVED, DISMISSED (enum, required)
+ party (Party_Update)
+ doctor (DoctorNew, optional)

### `Employee_Request`
+ division_id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, optional) - employees division, mandatory for Doctors
+ `legal_entity_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, optional)
+ position: P8 (string, required) - `Dictionary POSITION`
+ start_date: `2017-03-02T10:45:16.000Z` (string, required)
+ end_date: `2018-03-02T10:45:16.000Z` (string, optional)
+ status: NEW, REJECTED, APPROVED (enum, required)
+ `employee_type`: DOCTOR (string, required) - `Dictionary EMPLOYEE_TYPE`
+ party (Party_Request_old)
+ doctor (DoctorNew, optional)

### `Employee_Request_Short`
+ id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ status: NEW, REJECTED, APPROVED (enum, required)
+ inserted_at: `2018-03-02T10:45:16.000Z` (string, required)
+ edrpou: 5432345432 (string, required)
+ `legal_entity_name`: Клініка Ноунейм (string, required)
+ `no_tax_id`: true (boolean, optional) - true if employee doesn't have tax_id and false otherwise
+ include `Party_Short`

### `Employee_Request_Details`
+ include `Employee_Request`

### `Employee_Short`
+ id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ position: P1 (string, required) - `Dictionary: POSITION`
+ `employee_type`: DOCTOR (string) - `Dictionary: EMPLOYEE_TYPE`
+ status: APPROVED, DISMISSED (enum, required) - Employee status
+ start_date: `2017-03-02T10:45:16.000Z` (string, required)
+ end_date: `2018-03-02T10:45:16.000Z` (string, optional)
+ party (object)
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
    + no_tax_id: true (boolean, optional) - true if employee doesn't have tax_id and false otherwise
    + include `Party_Short`
    + declaration_limit: `0` (number) - TO BE DEPRECATED, always zero! maximum number of declaration with a doctor.
    + declaration_count: `0` (number) - TO BE DEPRECATED, always zero! current number of declaration with a doctor.
+ division (`Division_Short`)
+ `legal_entity` (`Legal_Entity_Short`)
+ doctor (DoctorNew_Short)

### `Employee_Declaration_Short`
+ id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ position: P1 (string, required) - `Dictionary: POSITION`
+ `employee_type`: DOCTOR (string) - `Dictionary: EMPLOYEE_TYPE`
+ status: APPROVED, DISMISSED (enum, required) - Employee status
+ start_date: `2017-03-02T10:45:16.000Z` (string, required)
+ end_date: `2018-03-02T10:45:16.000Z` (string, optional)
+ party (object)
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
    + include `Party_Short`
+ division_id: `4cffa825-8b5b-4cba-9a38-fb57733e14b2` (string, optional) - division identifier
+ `legal_entity_id`: `be3a154c-3e07-496d-9680-f22c443f5d0c` (string, required) - legal entity identifier
+ doctor (DoctorNew)

## `Legal_Entities`

### `crud_legal_entity`
+ name: Клініка ноунейм (string, required)
+ short_name: Ноунейм (string, required)
+ type: MSP (string, required) - `Dictionary LEGAL_ENTITY_TYPE`
+ edrpou: 5432345432 (string, required)
+ addresses (array[Address], required)
+ phones (array[Phone], required)
+ email: email@example.com (array[Email], required)
+ is_active: true (boolean)
+ public_name: Клініка Ноунейм (string, required)
+ kveds: 86.1 (array, required)
+ status: VERIFIED (enum, required)
    - VERIFIED
    - NOT_VERIFIED
+ `owner_property_type`: STATE (string, required) - `Dictionary OWNER_PROPERTY_TYPE`
+ `legal_form`: 140 (enum, required) - `Dictionary LEGAL_FORM`
+ `medical_service_provider` (MSP, optional)
+ `created_via_mis_id`: d290f1ee-6c54-4b01-90e6-d701748f0851 (string, required)

### `crud_legal_entity_get`
+ id: d290f1ee-6c54-4b01-90e6-d701748f0851 (string, required)
+ include `crud_legal_entity`
+ inserted_at: `1991-08-19T00:00:00.000Z` (string, required)
+ inserted_by: `userid` (string, required)
+ updated_at: `1991-08-19T00:00:00.000Z` (string, required)
+ updated_by: `userid` (string, required)

### `crud_legal_entity_post`
+ include `crud_legal_entity`

### `crud_legal_entity_patch`
+ name: Клініка Ноунейм (string, optional)
+ short_name: Ноунейм (string, optional)
+ public_name: Клініка Ноунейм (string, required)
+ type: MSP (string, optional) - `Dictionary LEGAL_ENTITY_TYPE`
+ addresses (array[Address], optional)
+ phones (array[Phone], optional)
+ email: email@example.com (array[Email], optional)
+ is_active: true (boolean)
+ public_name: Клініка Ноунейм (string, optional)
+ status: VERIFIED (enum, optional)
    - VERIFIED
    - NOT_VERIFIED
+ `owner_property_type`: STATE (string, required) - `Dictionary OWNER_PROPERTY_TYPE`
+ `legal_form`: 140 (enum, required) - `Dictionary LEGAL_FORM`
+ `medical_service_provider` (MSP, optional)

### `Legal_Entity_Short`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ name: Клініка Ноунейм (string, required)
+ short_name: Ноунейм (string, required)
+ public_name: Клініка Ноунейм (string, required)
+ type: MSP (string, required)
+ edrpou: 5432345432 (string, required)
+ status: ACTIVE (enum, required)
    - ACTIVE
    - CLOSED

### `Legal_Entity_For_Declaration_Short`
+ short_name: Ноунейм (string, required)
+ name: Клініка Ноунейм (string, required)
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ edrpou: 5432345432 (string, required)

### `Legal_Entity_Short_Cabinet`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ name: Клініка Ноунейм (string, required)

## `Legal_Entity_Requests`

### `Legal_Entity_Request_Public`
+ name: Клініка Ноунейм (string, required) - full official name of legal entity also the name to show on public sources [as map, portal etc]
+ short_name: Ноунейм (string, optional) - short name of legal entity
+ public_name: Ноунейм (string, optional) 
+ type: MSP (string, required) - type of legal entity [MSP/PHARMACY]. MIS can't be created using this WS.
+ `owner_property_type`: STATE (string, required) - `Dictionary OWNER_PROPERTY_TYPE` State or private type of legal entity
+ `legal_form`: 140 (string, required) - `Dictionary LEGAL_FORM`  - business form [as ТОВ/ФОП/ДП/КП]
+ edrpou: 32323454 (string, required) - Unified Register of Businesses and Organizations
+ kveds: 86.10 (array, required) - Ukrainian Industry Classification System, there is a check that at least one of next kveds is input: 86.10, 86.21, 47.73.
+ addresses (array[Address], required) - The max items of array is 2: REGISTRATION - required, RESIDENCE - optional. DIVISION is exception: REGISTRATION - optional, RESIDENCE - required
+ phones (array[Phone], required)
+ email: email@example.com (string, required) - email to contact person in charge from legal entity
+ website: `www.msp.com.ua` (string, optional) - legal entity website
+ receiver_funds_code: `AB12345` (string, optional) - treasury registration code [Код одержувача/розпорядника бюджетних коштів для Казначейства. Вказується за наявності.]
+ beneficiary: `Борисов Борис Борисович` (string, optional) - legal owner of legal entity [нформація про власника ЗОЗ, для ФОП не заповнюється]
+ owner(`Owner`,required)
+ `medical_service_provider` (MSP)
+ `archive`(array[Archive], optional) 
+ security (object, fixed-type)
    + `redirect_uri`: `http://example.com` (string, required, fixed) - Redirect uri is used in oauth2.0 flow
+ public_offer(object, fixed-type)
    + `consent_text`: `Consent text` (string, required)
    + `consent`: `true` (boolean, required)

### `Legal_Entity_Request_Public_V2`
+ name: Клініка Ноунейм (string, required) - full official name of legal entity also the name to show on public sources [as map, portal etc]
+ short_name: Ноунейм (string, optional) - short name of legal entity
+ public_name: Ноунейм (string, optional) 
+ `owner_property_type`: STATE (string, required) - `Dictionary OWNER_PROPERTY_TYPE` State or private type of legal entity
+ `legal_form`: 140 (string, required) - `Dictionary LEGAL_FORM`  - business form [as ТОВ/ФОП/ДП/КП]
+ edrpou: 32323454 (string, required) - Unified Register of Businesses and Organizations
+ addresses (array[Address], required) - The max items of array is 2: REGISTRATION - required, RESIDENCE - optional. DIVISION is exception: REGISTRATION - optional, RESIDENCE - required
+ phones (array[Phone], required)
+ email: email@example.com (string, required) - email to contact person in charge from legal entity
+ website: `www.msp.com.ua` (string, optional) - legal entity website
+ receiver_funds_code: `AB12345` (string, optional) - treasury registration code [Код одержувача/розпорядника бюджетних коштів для Казначейства. Вказується за наявності.]
+ beneficiary: `Борисов Борис Борисович` (string, optional) - legal owner of legal entity [нформація про власника ЗОЗ, для ФОП не заповнюється]
+ owner(`Owner`,required)
+ `medical_service_provider` (MSP_V2)
+ `archive`(array[Archive], optional) 
+ security (object, fixed-type)
    + `redirect_uri`: `http://example.com` (string, required, fixed) - Redirect uri is used in oauth2.0 flow
+ public_offer(object, fixed-type)
    + `consent_text`: `Consent text` (string, required)
    + `consent`: `true` (boolean, required)

### `Legal_Entity_Response_Public`
+ name: Клініка Ноунейм (string, required) - full official name of legal entity also the name to show on public sources [as map, portal etc]
+ short_name: Ноунейм (string, optional) - short name of legal entity
+ public_name: Ноунейм (string, optional) 
+ type: MSP (string, required) - type of legal entity [MSP/PHARMACY]. MIS can't be created using this WS.
+ `owner_property_type`: STATE (string, required) - `Dictionary OWNER_PROPERTY_TYPE` State or private type of legal entity
+ `legal_form`: 140 (string, required) - `Dictionary LEGAL_FORM`  - business form [as ТОВ/ФОП/ДП/КП]
+ edrpou: 32323454 (string, required) - Unified Register of Businesses and Organizations
+ kveds: 86.10 (array, required) - Ukrainian Industry Classification System, there is a check that at least one of next kveds is input: 86.10, 86.21, 47.73.
+ addresses (array[Address], required) - The max items of array is 2: REGISTRATION - required, RESIDENCE - optional. DIVISION is exception: REGISTRATION - optional, RESIDENCE - required
+ phones (array[Phone], required)
+ email: email@example.com (string, required) - email to contact person in charge from legal entity
+ website: `www.msp.com.ua` (string, optional) - legal entity website
+ receiver_funds_code: `AB12345` (string, optional) - treasury registration code [Код одержувача/розпорядника бюджетних коштів для Казначейства. Вказується за наявності.]
+ beneficiary: `Борисов Борис Борисович` (string, optional) - legal owner of legal entity [нформація про власника ЗОЗ, для ФОП не заповнюється]
+ `medical_service_provider` (object, required)
    + licenses (array, required, fixed)
        + (object)
            + license_number: fd123443 (string, optional)
            + type: MSP (string, optional) - License type `Dictionary LICENSE_TYPE`
            + kveds: 86.10 (array, optional) - Ukrainian Industry Classification System, there is a check that at least one of required kveds provided for specific license type
            + issued_by: Кваліфікацйна комісія (string, required)
            + issued_date: `2017-02-28` (string, required)
            + expiry_date: `2017-02-28` (string, optional)
            + `active_from_date`: `2017-02-28` (string, required)
            + what_licensed: реалізація наркотичних засобів (string, optional)
            + order_no: ВА43234 (string, required) - номер наказу
    + accreditation (MSP_Accreditation, optional)
+ `archive`(array[Archive], optional) 
+ security (object, fixed-type)
    + `redirect_uri`: `http://example.com` (string, required, fixed) - Redirect uri is used in oauth2.0 flow
+ public_offer(object, fixed-type)
    + `consent_text`: `Consent text` (string, required)
    + `consent`: `true` (boolean, required)

### `Legal_Entity_Request_Public_Short` 
+ name: Клініка Ноунейм (string, required) - full official name of legal entity
+ short_name: Ноунейм (string, optional) - short name of legal entity
+ public_name: Ноунейм (string, optional) - the name to show on public sources
+ type: MSP (string, required) - type of legal entity [MSP/PHARMACY]. MIS can't be created using this WS.
+ `owner_property_type`: STATE (string, required) - `Dictionary OWNER_PROPERTY_TYPE`
+ `legal_form`: 140 (string, required) - `Dictionary LEGAL_FORM`
+ edrpou: 5432345432 (string, required) -  Unified Register of Businesses and Organizations
+ kveds: 86.1 (array, required) - Ukrainian Industry Classification System, there is a check for required kved: 86.10, 86.21, 47.73
+ addresses (array[Address], required)
+ phones (array[Phone], required)
+ email: email@example.com (string, required) - email to contact person in charge from legal entity
+ website: `www.msp.com.ua` (string, optional) - legal entity website
+ receiver_funds_code: `AB12345` (string, optional) - treasure code [Код одержувача/розпорядника бюджетних коштів для Казначейства. Вказується за наявності.]
+ beneficiary: `Борисов Борис Борисович` (string, optional) - legal owner of legal entity [нформація про власника ЗОЗ, для ФОП не заповнюється]
+ `medical_service_provider` (MSP)
+ `archive`(array[Archive], optional)
+ security (object, fixed-type)
    + `redirect_uri`: `redirect_uri` (string, required, fixed) - Redirect uri is used in oauth2.0 flow
+ is_active: true (boolean, required)
+ inserted_by: `A65C8369-CE3A-44D6-839B-8856E3DC4CA3` (string, required)
+ inserted_at: `2005-10-30 10:45` (string, required) - timestamp
+ created_by_mis_client_id:  `A65C8369-CE3A-44D6-839B-8856E3DC4CA3` (string, required)
+ updated_at: `1991-08-19T00:00:00.000Z` (string, required)
+ updated_by: `userid` (string, required)


### `Legal_Entity_Related` 
+ merged_from_legal_entity (object, required)
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - merged_from legal entity id
    + name: Клініка Ноунейм (string, required) - full official name of legal entity
    + edrpou: 5432345432 (string, required) -  Unified Register of Businesses and Organizations
+ reason: на підставі наказу №1111 (string, required) - the legit documents which prove the relationship between legal entities
+ is_active: true (boolean, required) - whether relationship between legal entities is active
    - Default: true
+ inserted_at: `2005-10-30 10:45` (string, required) - timestamp
+ inserted_by: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - user id

## `Divisions`
### `Division`
+ name: Бориспільське відділення Клініки Ноунейм (string, required) - the full name of division
+ addresses (array[Address], required)
+ phones (array[Phone], required)
+ email: email@example.com (string, required) - division's email
+ working_hours (`workinghours`) - optional field, business hours by each day weekly, doesn't make any influence on business process and will be shown on portal and map.
+ type: clinic (enum, required) - division type
    - CLINIC
    - AMBULANT_CLINIC
    - FAP
+ external_id: `3213213` (string, optional)
+ location (Location, optional) - optional field. geographical location, if it's empty, division won't be shown on a map.

### workinghours
+ mon (array)
    - 08.00,12.00 (array[string])
    - 14.00,18.00 (array[string])
+ tue (array)
    - 08.00,12.00 (array[string])
+ wed (array)
    - 08.00,12.00 (array[string])
+ thu (array)
    - 08.00,12.00 (array[string])
+ fri (array)
    - 08.00,12.00 (array[string])
+ sat (array)
+ sun (array)

### `Division_Details`
+ id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ `legal_entity_id`: `c8aadb87-ecb9-41ca-9ad4-ffdfe1dd89c9` (string, required)
+ include Division
+ dls_id: `2872985` (string, optional)
+ dls_verified: true (boolean, optional)

### `Division_Declaration`
+ id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ `legal_entity_id`: `c8aadb87-ecb9-41ca-9ad4-ffdfe1dd89c9` (string, required)
+ name: Бориспільське відділення Клініки Ноунейм (string, required) - the full name of division
+ addresses (array[Address], required)
+ phones (array[Phone], required)
+ email: email@example.com (string, required) - division's email
+ type: clinic (enum, required) - division type
    - CLINIC
    - AMBULANT_CLINIC
    - FAP
+ external_id: `3213213` (string, optional)
+ dls_id: `2872985` (string, optional)
+ dls_verified: true (boolean, optional)


### `Division_Details_Cabinet`
+ id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ name: Бориспільське відділення Клініки Ноунейм (string, required) - the full name of division
+ addresses (array[Address], required)
+ phones (array[Phone], required)
+ email: email@example.com (string, required) - division's email


### `Division_Short_List`
+ id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ name: Бориспільське відділення Клініки Ноунейм (string, required)
+ type: clinic (enum, required)
    - CLINIC
    - AMBULANT_CLINIC
    - FAP
+ status: ACTIVE (enum, required)
    - ACTIVE
    - INACTIVE
+ dls_id: `2872985` (string, optional)
+ dls_verified: true (boolean, optional)

### `Division_Short`
+ id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ name: Бориспільське відділення Клініки Ноунейм (string, required)
+ `legal_entity_id`: d290f1ee-6c54-4b01-90e6-d701748f0851 (string, required)
+ type: CLINIC (enum, required)
    - CLINIC
    - AMBULANT_CLINIC
    - FAP
+ status: ACTIVE (enum, required)
    - ACTIVE
    - INACTIVE
+ mountain_group: false (boolean, optional)
+ dls_id: `2872985` (string, optional)
+ dls_verified: true (boolean, optional)

### `crud_division_post`
+ include `Division`

### `crud_division_get`
+ id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ include `Division`
+ status: ACTIVE (enum, required)
    - ACTIVE
    - INACTIVE
+ mountain_group: false (boolean, optional)
+ dls_id: `2872985` (string, optional)
+ dls_verified: true (boolean, optional)

## `Owners`
### `Owner`
+ first_name: Петро (string, required)
+ last_name: Іванов (string, required)
+ second_name: Миколайович (string, optional)
+ tax_id: 3015492563 (string, required)
+ birth_date: `1991-08-19T00:00:00.000Z` (string, required)
+ gender: MALE (string, required) - `Dictionary GENDER`
+ email: `email@example.com` (string, required)
+ documents (array[Document], optional)
+ phones (array[Phone], optional)
+ position (string, required): `P6`- `Dictionary POSITION`

## `Medical_Service_Providers`

### `crud_msp`
+ `legal_entity_id`: 5432345432 (string, required)
+ accreditation (MSP_Accreditation, optional)
+ licenses (array[MSP_License], required)

### `crud_msp_get`
+ include `crud_msp`

### `crud_msp_post`
+ include `crud_msp`

### `crud_msp_patch`
+ accreditation (MSP_Accreditation, optional)
+ licenses (array[MSP_License], required)

### `Medical_Service_Provider`
+ name: Клініка Ноунейм (string, required)
+ short_name: Ноунейм (string, required)
+ `legal_form`: 140 (string, required) - `Dictionary LEGAL_FORM`
+ public_name: ЦПМСД №1 (string, optional)
+ edrpou: 5432345432 (string, required)
+ licenses (array[MSP_License], required)
+ accreditation (MSP_Accreditation, optional)
+ addresses (array[Address], required)
+ phones (array[Phone], required)
+ email: `email@example.com` (string, required)

### `MSP_Short`
+ id: d290f1ee-6c54-4b01-90e6-d701748f0851
+ name: Клініка Ноунейм (string, required)
+ short_name: Ноунейм (string, required)
+ `legal_form`: 140 (string, required) - `Dictionary LEGAL_FORM`
+ edrpou: 5432345432 (string, required)

### `MSP_Details`
+ id: d290f1ee-6c54-4b01-90e6-d701748f0851
+ name: Клініка ЦПМСД №1 (string, required)
+ short_name: ЦПМСД №1 (string, required)
+ `legal_form`: 140 (string, required) - `Dictionary LEGAL_FORM`
+ public_name: ЦПМСД №1 (string, optional)
+ edrpou: 5432345432 (string, required)
+ status: `ACTIVE` (enum, required)
    + ACTIVE
    + CLOSED
+ email: `email@example.com` (string, required)
+ phones (array[Phone], required)
+ addresses (array[Address], optional)

### `MSP`
+ licenses (array[MSP_License], required)
+ accreditation (MSP_Accreditation, optional)

### `MSP_V2`
+ licenses (array[MSP_License_V2], required)
+ accreditation (MSP_Accreditation, optional)

## `Ukr_med_registries`
### `ukr_med_registry`
+ edrpou: 5432345432 (string, required)
+ name: Клініка Ноунейм (string, optional)

### `crud_ukr_med_registry_post`
+ include `ukr_med_registry`

### `crud_ukr_med_registry_get`
+ id: d290f1ee-6c54-4b01-90e6-d701748f0851 (string, required)
+ include `ukr_med_registry`
+ inserted_at: `1991-08-19T00:00:00.000Z` (string, required)
+ inserted_by: `userid` (string, required)
+ updated_at: `1991-08-19T00:00:00.000Z` (string, required)
+ updated_by: `userid` (string, required)

## `Access_Tokens`
### `Access_Token`
+ value: `SnNRdCtvU0tTOENBV2dLRUZwNmIzZz09` (string, required) - oAuth access token.
+ user_id: `3ff33ced-69dc-415a-b231-c6446898335a` (string, required) - User identifier
+ name: `access_token` (string, required) - oAuth token name
+ id: `3ff33ced-69dc-415a-b231-c6446898335a` - oAuth token identifier
+ expires_at: 1498749591 (number, required) - expiration date-time timestamp
+ details (object)
    + scope: `capitation_contracts:view capitation_contracts:create patients:view patients:create` (string, required) - List of scopes that is required in application business logic, separated by space
    + refresh_token: `my-oauth-refresh-token` (string, required) - oAuth refresh token
    + redirect_uri: `http://example.com/` (string, required) - Redirect URI
    + `grant_type`: `authorization_code` 
    + client_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - Client ID of authorized user.

### `Access_Token_1`
+ value: `SnNRdCtvU0tTOENBV2dLRUZwNmIzZz09` (string, required) - oAuth access token.
+ user_id: `3ff33ced-69dc-415a-b231-c6446898335a` (string, required) - User identifier
+ name: `change_password_token` (string, required) - oAuth token name
+ id: `3ff33ced-69dc-415a-b231-c6446898335a` - oAuth token identifier
+ expires_at: 1498749591 (number, required) - expiration date-time timestamp
+ details (object)
    + scope: `capitation_contracts:view capitation_contracts:create patients:view patients:create` (string, required) - List of scopes that is required in application business logic, separated by space
    + `grant_type`: `refresh_token` 
    + client_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - Client ID of authorized user.


## Shared

### `System_Logging`
+ inserted_at: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ inserted_by: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, required)
+ updated_at: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ updated_by: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required)

### Address
+ type: RESIDENCE (string, required) - `Dictionary ADDRESS_TYPE`. As for now Regisrtration and Residence types
+ country: UA (enum[string], required) - `Dictionary COUNTRY`
+ area: Житомирська (string) - one of Ukraianian area 
+ region: Бердичівський (string, optional) - district of area
+ settlement: Київ (string) - city name
+ `settlement_type`: CITY (string) - `Dictionary SETTLEMENT_TYPE` - type of settlement as city/town/village etc
+ settlement_id: 43432432 (string, required) - settlement identificator from uaadresses 
+ `street_type`: STREET (string, optional) - `Dictionary STREET_TYPE` - type of street as street/road/line etc
+ street: `вул. Ніжинська` (string, optional) - street name
+ building: 15 (string, required) - number of building
+ apartment: 23 (string, optional) - number of appartment
+ zip: 02090 (string, optional) - system of postal codes 


### Phone
+ type: MOBILE (string, required) - `Dictionary PHONE_TYPE` type of phone Land Line or Mobile. At least one of type must be present. Each type can be represented only once.
+ number: `+380503410870` (string, required) - phone number in format '+38/'

### Email
+ type: PERSONAL, PUBLIC (enum[string], required)
+ email: `email@example.com` (string, required)

### Document
+ type: PASSPORT (string, required) - `Dictionary DOCUMENT_TYPE`
+ number: АА120518 (string, required) - document issue number
+ issued_by: `Рокитнянським РВ ГУ МВС Київської області` (string, optional) - authority which issued the document
+ issued_at: `2017-02-28` (string, optional) - the date when document was issued

### `Medical_Certificate`
+ name: Диплом доктора медицини (string, required)
+ number: AA1234BC (string, required)
+ degree: `Doctor of Medicine (MD, Dr.MuD, Dr.Med)` (string, required)
+ issue_date: 2017-02-28 (string, required)
+ issued_by: Національний медичний університет імені О.О. Богомольця (string, required)
+ started_date: 2016-08-29T09:12:33.001Z (string, optional)
+ expiration_date: 2016-08-29T09:12:33.001Z (string, optional)

### `Medical_License`
+ category (enum, required)
    - Атестація на визначення знань і практичних навиків
+ type (enum, required)
    - диплом
+ issued_by: Кваліфікацйна комісія (string, required)
+ order_no: DV4312324 (string, required)
+ issued_date: 2017-02-28 (string, required)
+ expiry_date: 2017-02-28 (string, required)

### `Medical_Education`
+ institution_name: Академія Богомольця (string, required)
+ certificate_Number: DD123543 (string, required)
+ degree (enum, required)
    - Doctor of Medicine
    - Bachelor of Medicine
    - Bachelor of Surgery
    - Doctor of Osteopathic Medicine
    - Master of Clinical Medicine
+ start_date: 2017-02-28 (string, required)
+ finished_date: 2017-02-28 (string, required)
+ speciality (enum, required)
    - Загальна практика - сімейна медицина
    - Педіатрія
    - Підліткова терапія
    - Терапія

### `MSP_Accreditation`
+ category: друга (enum, required)
    - друга
    - перша
    - не акредитований
+ issued_date: `2017-02-28` (string, optional) - дата видачі
+ expiry_date: `2017-02-28` (string, optional)
+ order_no: fd123443 (string, required) - номер наказу МОЗ
+ order_date: `2017-02-28` (string, required) - дата наказу МОЗ


### `MSP_License`
+ license_number: fd123443 (string, optional)
+ issued_by: Кваліфікацйна комісія (string, required)
+ issued_date: `2017-02-28` (string, required)
+ expiry_date: `2017-02-28` (string, optional)
+ `active_from_date`: `2017-02-28` (string, required)
+ what_licensed: реалізація наркотичних засобів (string, optional)
+ order_no: ВА43234 (string, required) - номер наказу

### `MSP_License_V2`
+ license_number: fd123443 (string, optional)
+ type: MSP (string, required) - License type `Dictionary LICENSE_TYPE`
+ kveds: 86.10 (array, required) - Ukrainian Industry Classification System, there is a check that at least one of required kveds provided for specific license type
+ issued_by: Кваліфікацйна комісія (string, required)
+ issued_date: `2017-02-28` (string, required)
+ expiry_date: `2017-02-28` (string, optional)
+ `active_from_date`: `2017-02-28` (string, required)
+ what_licensed: реалізація наркотичних засобів (string, optional)
+ order_no: ВА43234 (string, required) - номер наказу

### `Bank_Details`
+ MFO: `351005` (string, required) - bank code
+ name: `Публічне акціонерне товариство «УкрСиббанк»` (string, required) - bank name
+ account_number(array, required)
    + `32009102701026` (string, required) - banks account number

### `Archive`
+ date: `2017-02-28` (string, required) - the date when paper documents were transferred to archive
+ place: `вул. Грушевського 15` (string, required) - the address of building where paper documents are

## OTPs
### OTP
+ id: `7d23bebb-1cf3-4221-bf21-18aada444756` (string, required)
+ status: `NEW` (enum, required)
    - NEW
    - CANCELED
    - VERIFIED
    - UNVERIFIED
+ `code_expired_at`: `2017-07-10T12:20:16.300597Z` (string, required)
+ active: true (boolean, required)

## Dashboards

### StatsByRegion
+ from_date: `2017-09-01` (string, optional)
+ to_date: `2017-09-02` (string, optional)
+ regions (array, required)
    + (object)
        + include (`StatsByRegionadd`)

### StatsByRegionadd
+ `region` (object, required)
    + include `Region`
+ `period` (object, required)
    + include `RegionStats`    
+ `total` (object, required)
    + include `RegionStats` 

### RegionStats
+ declarations_total: 100 (number, required)
+ declarations_created: 102 (number, required)
+ declarations_closed: 2 (number, required)
+ msps: 2 (number, required)
+ doctors: 15 (number, required)
+ pharmacies: 2 (number, required)
+ pharmacists: 6 (number, required)

### Region
+ id: `asSbcy12sYs8c` (string, required)
+ name: `Київ` (string, required)

### HistogramStats
+ period_type: DAY (string, required)
+ period_name: `2017-09-01` (string, required)
+ declarations_created: 0 (number, required)
+ declarations_closed: 0 (number, required)
+ declarations_active_start: 1 (number, required)
+ declarations_active_end: 1 (number, required)
+ medication_requests_created: 0 (number, required)
+ medication_requests_closed: 0 (number, required)
+ medication_requests_active_start: 1 (number, required)
+ medication_requests_active_end: 1 (number, required)

### Interval
+ from_date: `2017-02-01` (string, required)
+ to_date: `2017-02-30` (string, required)

### MainStats
+ declarations: 100 (number, required)
+ msps: 2 (number, required)
+ doctors: 15 (number, required)   

### `MainStats_Division`
+ stats (DivisionStats, required)
+ division (DivisionName, required)

### DivisionStats
+ declarations: 100 (number, required)
+ msps: 2 (number, required)
+ doctors: 15 (number, required)  

### DivisionName
+ id: `asSbcy12sYs8c` (string, required)
+ name: `Пединовка` (string, required)

### RegionReport
+ id: `asSbcy12sYs8c` (string, required)
+ name: `Київ` (string, required)

### DataEntriesDivisionMap
+ total_pages (number, required)
+ total_entries (number, required)
+ page_size (number, required)
+ page (number, required)
+ entries (array[EntriesDivisionMap], optional)

### DataEntriesEmployeesListMap
+ total_pages (number, required)
+ total_entries (number, required)
+ page_size (number, required)
+ page (number, required)
+ entries (array[EntriesEmployeesListMap], optional)

### EntriesDivisionMap
+ id: `asSbcy12sYs8c` (string, required)
+ name: `Aдоніс` (string, required)
+ type: CLINIC, AMBULANT_CLINIC, FAP (enum, required)
+ addresses (Address, optional)
+ contacts (ContactInfo, optional)
+ coordinates (Location, optional)
+ `legal_entity` (`LegalEntityMap`, required)

### EntriesEmployeesListMap
+ id: `7d23bebb-1cf3-4221-bf21-18aada444756` (string, required) - employee id
+ party (PartyMap)
    + specialities (array[Speciality], required)  - блок інформації про отримання сертифікату спеціалісту та проходження атестацій
    + is_available: true (boolean, required) 
+ division(object, required)
    + id: `7d23bebb-1cf3-4221-bf21-18aada444756` (string, required)
    + name: `Aдоніс` (string, required)
    + addresses (Address, optional)
+ `legal_entity` (object, required)
    + id: `7d23bebb-1cf3-4221-bf21-18aada444756` (string, required)
    + name: Клініка Ноунейм (string, required)    
    

### EntriesEmployeeMap
+ id: `7d23bebb-1cf3-4221-bf21-18aada444756` (string, required) - employee id
+ position: P1 (string, required) - employee position
+ employee_type: DOCTOR (string, required)
+ party (PartyDoctorMap)
+ division(object, required)
    + id: `asSbcy12sYs8c` (string, required)
    + name: `Aдоніс` (string, required)
    + type: CLINIC, AMBULANT_CLINIC, FAP (enum, required)
    + addresses (Address, required)
    + `legal_entity` (object, required)
        + id: `7d23bebb-1cf3-4221-bf21-18aada444756` (string, required)
        + name: Клініка Ноунейм (string, required)


### LegalEntityMap
+ name: Клініка Ноунейм (string, required)
+ short_name: Ноунейм (string, optional)
+ public_name: Ноунейм (string, optional)
+ type: MSP (string, required)
+ `owner_property_type`: STATE (string, required) - `Dictionary OWNER_PROPERTY_TYPE`
+ `legal_form`: 140 (string, required) - `Dictionary LEGAL_FORM`
+ edrpou: 5432345432 (string, required)
+ kveds: `["86.10", "47.73"]` (string, optional)
+ addresses (array[Address], required)
+ phones (array[Phone], required)
+ email: email@example.com (string, required)
+ mis_verified: true (string, optional)
+ nhs_verified: false (string, optional)
+ owner (OwnerMap)

### OwnerMap
+ id: `7d23bebb-1cf3-4221-bf21-18aada444756` (string, required) - employee id
+ position: P1 (string, required) - employee position
+ employee_type: OWNER (string, required)
+ party (PartyMap)

### PartyMap
+ id: `7d23bebb-1cf3-4221-bf21-18aada444756` (string, required)
+ first_name: Петро (string, required)
+ second_name: Миколайович (string, required)
+ last_name: Іванов (string, required)

### PartyDoctorMap
+ id: `7d23bebb-1cf3-4221-bf21-18aada444756` (string, required)
+ first_name: Петро (string, required)
+ second_name: Миколайович (string, required)
+ last_name: Іванов (string, required)
+ educations (array[Education], required)  - освіта
+ qualifications (array[Qualification], optional) - підвищення кваліфікації
+ specialities (array[Speciality], required)  - блок інформації про отримання сертифікату спеціалісту та проходження атестацій
+ is_available: true (boolean, required)
+ science_degree (ScienceDegree, optional)
+ working_experience: 10 (number, optional)
+ about_myself: `Закінчив всі можливі курси` (string, optional)


### EmployeeMap
+ id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - Employee identifier with `type=DOCTOR` who issued Medication Request.
+ last_name: `Іванов` (string, required)
+ first_name: `Петро` (string, required)
+ second_name: `Миколайович` (string, optional)
+ position: `P6` (string, required) - `Dictionary POSITION`
+ employee_type: `DOCTOR` (string, required) - `Dictionary: EMPLOYEE_TYPE`

### ContactInfo
+ email: email@example.com (string, optional)
+ phones (array[Phone], optional)

### Location
+ latitude: 30.1233 (number, required)
+ longitude: 50.32423 (number, required)

## DoctorsNew
### DoctorNew
+ educations (array[Education], required)  - освіта
+ qualifications (array[Qualification], optional) - підвищення кваліфікації
+ specialities (array[Speciality], required)  - блок інформації про отримання сертифікату спеціалісту та проходження атестацій
+ science_degree (ScienceDegree, optional)

### `DoctorNew_Short`
+ specialities (array[Speciality], required)

### `DoctorNew_Short_Single`
+ speciality (Speciality, required)

### Education
+ country: UA (string, required) - `Dictionary COUNTRY`
+ city: Київ (string, required)
+ institution_name: Академія Богомольця (string, required)
+ issued_date: 2017-02-28 (string, required)
+ diploma_number: DD123543 (string, required)
+ degree: MASTER (string, required) - `Dictionary EDUCATION_DEGREE`
+ speciality: Педіатр (string, required)


### ScienceDegree
+ country: UA (string, required) - `Dictionary COUNTRY`
+ city: Київ (string, required)
+ degree (string, required) - `Dictionary SCIENCE_DEGREE`
+ institution_name: Академія Богомольця (string, required)
+ diploma_number: DD123543 (string, required)
+ speciality: Педіатр (string, required)
+ issued_date: 2017-02-28 (string, required)

### Qualification
+ type: SPECIALIZATION (string, required) - `Dictionary QUALIFICATION_TYPE`
+ institution_name: Академія Богомольця (string, required)
+ speciality: Педіатр (string, required)
+ issued_date: 2017-02-28 (string, required) - дата отримання сертифікату
+ certificate_number: 2017-02-28 (string, required)
+ valid_to: 2017-02-28 (string, optional) - дійсний до
+ additional_info: додаткова інофрмація (string, optional) - додаткова інформація

### Speciality
+ speciality: THERAPIST (string, required) - `Dictionary SPECIALITY_TYPE`
+ speciality_officio: true (boolean, required) - speciality by position, one and only one should be true
+ level: FIRST (string, required) - `Dictionary SPECIALITY_LEVEL`
+ `qualification_type`: AWARDING (string, required) - `Dictionary SPEC_QUALIFICATION_TYPE`
+ attestation_name: Академія Богомольця (string, required) - орган що видав
+ attestation_date: 2017-02-28 (string, required) - дата отримання
+ valid_to_date: 2020-02-28 (string, required) - дата дії до
+ certificate_number: AB/21331 (string, required)

### `Speciality_party`
+ speciality: THERAPIST (string, required) - `Dictionary SPECIALITY_TYPE`
+ level: FIRST (string, required) - `Dictionary SPECIALITY_LEVEL`
+ `qualification_type`: AWARDING (string, required) - `Dictionary SPEC_QUALIFICATION_TYPE`
+ attestation_name: Академія Богомольця (string, required) - орган що видав
+ attestation_date: 2017-02-28 (string, required) - дата отримання
+ valid_to_date: 2020-02-28 (string, required) - дата дії до
+ certificate_number: AB/21331 (string, required)

### Affordance
+ action (string, required) - Affordance action.
+ url (string, required)

## Dictionaries
### `Dictionary`
+ name: DOCUMENT_TYPE (string, required) - Unique dictionary name
+ values (object)
    + key: value (string, optional) - List of dictionary entries as Key:Value pairs
+ labels (array)
    - SYSTEM
    - EXTERNAL
+ is_active: true (boolean, required)

## NHS Portal
### `nhs_declaration_list`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - id of the signed document stored on the Media content storage
+ employee_id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ division_id: `d290f1ee-6c54-4b01-90e6-d701748f0851`m (string, required)
+ scope (enum, required)
    - family_doctor
+ start_date: `2017-03-02` (string, required)
+ end_date: `2017-03-02` (string, required)
+ signed_at: `2017-03-02T10:45:16.000Z` (string, required)
+ status (enum, optional)
    - active
    - closed
+ person (`Person_Minimal`, required)
+ `legal_entity` (`Legal_Entity_Short`, required)
+ `declaration_request_id`: `74a6fae6-4207-4e03-a136-f2e70c6b0c02` (string, required)
+ reason: `manual_employee` (string, optional)
+ reason_description: `Згідно постанови 1 від 10.01.2017` (string, optional)

### `nhs_declaration_list_Public`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - id of the signed document stored on the Media content storage
+ declaration_number: `0000-12H4-245D` (string, required) - unique number of declaration.
+ `employee` (`Employee_For_Declaration_Minimal`, required)
+ `division` (`DivisionName`, required)
+ start_date: `2017-03-02` (string, required)
+ end_date: `2017-03-02` (string, required)
+ status (enum, optional)
    - active
    - closed
    - terminated
+ reason: `manual_employee` (string, optional)
+ reason_description: `Згідно постанови 1 від 10.01.2017` (string, optional)
+ person (`Person_Minimal`, required)
    + `birth_date`: `1991-08-19` (string, required)
+ `legal_entity` (`Legal_Entity_For_Declaration_Short`, required)
+ `declaration_request_id`: `74a6fae6-4207-4e03-a136-f2e70c6b0c02` (string, required)
+ `inserted_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `updated_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.

### `nhs_declaration`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ include `Declaration_Request_Details_Public`
+ `media_content`: `http://cs5.pikabu.ru/post_img/big/2015/12/04/5/1449210847155432089.jpg`,`http://www.readersdigest.ca/wp-content/uploads/2011/01/4-ways-cheer-up-depressed-cat.jpg`  (array, required)

## NHS Portal v2

### `person_short_v2`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ status: `active` (enum, required)
  - active
  - inactive
+ first_name: Петро (string, required)
+ last_name: Іванов (string, required)
+ second_name: Миколайович (string, optional)
+ birth_date: `1991-08-19` (string, required) - ISO Datetime.
+ birth_country: Україна (string, required) - країна народження
+ birth_settlement: Вінниця (string, required)
+ tax_id: 3126509816 (string, optional)
+ unzr: `19910819-00011` (string, optional)
+ gender (enum, required)
    - FEMALE
    - MALE
+ `authentication_method_current` (object, required)
    + type: `OTP` (enum, required)
        - OTP
        - OFFLINE
        - NA
    + number: `+380937777785` (string, required)
+ documents (array[Document],optional) 

### `Nhs_Declaration_v2`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - id of the signed document stored on the Media content storage
+ declaration_number: `0000-12H4-245D` (string, required) - unique number of declaration.
+ `legal_entity` (`Legal_Entity_Short`, required)
  + addresses (array[Address], optional)
+ start_date: `2017-03-02` (string, required)
+ end_date: `2017-03-02` (string, required)
+ signed_at: `2017-03-02T10:45:16.000Z` (string, required)
+ status (enum, optional)
    - active
    - closed
+ person (`Person_Minimal`, required)
    + birth_date: `1991-08-19` (string, required)
    + birth_country: `Україна` (string, required)
    + birth_settlement: `Вінниця` (string, required)
    + gender: MALE, FEMALE (enum[string], required) + tax_id: 3126509816 (string, optional)
+ secret: secret (string, required)
+ documents (array[Document], required)
+ addresses (array[Address], required)
+ phones (array[Phone], optional)
+ `authentication_methods` (array[Authentication_Method], required)
+ preferred_way_communication: email (enum, optional) - the way how a patient wants to be reached
    - email
    - phone
+ `division` (`DivisionName`, required)
  + addresses (array[Address], optional)
  + phones (array[Phone], required)
  + email: email@example.com (string, required) - division's email
  + status: ACTIVE (enum, required)
    - ACTIVE
    - INACTIVE
  + type: clinic (enum, required) - division type
    - CLINIC
    - AMBULANT_CLINIC
    - FAP
  + mountain_group: false (boolean, optional)
+ `employee` (object, required)
   + id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
   + position: P8 (string, required) - `Dictionary POSITION`
   + start_date: `2017-03-02T10:45:16.000Z` (string, required)
   + end_date: `2018-03-02T10:45:16.000Z` (string, optional)
   + status: APPROVED, DISMISSED (enum, required)
   + `employee_type`: DOCTOR (string, required) - `Dictionary EMPLOYEE_TYPE`
   + party (`Party_Short`)
   + doctor (DoctorNew_Short, optional)
+ scope (enum, required)
    - family_doctor
+ `declaration_request_id`: `74a6fae6-4207-4e03-a136-f2e70c6b0c02` (string, required)
+ reason: `manual_employee` (string, optional)
+ reason_description: `Згідно постанови 1 від 10.01.2017` (string, optional)


## Global Parameters and Products
### `Global_Parameters`
+ `declaration_term`: `30` (string, required) - термін дії декларації
+ `declaration_request_expiration`: `30` (string, required) - термін дії заявки на створення декларації
+ `employ_request_expiration`: `30` (string, required) - термін дії заявки на створення працівника
+ `verification_request_expiration`: `30` (string, required) - термін дії заявки на верифікацію декларації
+ adult_age: `18` (string, required) - вік повноліття
+ billing_date: `2` (string, required) - дата біллінгу (1-28)

## UAddresses
### `Response_Street`
+ id: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string) - Address ID
+ settlement_name: Новосілки (string) - City name
+ street_type: вул (string) - Type of street
+ street_name: `Єрмоленка Володимира` (string) - Street name
+ aliases (array, optional)

### `Response_Settlement_Short`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string) - Settlement ID
+ settlement_name: Новосілки (string) - City name

### `Response_Settlement`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string) - Settlement ID
+ region_id: `99310bc4-ac7c-4f1f-bc29-b3ae25bd96bc` (string)
+ region: Київ (string) -  Region name
+ district: `Києво-Святошинський` (string) - District name
+ district_id: `99310bc4-ac7c-4f1f-bc29-b3ae25bd96bc` (string)
+ settlement_name: Новосілки (string) - City name
+ mountain_group: 0 (string) - Mountain group
+ type: `СITY` (string, optional) - Settlement type
+ koatuu: 3520380802 (string, optional) - KOATUU code
+ parent_settlement: Берегово (string, optional) - Parent settlement name
+ parent_settlement_id: `99310bc4-ac7c-4f1f-bc29-b3ae25bd96bc` (string)

### `Response_Region`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string) - Region ID
+ region: Київ (string) -  Region name
+ koatuu: 3520380802 (string, optional) - KOATUU code

### `Response_District_Short`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string) - District ID
+ district: `Києво-Святошинський` (string) - District name

### `Response_District`
+ id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string) - District ID
+ region: Київ (string) -  Region name
+ region_id: `c4c0f907-8b60-483e-bbf6-dfb34ab91574` (string)
+ district: `Києво-Святошинський` (string) - District name
+ koatuu: 3520380802 (string, optional) - KOATUU code

### `Create_Settlement`
+ region: Київ (string, required) -  Region name
+ district: `Києво-Святошинський` (string, required) - District name
+ settlement_name: Новосілки (string, required) - City name

### `Create_Street`
+ region: Київ (string, required) -  Region name
+ district: `Києво-Святошинський` (string, required) - District name
+ settlement_name: Новосілки (string, required) - City name
+ street_type: вул (string, required) - Type of street
+ street_name: `Єрмоленка Володимира` (string, required) - Street name
+ street_number: 67 (string, required) - Number of building
+ postal_code: 02140 (string, required) - Postal code

## Users
### User (object)
+ email: `john@example.com` (string, required) - User email.

### `User_Data` (User)
+ settings (object) - User settings.
+ priv_settings (object) - User private settings.

### `User_Response` (User_Data)
+ id: `user-1380df72-275a-11e7-93ae-92361f002671` (string) - Internal user ID, a UUID string.
+ `created_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `updated_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.

## Drugs
### `Drug_Response`
+ `id`: `ae9bf68e-3c98-4027-9211-535f7dad7a87` (string, required)
+ `name`: `Аміодарон 200мг таблетки` (string, required)
+ `form`: PILL (string, required) - `Dictionary MEDICATION_FORM`
+ `innm` (`Innm_Public_Response_Short`, required) 
+ `dosage` (`Dosage_drug`, required)
+ `packages` (array [`Medication_package`], required)

### `Medication_package`
+ `container_dosage` (`Dosage_container`, required)
+ `package_qty`: 30 (number, required)
+ `package_min_qty`: 10 (number, required)

## Complex FHIR Types
### `Reference`
+ identifier (Identifier)

### `Identifier`
+ `type`(Codeable_Concept, required) - Description of identifier
+ `value` : `9183a36b-4d45-4244-9339-63d81cd08d9c` (string, required)- The value that is unique

### `Codeable_Concept`
+ `coding` (array, required, fixed-type)
    + (object)
        + include `Coding`
+ text (string, optional)

### `Coding`
+ system : `eHealth/resources` (string, optional)
+ code : `patient` (string, required) - Symbol in syntax defined by the system

### `Duration`
+ value: 10 (number, optional) - The value of the measured amount. The value includes an implicit precision in the presentation of the value
+ unit: `days` (string, optional) - A human-readable form of the unit
+ system: `eHealth/ucum/units` (string, optional) - The identification of the system that provides the coded form of the unit
+ code: d (string, optional) - A computer processable form of the unit in some unit representation system

### `Period`
+ start : `2018-08-02T10:45:16.000Z`(string, required) - C? Starting time with inclusive boundary
+ end : `2018-08-02T11:00:00.000Z`(string, optional) - C? End time with inclusive boundary, if not ongoing

### `Quantity`
+ value : `13,5` (number, required)
+ comparator : `>` (string, optional)
+ unit : `mg` (string, required)
+ system : `eHealth/ucum/units` (string, optional)
+ code: `mg` (string, optional)

### `Simple_Quantity`
+ value : `13,5` (number, required)
+ unit : `mg` (string, required)
+ system : `eHealth/ucum/units` (string, optional)
+ code: `mg` (string, optional)

### `Ratio`
+ numerator (Simple_Quantity, required)
+ denominator (Simple_Quantity, required)

### `Range`
+ low (Simple_Quantity, required)
+ high (Simple_Quantity, required)

### Timing
+ event: `2017-04-20T19:14:13Z` (array[string], optional) - When the event occurs. ISO 8601 date and time in UTC timezone.
+ repeat (object, optional)
    - One Of
        + bounds_duration (Duration)
        + bounds_range (Range)
        + bounds_period (Period)
    + count: 2 (number, optional) - Number of times to repeat
    + count_max: 4 (number, optional) - Maximum number of times to repeat
    + duration: 4 (number, optional) - How long when it happens
    + duration_max: 6 (number, optional) - How long when it happens Max
    + duration_unit: d (string, optional) - unit of time UCUM
    + frequency: 1 (number, optional) - Event occurs frequency times per period
    + frequency_max: 2 (number, optional) - Event occurs up to frequencyMax times per period
    + period: 4 (number, optional) - Event occurs frequency times per period
    + period_max: 6 (number, optional) - Upper limit of period
    + period_unit: d (string, optional) - unit of time UCUM
    + `day_of_week`: mon (array[string], optional) - day of week
    + `time_of_day`: `2017-04-20T19:14:13Z` (array[string], optional) - Time of day for action
    + when: WAKE (array[string], optional) - Regular life events the event is tied to
    + offset: 4 (number, optional) - Minutes from event before or after
+ code (Codeable_Concept, optional)
    + coding (array, fixed-type)
        + (Coding)
            + system: `TIMING_ABBREVIATIONS` (string)

### `Dose_and_Rate`
+ type (Codeable_Concept, optional)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/dose_and_rate` (string, required)
            + code: 'ordered' (string, required)
- One Of
    + dose_range (Range)
    + dose_quantity (Simple_Quantity)
- One Of
    + rate_ratio (Ratio)
    + rate_range (Range)
    + rate_quantity (Simple_Quantity)

## Medications
### `Innm_Request`
+ `sctid`: `52574003` (string, optional) - innm CNOMED code
+ `name`: `Аміодарон` (string, required) - innm local name
+ `name_original`: `Amiodarone` (string, required) - innm original name

### `Innm`
+ `sctid`: `52574003` (string, required) - innm CNOMED code
+ `name`: `Аміодарон` (string, required) - innm local name
+ `name_original`: `Amiodarone` (string, required) - innm original name

### `Innm_Public_Response_Short`
+ `id`: `c7d52544-0bd4-4129-97b0-2d72633e0490` (string, required)
+ include `Innm`

### `Innm_Response_Short`
+ `id`: `c7d52544-0bd4-4129-97b0-2d72633e0490` (string, required)
+ include `Innm`
+ is_active: true (boolean, required)

### `Innm_Response`
+ `id`: `c7d52544-0bd4-4129-97b0-2d72633e0490` (string, required)
+ include `Innm`
+ is_active: true (boolean, required)
+ inserted_at: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ inserted_by: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, required)
+ updated_at: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ updated_by: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required)

### `Dosage_drug`
+ `numerator_unit`: MG (string, required) - `Dictionary MEDICATION_UNIT`
+ `numerator_value`: 200 (number, required)
+ `denumerator_unit`: PILL (string, required) - `Dictionary MEDICATION_UNIT`
+ `denumerator_value`: 1 (number, required)

### `Dosage_container`
+ `numerator_unit`: PILL (string, required) - `Dictionary MEDICATION_UNIT`
+ `numerator_value`: 1 (number, required)
+ `denumerator_unit`: PILL (string, required) - `Dictionary MEDICATION_UNIT`
+ `denumerator_value`: 1 (number, required)

### `Innm_Dosage_for_Medication_request`
+ `id`: `c7d52544-0bd4-4129-97b0-2d72633e0490` (string, required)
+ `form`: PILL (string, required) - `Dictionary MEDICATION_FORM`
+ `dosage` (`Dosage_drug`, required)
+ `container` (`Dosage_container`, required)
+ `request_qty`: 10 (number, required)

### `Innm_Dosage_for_Medication_request_Responce`
+ `medication_id` : `4a63b858-c138-4921-9341-ae9e384bcbd6` (string, required) - `Identifier medication with type **INNM_DOSAGE**`
+ `medication_name`: `Аміодарон 200мг таблетки` (string, required) - `Name of medication with type **INNM_DOSAGE**`
+ `form`: PILL (string, required) - `Dictionary MEDICATION_FORM`
+ `dosage` (`Dosage_drug`, required) - Dosage of innm_dosage object
+ `medication_qty`: 10 (number, required) - Medication quantity isuued by the doctor

### `Manufacturer`
+ `name` : `ПАТ "Київський вітамінний завод"` (string, required) 
+ `country` : `UA` (string, required) - `Dictionary COUNTRY`

### `Ingredient_request`
+ `id` : `1349a693-4db1-4a3f-9ac6-8c2f9e541982` (string, required)
+ `dosage` (`Dosage_drug`, required)
+ `is_primary` : true (boolean, required) 

### `Ingredient`
+ `id` : `1349a693-4db1-4a3f-9ac6-8c2f9e541982` (string, required)
+ `name` : `Амідарон` (string, required)
+ `dosage` (`Dosage_drug`, required)
+ `is_primary` : true (boolean, required) 

### `INNM_Dosage_Request`
+ `name` : `Амідарон` (string, required)
+ `form` :  PILL (string, required) - `Dictionary MEDICATION_FORM`
+ `ingredients` (array, required)
    + (object)
        + include `Ingredient_request`

### `INNM_Dosage_Response_Short`
+ `id` : `09b2bffb-699a-43c0-bc9a-5066d9b9b5a8` (string, required) 
+ include `INNM_Dosage_Response`
+ `is_active` : true (boolean, required)

### `INNM_Dosage_Response`
+ `id` : `09b2bffb-699a-43c0-bc9a-5066d9b9b5a8` (string, required) 
+ `name` : `Амідарон` (string, required)
+ `form` :  PILL (string, required) - `Dictionary MEDICATION_FORM`
+ `ingredients` (array, required)
    + (object)
        + include `Ingredient`
+ `is_active` : true (boolean, required)
+ inserted_at: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ inserted_by: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, required)
+ updated_at: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ updated_by: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required)

### `Medication_Request`
+ `name` : `Амідарон` (string, required)
+ `manufacturer` (`Manufacturer`, optional)
+ `code_atc` (array, required)
  + `М01АЕ01` ([string])
  + `C01BD01` ([string])
+ `form` :  PILL (string, required) - `Dictionary MEDICATION_FORM`
+ `container` (`Dosage_container`, required)
+ `package_qty`: 30 (number, optional)
+ `package_min_qty`: 10 (number, optional)
+ `certificate` : `UA/4514/01/01` (string, optional)
+ `certificate_expired_at` : `2021-02-09` (string, optional)
+ daily_dosage: 12 (string, optional) - Daily dose of medication, recommended by WHO
+ `ingredients` (array, required)
    + (object)
        + include `Ingredient_request`

### `Medication_Response`
+ `id` : `09b2bffb-699a-43c0-bc9a-5066d9b9b5a8` (string, required) 
+ `name` : `Амідарон` (string, required)
+ `manufacturer` (`Manufacturer`, optional)
+ `code_atc` (array, required)
  + `М01АЕ01` ([string])
  + `C01BD01` ([string])
+ `form` :  PILL (string, required) - `Dictionary MEDICATION_FORM`
+ `container` (`Dosage_container`, required)
+ `package_qty`: 30 (number, optional)
+ `package_min_qty`: 10 (number, optional)
+ daily_dosage: 12 (string, optional) - Daily dose of medication, recommended by WHO
+ `certificate` : `UA/4514/01/01` (string, optional)
+ `certificate_expired_at` : `2021-02-09` (string, optional)
+ `ingredients` (array, required)
    + (object)
        + include `Ingredient`
+ `is_active` : true (boolean, required)
+ inserted_at: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ inserted_by: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, required)
+ updated_at: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ updated_by: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required)

### `Medication_Response_Short`
+ `id` : `09b2bffb-699a-43c0-bc9a-5066d9b9b5a8` (string, required) 
+ include `Medication_Response`
+ `is_active` : true (boolean, required)

### `Medication_Short`
+ `name` : `Амідарон` (string, required)
+ `type`: `MEDICATION` (string, required)
+ `manufacturer` (`Manufacturer`, optional)
+ `form` :  PILL (string, required) - `Dictionary MEDICATION_FORM`
+ `container` (`Dosage_container`, required)

### `Medical_Program_Response`
+ `id`: `59781de0-2e64-4359-b716-bcc05a32c10f` (string, required) - `Medical program Identifier`
+ `name`: `program 'DOSTUPNI LIKI'` (string, required) - `Medical program name`


### `Program_medications_Request`
+ `medication_id`: `59781de0-2e64-4359-b716-bcc05a32c10f`(string, required) -  Medication Identifier
+ `medical_program_id`: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, required) -  Medical program Identifier
+ `reimbursement` (object, required)
    + include `Reimbursement`
+ `wholesale_price`: 148.50 (string, required) - factory gate price for package of medications
+ `consumer_price`: 150.00 (string, required) - consumer price for package of medications
+ `daily_dosage`: 200  (string, required) - recommended daily dosage of medication
+ `reimbursement_daily_dosage`: 10.4858 (string, required) - reimbuersement amount for recommended daily dosage of medication
+ `estimated_payment_amount`: 34.50 (string, required) - the estimatied amount which patient should pay for package of medications after reimbursment  

### `Program_medications_Update_Request`
+ `is_active`: true (boolean, optional)
+ `medication_request_allowed`: true (boolean, optional)
+ `reimbursement` (object, optional)
    + include `Reimbursement`
+ `wholesale_price`: 148.50 (string, required) - factory gate price for package of medications
+ `consumer_price`: 150.00 (string, required) - consumer price for package of medications
+ `daily_dosage`: 200  (string, required) - recommended daily dosage of medication
+ `reimbursement_daily_dosage`: 10.4858 (string, required) - reimbuersement amount for recommended daily dosage of medication
+ `estimated_payment_amount`: 34.50 (string, required) - the estimatied amount which patient should pay for package of medications after reimbursment  

### `Reimbursement`
+ `type`: `fixed` (string, required) - fixed or external type of reimbursement (Dictionary REIMBURSEMENT_TYPE)
+ `reimbursement_amount`: 450 (number, optional) - Amount to reimburse for medication package by medical_program

### `Program_medications_Response`
+ `id` : `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) 
+ `medication` (`Medication_Response_Short`, required)
+ `medical_program` (`Medical_Program_Response`, required)
+ `medication_request_allowed`: true (boolean, required) - indicator whether medication is allowed to use in new medication request
+ `reimbursement` (object, required)
    + include `Reimbursement`
+ `wholesale_price`: 148.50 (string, required) - factory gate price for package of medications
+ `consumer_price`: 150.00 (string, required) - consumer price for package of medications
+ `daily_dosage`: 200  (string, required) - recommended daily dosage of medication
+ `reimbursement_daily_dosage`: 10.4858 (string, required) - reimbuersement amount for recommended daily dosage of medication
+ `estimated_payment_amount`: 34.50 (string, required) - the estimatied amount which patient should pay for package of medications after reimbursment  
+ `is_active` : true (boolean, required) - flag for activation/deactivation
+ include `System_Logging`

### `Program_medications_List`
+ `id` : `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
+ `medical_program_id`: `042a3b20-bb08-4e50-83ee-ef23c3b1c0c8` (string, required) - medical program identifier
+ `medical_program_name`: `Доступні ліки` (string, required) - medical program name
+ `medication_id`: `59781de0-2e64-4359-b716-bcc05a32c10f`(string, required) -  Medication Identifier
+ `medication_name`: `Аритміл` (string, required) - Medication name
+ `form` :  PILL (string, optional) - `Dictionary MEDICATION_FORM`
+ `manufacturer` (`Manufacturer`, optional)
+ `innm_id`: `5052fcaf-58a0-461b-9e98-d60243a1773e` (string, required) - INNM Identifier
+ `innm_name`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - INNM name
+ `reimbursement_amount`: 15 (number, optional) - Amount to reimburse for one medication_unit by medical_program
+ `wholesale_price`: 148.50 (string, required) - factory gate price for package of medications
+ `consumer_price`: 150.00 (string, required) - consumer price for package of medications
+ `daily_dosage`: 200  (string, required) - recommended daily dosage of medication
+ `reimbursement_daily_dosage`: 10.4858 (string, required) - reimbuersement amount for recommended daily dosage of medication
+ `estimated_payment_amount`: 34.50 (string, required) - the estimatied amount which patient should pay for package of medications after reimbursment  

### `Program_medications_ID`
+ `id` : `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - program_medications_id
+ `innm` (object, required)
    + `id`: `c7d52544-0bd4-4129-97b0-2d72633e0490` (string, required) - innm id
    + `name`: `Аміодарон` (string, required) - innm name
    + `form`: PILL (string, required) - `Dictionary MEDICATION_FORM` - innm form
    + `ingredients` (array, required)
        + (object)
            + include (`Dosage_drug`, required) - substances dosage in innm
            + `substance_name`: `Аміодарон` (string, optional) - substance name
            + `is_primary` : true (boolean, required) 
+ `medications` (object, required)
    + `medication_id` : `4a63b858-c138-4921-9341-ae9e384bcbd6` (string, required)
    + `name`: `Аміодарон 5мг` (string, required) - medication name 
    + `form`: PILL (string, required) - `Dictionary MEDICATION_FORM` - medication form
    + `manufacturer` (`Manufacturer`, optional) 
    + `ingredients` (array, required)
        + (object)
            + include (`Dosage_drug`, required) - innm dosage in medication
            + `innm_name`: `Аміодарон`(string, required) 
            + `is_primary` : true (boolean, required) 
+ `medical_program` (`Medical_Program_Response`, required)
+ `reimbursement` (`Reimbursement`, required)
+ `wholesale_price`: 148.50 (string, required) - factory gate price for package of medications
+ `consumer_price`: 150.00 (string, required) - consumer price for package of medications
+ `daily_dosage`: 200  (string, required) - recommended daily dosage of medication
+ `reimbursement_daily_dosage`: 10.4858 (string, required) - reimbuersement amount for recommended daily dosage of medication
+ `estimated_payment_amount`: 34.50 (string, required) - the estimatied amount which patient should pay for package of medications after reimbursment  
+ `is_active` : true (boolean, required) - flag for activation/deactiovation
+ `medication_request_allowed`: true (boolean, required) - flag whether medications are allowed to be dispensed by the program

### `Black_list_user_Request`
+ `tax_id`: `3126509816` (string, required) - tax_id by party_id 

### `Black_list_user_Response`
+ `id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - black list user id
+ `tax_id`: `3126509816` (string, required) - tax_id by party_id
+ `is_active`: true (boolean, required) - flag for activation/deactiovation
+  `parties` (array[`Person_Short_BlackList`], required)
+ inserted_at: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ inserted_by: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, required)
+ updated_at: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ updated_by: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required)

### `Party_user_Response`
+ `id`: `585044f5-1272-4bca-8d41-8440eefe7d26` (string, required) - Person identifier
+ `user_id`: `09106b70-18b0-4726-b0ed-6bda1369fd52` (string, optional) - user Identifier
+ `party_id`: `79a91507-d409-49fc-b373-934b59c4f694` (string, optional) - Party Identifier
+ `first_name`: `Петро` (string, required)
+ `last_name`: `Іванов` (string, required)
+ `second_name`: `Миколайович` (string, optional)
+ `birth_date`: `1991-08-19T00:00:00.000Z` (string, required)
+ inserted_at: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ updated_at: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.

### `Person_Short_BlackList`
+ `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ `first_name`: Петро (string, required)
+ `last_name`: Іванов (string, required)
+ `second_name`: Миколайович (string, optional)
+ `birth_date`: `1991-08-19` (string, required) - ISO Datetime.

## `Medication request Request`
### `Medication_request_Request_post_data`
+ `person_id`: `585044f5-1272-4bca-8d41-8440eefe7d26` (string, required) - Person identifier
+ `employee_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - Employee identifier with `type=DOCTOR` who issued Medication Request.
+ `division_id`: `881d6dee-dd3d-43f3-8983-922354c0e6ce` (string, required) - Division identifier where issued Medication Request.
+ `created_at`: `2017-08-17` (string, required) - Medication request creation date, which is determined by the external system. Format *DATE '2017-09-07'*
+ `started_at`: `2017-08-17` (string, required) - Start date of a treatment period, which is determined by the external system. Greater or equal to **created_at**. Format *DATE '2017-09-07'*
+ `ended_at`: `2017-09-16` (string, required) - End date of a treatment period, which is determined by the external system. Greater or equal to **started_at**. Format *DATE '2017-10-07'*
+ `medication_id` : `1349a693-4db1-4a3f-9ac6-8c2f9e541982` (string, required) - `Medication (type INNM_DOSAGE) identifier`
+ `medication_qty`: 10 (number, required) - Medication quantity isuued by the doctor
+ `medical_program_id`: `59781de0-2e64-4359-b716-bcc05a32c10f` (string, optional) - `Medical program Identifier`
+ intent: plan (enum, required) - Represents the medication request purpose. Dictionary MEDICATION_REQUEST_INTENT 
    - plan - The request represents an intention to ensure something occurs without providing an authorization for others to act.
    - order - The request represents a request/demand and authorization for action.
+ category: community (enum, required) - Type of medication usage. Dictionary MEDICATION_REQUEST_CATEGORY
    - community - Includes requests for medications to be administered or consumed by the patient in their home
+ `context`(Reference, optional, fixed-type)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
+ `dosage_instruction` (array, optional, fixed-type)
    + (Dosage_Instruction)

### `Medication_request_Request_Qualify_post_data`
+ `person_id`: `585044f5-1272-4bca-8d41-8440eefe7d26` (string, required) - Person identifier
+ `employee_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - Employee identifier with `type=DOCTOR` who issued Medication Request.
+ `division_id`: `881d6dee-dd3d-43f3-8983-922354c0e6ce` (string, required) - Division identifier where issued Medication Request.
+ `created_at`: `2017-08-17` (string, required) - Medication request creation date, which is determined by the external system. Format *DATE '2017-09-07'*
+ `started_at`: `2017-08-17` (string, required) - Start date of a treatment period, which is determined by the external system. Greater or equal to **created_at**. Format *DATE '2017-09-07'*
+ `ended_at`: `2017-09-16` (string, required) - End date of a treatment period, which is determined by the external system. Greater or equal to **started_at**. Format *DATE '2017-10-07'*
+ `medication_id` : `1349a693-4db1-4a3f-9ac6-8c2f9e541982` (string, required) - Medication identified
+ `medication_qty`: 10 (number, required) - Medication quantity isuued by the doctor
+ intent: plan (enum, required) - Represents the medication request purpose. Dictionary MEDICATION_REQUEST_INTENT 
    - plan - The request represents an intention to ensure something occurs without providing an authorization for others to act.
    - order - The request represents a request/demand and authorization for action.
+ category: community (enum, required) - Type of medication usage. Dictionary MEDICATION_REQUEST_CATEGORY
    - community - Includes requests for medications to be administered or consumed by the patient in their home
+ `context`(Reference, optional, fixed-type)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
+ `dosage_instruction` (array, optional, fixed-type)
    + (Dosage_Instruction)


### `Medication_request_Request_Public_Response`
+ `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Medication Request request identifier
+ `status`: `NEW` (string, required) - Medication Request status. Find available **statuses** on State Charts wiki page
+ `request_number` : `0000-243P-1X53-EH38` (string) - Public medication request human readable number
+ `created_at`: `2017-08-17` (string, required) - Medication request creation date, which is determined by the external system. Format *DATE '2017-09-07'*
+ `started_at`: `2017-08-17` (string, required) - Start date of a treatment period, which is determined by the external system. Greater or equal to **created_at**. Format *DATE '2017-09-07'*
+ `ended_at`: `2017-09-16` (string, required) - End date of a treatment period, which is determined by the external system. Greater or equal to **started_at**. Format *DATE '2017-10-07'*
+ `dispense_valid_from`: `2017-08-17` (string, required) - Start date of dispense period, which is determined by the external system. Format *DATE '2017-09-07'*
+ `dispense_valid_to`: `2017-09-16` (string, required) - End date of dispense period, which is determined by the external system. Greater or equal to **dispense_valid_from**. Format *DATE '2017-10-07'*
+ `legal_entity` (`Legal_Entity_Short`, required)
    + `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ `division` (`Division_Details`, required)
+ `employee` (Employee_Minimal, required)
+ `person` (`Person_Medication_Request`)            
+ `medication_info` (`Innm_Dosage_for_Medication_request_Responce`, required)
+ `medical_program` (`Medical_Program_Response`, optional)
+ intent: plan (enum, required) - Represents the medication request purpose. Dictionary MEDICATION_REQUEST_INTENT 
    - plan - The request represents an intention to ensure something occurs without providing an authorization for others to act.
    - order - The request represents a request/demand and authorization for action.
+ category: community (enum, required) - Type of medication usage. Dictionary MEDICATION_REQUEST_CATEGORY
    - community - Includes requests for medications to be administered or consumed by the patient in their home
+ `context`(Reference, optional, fixed-type)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
+ `dosage_instruction` (array, optional, fixed-type)
    + (Dosage_Instruction)

### `Qualify_Medication_request_Request_List_program_post_data`
+ `id`: `59781de0-2e64-4359-b716-bcc05a32c10f` (string,required) - `Medical program Identifier`

### `Dosage_Instruction`
+ sequence: 1 (number, optional) - The order of the dosage instructions
+ text: `0.25mg PO every 6-12 hours as needed for menses from Jan 15-20, 2015.  Do not exceed more than 4mg per day` (string, optional) - Free text dosage instructions e.g. SIG
+ `additional_instruction` (array, optional, fixed-type)
    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
             + system: `eHealth/SNOMED/additional_dosage_instructions` (string)
             + code: `311504000` (string)
+ `patient_instruction`: `0.25mg PO every 6-12 hours as needed for menses from Jan 15-20, 2015.  Do not exceed more than 4mg per day` (string, optional) - Patient or consumer oriented instructions
+ timing (Timing, optional)
- One Of
    + as_needed_boolean: true (boolean)
    + as_needed_codeable_concept (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding
                + system: `eHealth/SNOMED/medication_as_needed_reason_codes` (string)
                + code: `144008` (string)
+ site (Codeable_Concept) - Body site to administer to
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/SNOMED/anatomical_structure_administration_site_codes` (string)
            + code: `344001` (string)
+ route (Codeable_Concept) - How drug should enter body
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/SNOMED/route_codes` (string)
            + code: `46713006` (string)
+ method (Codeable_Concept) - Technique for administering medication
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/SNOMED/administration_methods` (string)
            + code: `419747000` (string)
+ `dose_and_rate` (Dose_and_Rate, optional)
+ `max_dose_per_period` (Ratio, optional)
+ `max_dose_per_administration` (Simple_Quantity, optional)
+ `max_dose_per_lifetime` (Simple_Quantity, optional)

### `Qualify_Medication_request_Request_Responce`
+ `program_id`: `59781de0-2e64-4359-b716-bcc05a32c10f` (string, required) - `Medical program Identifier`
+ `program_name` : `Програма "Доступні ліки"`(string, required)
+ `status` : `INVALID` (enum, required) - Status for ability use program for this Medication request Request
    - VALID
    - INVALID
+ `rejection_reason` : ` Innm not on the list of approved innms for program 'DOSTUPNI LIKI' !` (string) - Reason to fetch invalid status

### `Program_medications_for_Qualify`
+ `medication_id`: `59781de0-2e64-4359-b716-bcc05a32c10f`(string, required) -  Medication Identifier
+ `medication_name`: `Амлодипін-КВ ` (string, required) - Medication name
+ `form` :  PILL (string, optional) - `Dictionary MEDICATION_FORM`
+ `manufacturer` (`Manufacturer`, optional)
+ `reimbursement_amount`: 15 (number, optional) - Amount to reimburse for one medication_unit by medical_program
+ wholesale_price: 25.14 (number, optional) - Wholesale pricing per package, UAH
+ consumer_price: 34.03 (number, optional) - Retail price for packaging, UAH
+ `reimbursement_daily_dosage`: 1.4438 (number, optional) - The amount of the compensation of the daily dose of the medical product, UAH
+ `estimated_payment_amount`: 5.15 (number, optional) - Amount of additional payment for packing, UAH
+ `package_min_qty`: 20 (number, optional) - indivisible part of medicine pacage
+ `package_qty`: 20 (number, optional) - quantity of medicine in a pacage

### `Qualify_by_ID_Request_for_Medication_request_Responce`
+ include `Qualify_Medication_request_Request_Responce`
+ `participants` (array, required)
    + (object)
        + include `Program_medications_for_Qualify`

## `medical_programs`
### `medical_programs_request`
+ `name`: `Доступні ліки` (string, required) - medical program name that is used on govermental level
+ `same_mnn_in_treatment_period`: true (boolean, required) - Allow to create new medication request with the same mnn in one treatment period

### `medical_programs_response`
+ `id`: `c7d52544-0bd4-4129-97b0-2d72633e0490` (string, required) - Internal medical program ID, a UUID string.
+ `name`: `Доступні ліки` (string, required) - medical program name that is used on govermental level
+ `same_mnn_in_treatment_period`: true (boolean, required) - Allow to create new medication request with the same mnn in one treatment period
+ `is_active`: `true` (boolean, required) - Is medical program active or not. True - Active; False - Inactive
+ `inserted_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `inserted_by`: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, required)
+ `updated_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `updated_by`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required)

### `medical_programs_list`
+ `id`: `c7d52544-0bd4-4129-97b0-2d72633e0490` (string, required) - Internal medical program ID, a UUID string.
+ `name`: `Доступні ліки` (string, required) - medical program name that is used on govermental level
+ `is_active`: `true` (boolean, required) - Is medical program active or not. True - Active; False - Inactive

## `Medication request`
### `Medication_request_Public_Response`
+ `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Medication Request identifier
+ `status`: `ACTIVE` (enum[string], required) - Medication Request status. Find available **statuses** on State Charts wiki page
    - ACTIVE
    - COMPLETED
    - REJECTED
    - EXPIRED
+ `request_number` : `0000-243P-1X53-EH38` (string) - Public medication request human readable number
+ `created_at`: `2017-08-17` (string, required) - Medication request creation date, which is determined by the external system. Format *DATE '2017-09-07'*
+ `started_at`: `2017-08-17` (string, required) - Start date of a treatment period, which is determined by the external system. Greater or equal to **created_at**. Format *DATE '2017-09-07'*
+ `ended_at`: `2017-09-16` (string, required) - End date of a treatment period, which is determined by the external system. Greater or equal to **started_at**. Format *DATE '2017-10-07'*
+ `dispense_valid_from`: `2017-08-17` (string, required) - Start date of dispense period, which is determined by the external system. Format *DATE '2017-09-07'*
+ `dispense_valid_to`: `2017-09-16` (string, required) - End date of dispense period, which is determined by the external system. Greater or equal to **dispense_valid_from**. Format *DATE '2017-10-07'*
+ `legal_entity` (`Legal_Entity_Short`, required)
    + `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
+ `division` (`Division_Details`, required)
+ `employee` (Employee_Minimal, required)
+ `person` (`Person_Medication_Request`, required)          
+ `medication_info` (`Innm_Dosage_for_Medication_request_Responce`, required)
+ `medical_program` (`Medical_Program_Response`, optional)
+ intent: plan (enum, required) - Represents the medication request purpose. Dictionary MEDICATION_REQUEST_INTENT 
    - plan - The request represents an intention to ensure something occurs without providing an authorization for others to act.
    - order - The request represents a request/demand and authorization for action.
+ category: community (enum, required) - Type of medication usage. Dictionary MEDICATION_REQUEST_CATEGORY
    - community - Includes requests for medications to be administered or consumed by the patient in their home
+ `context`(Reference, required, fixed-type)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
+ `dosage_instruction` (array, optional, fixed-type)
    + (Dosage_Instruction)
+ `rejected_at`: `2017-04-20T19:14:13Z` (string, optional) - Reject date - ISO 8601 date and time in UTC timezone.
+ `rejected_by`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, optional) - Rejected user identifier
+ `reject_reason` : `Помилка призначення. Несумісні препарати.` (string, optional) - Medication request reject reason 

### `Medication_request_Reject_Public_Response`
+ `rejected_at`: `2017-04-20T19:14:13Z` (string, required) - Reject date - ISO 8601 date and time in UTC timezone.
+ `rejected_by`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required) - Rejected user identifier
+ `reject_reason` : `Помилка призначення. Несумісні препарати.` (string, required) - Medication request reject reason 


## `Medication Dispense`
### `Medication_Dispense_Request`
+ `medication_request_id`: `f08ba3a3-157a-4adc-b65d-737f24f3a1f4` (string, required) - Key for the Medication request 
+ `dispensed_at`: `2017-08-17` (string, required) - date of dispense 
+ dispensed_by: `Іванов Іван Іванович` (string, optional) - in case pharmacist uses owner's token this field should be filled with pharmacist's name
+ `division_id`: `2fc70f30-08dc-493c-8d08-925905d7b1e8` (string, required) - Active legal entity (Pharmacy) division which provides dispense Identifier
+ `medical_program_id`: `6ee844fd-9f4d-4457-9eda-22aa506be4c4` (string, required) - Active medical program within which medications are going to be provided
+ `dispense_details` (array, fixed, required)
    + (object)
        + include `Medication_Dispense_Detail_Request`

### `Medication_Dispense_Response`
+ `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Medication Dispense Response Identifier
+ `medication_request` (`Medication_request_Public_Response`, required) - Medication request 
+ `dispensed_at`: `2017-08-17` (string, required) - date of dispense 
+ dispensed_by: `Іванов Іван Іванович` (string, optional) - in case pharmacist uses owner's token this field should be filled with pharmacist's name
+ `party` (object)
    + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required)
    + include `Party_Short`
+ `legal_entity` (`Legal_Entity_Short`, required) - Active legal entity (Pharmacy) the division belongs to Identifier
+ `division` (`Division_Short`, required) - Active legal entity (Pharmacy) division which provides dispense Identifier
+ `medical_program` (`Medical_Program_Response`, required) - Active medical program within which medications are going to be provided
+ `details` (array[`Medication_Dispense_Detail_Response`], fixed, required)
+ `payment_id`: 1239804 (string, optional) - receipt number for the paid medications
+ `payment_amount`: 50 (number, optional) - receipt amount which was paid by patient (UAH)
+ `status`: NEW (string, required) - Medication Dispense status (NEW, PROCESSED, REJECTED, EXPIRED)
+ `inserted_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `inserted_by`: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, required)
+ `updated_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `updated_by`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required)

### `Medication_Dispense_Detail_Request`
+ `medication_id`: `787b6ef1-1d3a-4129-849c-87716c9a2130` (string, required) - Identifier of brand medications 
+ `medication_qty`: 10 (number, required) - qnty of medication_unit (pill/ampoule/container/bottle/vial/aerosol) which provides to the patient
+ `sell_price`: 18.65 (number, required) - pharmacy's price for one nondivisible medication_unit (pill/ampoule/container/bottle/vial/aerosol)
+ `sell_amount`: 186.5 (number, required) - total pharmacy's price for the requested medication quantity
+ `discount_amount`: 150 (number, required) - pharmacy's expected price of dicsount for the requested medication quantity

### `Medication_Dispense_Detail_Response`
+ `medication` (`Medication_Short`, required) - Identifier of brand medications 
+ `medication_qty`: 10 (number, required) - qnty of medication_unit (pill/ampoule/container/bottle/vial/aerosol) which provides to the patient
+ `sell_price`: 18.65 (number, required) - pharmacy's price for one nondivisible medication_unit (pill/ampoule/container/bottle/vial/aerosol)
+ `sell_amount`: 186.5 (number, required) - total pharmacy's price for the requested medication quantity
+ `discount_amount`: 150 (number, required) - pharmacy's expected price of dicsount for the requested medication quantity
+ `reimbursement_amount`: 450 (number, required) - Amount to reimburse for medication package by medical_program

## `Reimbursement_Report`
### `Reimbursement_Report_Response`
+ `medication_request` (object, required)
    + `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Medication Request identifier
    + `created_at`: `2017-08-17` (string, required) - Medication request creation date, which is determined by the external system. Format *DATE '2017-09-07'*
    + `started_at`: `2017-08-17` (string, required) - Start date of a treatment period, which is determined by the external system. Greater or equal to **created_at**. Format *DATE '2017-09-07'*
    + `ended_at`: `2017-09-16` (string, required) - End date of a treatment period, which is determined by the external system. Greater or equal to **started_at**. Format *DATE '2017-10-07'*
    + `dispense_valid_from`: `2017-08-17` (string, required) - Start date of dispense period, which is determined by the external system. Format *DATE '2017-09-07'*
    + `dispense_valid_to`: `2017-09-16` (string, required) - End date of dispense period, which is determined by the external system. Greater or equal to **dispense_valid_from**. Format *DATE '2017-10-07'*
    + `status`: `NEW` (string, required) - Medication Dispense status (NEW, PROCESSED, REJECTED, EXPIRED)
    +  include (`Medication_request_Reject_Public_Response`, optional)
    + `person_id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Person identifier
    + `legal_entity` (object, required)
        + `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Legal entity identifier
        + `name`: `Клініка Ноунейм` (string, required)
        + `edrpou`: `5432345432` (string, required)
    + `division` (object, required) 
        + `id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
        + `name`: `Бориспільське відділення Клініки Ноунейм` (string, required)
        + `mountain_group`: `false` (boolean, optional)
        + `address` (`Address`, required)
    + `employee` (object, required) 
        + `id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - Employee identifier with `type=DOCTOR` who issued Medication Request.
        + `party_id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - Employee Party id
        + `last_name`: `Іванов` (string, required)
        + `first_name`: `Петро` (string, required)
        + `second_name`: `Миколайович` (string, optional)
        + `position`: `P6` (string, required) - `Dictionary POSITION`
        + `employee_type`: `DOCTOR` (string) - `Dictionary: EMPLOYEE_TYPE`
    + `medical_program` (`Medical_Program_Response`, required)
+ `medication_dispense`(object, optional)
    + `id`: `f08ba3a3-157a-4adc-b65d-737f24f3a1f4` (string, optional) - Medication dispense Identifier
    + `dispensed_at`: `2017-08-17` (string, optional) - date of dispense
    + `dispensed_by`: `Аннова Анна Анновна` (string, required) - in case pharmacist uses owner's token this field should be filled with pharmacist's name
    + `status`: NEW (string, optional) - Medication Dispense status (NEW, PROCESSED, REJECTED, EXPIRED)
    + `medications` (array, fixed, optional)
        + (object)
            + id: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Identifier of brand medications
            + `code_atc` (array, required)
               + `М01АЕ01` ([string])
               + `C01BD01` ([string])
            + include `Medication_Short`
            + `package_qty`: 30 (number, required) - qnty medications in the package
            + `details` (object, required)
                + `medication_qty`: 10 (number, required) - qnty of medication_unit (pill/ampoule/container/bottle/vial/aerosol) which provides to the patient
                + `sell_price`: 18.65 (number, required) - pharmacy's price for one nondivisible medication_unit (pill/ampoule/container/bottle/vial/aerosol)
                + `sell_amount`: 186.5 (number, required) - total pharmacy's price for the requested medication quantity
                + `discount_amount`: 150 (number, required) - pharmacy's expected price of dicsount for the requested medication quantity
                + `reimbursement_amount`: 450 (number, required) - Amount to reimburse for medication package by medical_program
    + `medical_program` (`Medical_Program_Response`, optional)
    + `legal_entity` (object, optional)
        + `id`: `b075f148-7f93-4fc2-b2ec-2d81b19a9b7b` (string, required) - Legal entity identifier
        + `name`: `Аптека 42` (string, required) - Legal entity name
        + `edrpou`: `5432345431` (string, required) - Legal entity edrpou
    + `division` (object, optional) 
        + `id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required)
        + `name`: `Бориспільське відділення Аптеки 42` (string, required)
        + `mountain_group`: `false` (boolean, optional)
        + `address` (`Address`, required)
    + `party` (object, optional) 
        + `id`: `d290f1ee-6c54-4b01-90e6-d701748f0851` (string, required) - Employee Party id
        + `last_name`: `Іванов` (string, required)
        + `first_name`: `Петро` (string, required)
        + `second_name`: `Миколайович` (string, optional)

## Uploading and processing registers

### `Registers_response`
+ `id`: `09106b70-18b0-4726-b0ed-6bda1369fd52` (string, required) 
+ `file_name`: `November 2018 Kyiv region` (string, required)
+ `status`: processing (enum, required)
        - new 
        - processing 
        - processed 
+ `entity_type`: patient (enum, required)
        - patient 
        - employee 
+ `type`: `death_registration` (string, required)
+ `reason_description`: `Реєстр смертності за 01-31.01.2018` (string, optional)
+ `qty`(object, required) 
  + `not_found`: 10 (number, required)- not matched records
  + `processing`: 1 (number, required) - entries are still in the procces of matching
  + `errors`: 2 (number, required) - entires which had errors and couln't be processed
  + `total`: 100 (number, required) - total entries in the file
+ `inserted_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `inserted_by`: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, required)
+ `updated_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `updated_by`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required)

### `Registers_list_response`
+ `id`: `09106b70-18b0-4726-b0ed-6bda1369fd52` (string, required) 
+ `file_name`: `November 2018 Kyiv region` (string, required)
+ `status`: processing (enum, required)
        - new 
        - processing 
        - processed 
+ `reason_description`: `Реєстр смертності за 01-31.01.2018` (string, optional)
+ `type`: `death_registration` (string, required)
+ `qty`(object, required) 
  + `not_found`: 10 (number, required)- not matched records
  + `processing`: 1 (number, required) - entries are still in the procces of matching
  + `errors`: 2 (number, required) - entires which had errors and couln't be processed
  + `total`: 100 (number, required) - total entries in the file
+ `inserted_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `inserted_by`: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, required)
+ `updated_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `updated_by`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required)
+ `errors`: `Row has length 4 - expected length 5 on line 5, Row has length 1 - expected length 5 on line 7` (array, optional)
    

### `Register_entries_list_response`
+ `id`: `09106b70-18b0-4726-b0ed-6bda1369fd52` (string, required) - record id
+ `register_id`: `09106b70-18b0-4726-b0ed-6bda1369fd52` (string, required) - file id
+ `file_name`: `November 2018 Kyiv region` (string, required)
+ `type`: `death_registration` (string, required)
+ `status`: processing (enum, required)
        - processing
        - matched
        - not_found
+ `id_type`: `3028106992` (string, required)
+ `id_number`: `123456789` (string, required)
+ `inserted_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `inserted_by`: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, required)
+ `updated_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `updated_by`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required)

## Roles
### Role (object)
+ name: `Doctor` (string, required) - role title
+ scope: `notebooks:read notebooks:create patients:read` (string, required) - List of scopes, space-separated.

### `Role_Response` (Role)
+ id: `role-1380df72-275a-11e7-93ae-92361f002671` (string) - Internal role ID, a UUID string.


## Clients
### Client_Deprecated (object)
+ id: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, required) - Unique client id
+ name: `Аптека 199` (string, required) - Client name
+ secret: `ZlFOaHBTR0d3Q0hQcDEraHVYdXBVZz09` (string, required)
+ redirect_uri: `http://example2.com` (string, required)
+ settings (object)
+ priv_settings (object)

### Client (object)
+ id: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, required) - Unique client id
+ name: `eHealth portal` (string, required) - Client name.
+ settings (object) - Client settings.
+ user_id: `user-1380df72-275a-11e7-93ae-92361f002671` (string, required) - Owner-user internal ID, a UUID string.
+ `client_type_id`: `261d52f9-b355-4029-863d-8fc52e9d0b81` - Client Type identifier
+ is_blocked: `false` (string, required) - whether the client is marked as fraud
+ block_reason: `MSP has fakes doctors` (string, optional) - the reason to block
+ inserted_at: `2017-04-20T19:14:13Z` (string, required) - date and time, when the entity was created
+ updated_at: `2017-04-20T19:14:13Z` (string, required) - date and time, when the entity was updated

## Connections
### Connection
+ id: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, required) - Unique connection id
+ client_id: `c4a6d45f-2cf2-4e6d-909a-5962604ad63b` (string, required) - Unique connection id
+ consumer_id: `25c03af6-69bd-439e-b0dd-f1669b3dbbfd` (string, required) - Unique connection id
+ redirect_uri: `http://example2.com` (string, required)

## Events
### `Get_events`
+ id: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, required) - Event identifier
+ event_type: `StatusChangeEvent` (string, required) - the name of event
+ entity_type: `MedicationDispense` (string, required) - the name of entity that was changed
+ entity_id: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, required) - uuid of changed object
+ properties (object, required)
    + status (object, required)
        + include (`Event_properties`, required)
    + employee_id (object, optional)
        + new_value: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string)
+ event_time: `2017-04-20T19:14:13Z` (string, required) - time, when the entity was changed
+ changed_by: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, required) - uuid of the person who changed the entity

### `Event_properties`
+ new_value: `COMPLETED` (string) - new status of entity

## `Contract_request`

### `Init_contract_request_response`
+ id: `09106b70-18b0-4726-b0ed-6bda1369fd52` (string, required) - contract_request ID
+ statute_url: `url://upload` (string, required) - URL to upload statute document
+ additional_document_url: `url://upload` (string, required) - URL to upload additional document

### `Contract_request_Request_signed`
+ `signed_content`: `ew0KICAiY29udHJhY3Rvcl9vd25lcl9pZCI6ICJkZjlmNzBlZS00YjEyLTQ3NDAtYjBmNS1iYjVhZWExMTY4NjMiLA0KICAiY29udHJhY3Rvcl9iYXNlIjogItC90LAg0L/RltC00YHRgtCw0LLRliDQt9Cw0LrQvtC90YMg0L/RgNC+INCc0LXQtNC40YfQvdC1INC+0LHRgdC70YPQs9C+0LLRg9Cy0LDQvdC90Y8g0L3QsNGB0LXQu9C10L3QvdGPIiwNCiAgImNvbnRyYWN0b3JfcGF5bWVudF9kZXRhaWxzIjogew0KICAgICJiYW5rX25hbWUiOiAi0JHQsNC90Log0L3QvtC80LXRgCAxIiwNCiAgICAiTUZPIjogIjM1MTAwNSIsDQogICAgInBheWVyX2FjY291bnQiOiAiMzIwMDkxMDI3MDEwMjYiDQogIH0sDQogICJjb250cmFjdG9yX3Jtc3BfYW1vdW50IjogNTAwMDAsDQogICJjb250cmFjdG9yX2RpdmlzaW9ucyI6IFsNCiAgICAiaWQ6IGAyOTIyYTI0MC02M2RiLTQwNGUtYjczMC0wOTIyMmJmZWIyZGRgIg0KICBdLA0KICAiY29udHJhY3Rvcl9lbXBsb3llZV9kaXZpc2lvbnMiOiBbDQogICAgew0KICAgICAgImVtcGxveWVlX2lkIjogIjI5MjJhMjQwLTYzZGItNDA0ZS1iNzMwLTA5MjIyYmZlYjJkZCIsDQogICAgICAic3RhZmZfdW5pdHMiOiAwLjUsDQogICAgICAiZGVjbGFyYXRpb25fbGltaXQiOiAyMDAwLA0KICAgICAgImRpdmlzaW9uX2lkIjogIjI5MjJhMjQwLTYzZGItNDA0ZS1iNzMwLTA5MjIyYmZlYjJkZCINCiAgICB9DQogIF0sDQogICJleHRlcm5hbF9jb250cmFjdG9yX2ZsYWciOiB0cnVlLA0KICAiZXh0ZXJuYWxfY29udHJhY3RvcnMiOiB7DQogICAgImxlZ2FsX2VudGl0eV9pZCI6ICIyOTIyYTI0MC02M2RiLTQwNGUtYjczMC0wOTIyMmJmZWIyZGQiLA0KICAgICJjb250cmFjdCI6IHsNCiAgICAgICJudW1iZXIiOiAiMTIzNDU2NyIsDQogICAgICAiaXNzdWVkX2F0IjogIjIwMTgtMDEtMDEiLA0KICAgICAgImV4cGlyZXNfYXQiOiAiMjAxOS0wMS0wMSINCiAgICB9LA0KICAgICJkaXZpc2lvbnMiOiBbDQogICAgICB7DQogICAgICAgICJpZCI6ICIyOTIyYTI0MC02M2RiLTQwNGUtYjczMC0wOTIyMmJmZWIyZGQiLA0KICAgICAgICAibWVkaWNhbF9zZXJ2aWNlIjogItCf0L7RgdC70YPQs9CwINCf0JzQlCINCiAgICAgIH0NCiAgICBdDQogIH0sDQogICJzdGFydF9kYXRlIjogIjIwMTctMDQtMjAiLA0KICAiZW5kX2RhdGUiOiAiMjAxNy0wNC0yMCIsDQogICJpZF9mb3JtIjogIjUiLA0KICAiY29udHJhY3RfbnVtYmVyIjogIjAwMDAtOUVBWC1YVDdYLTMxMTUiLA0KICAic3RhdHV0ZSI6ImJhc2U2NF9kb2N1bWVudCINCiAgImVxdWlwbWVudF9hZ3JlZW1lbnQiOiJiYXNlNjRfZG9jdW1lbnQiDQp9` (string,required)
+ `signed_content_encoding`: `base64` (string, required)

### `Contract_request_Request`
+ `contract_type`: `CAPITATION`(string,required)
+ `contractor_owner_id`: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, required) - person which represent legal entity
+ `contractor_base`: `на підставі закону про Медичне обслуговування населення` (string, required) - documents which allows to represent clinic
+ `contractor_payment_details` (object, required)
    + include (`Payment_details`, required)
+ `contractor_rmsp_amount`: `50000` (number, required) - the amount of population which were served by this MSP
+ `contractor_divisions` (array, required)
    + id: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required) - division ID
+ `contractor_employee_divisions` (array, optional)
    + (object)
        + include `Employee_divisions`
+ `external_contractor_flag`: true (boolean, optional) - the existence of second appendix
+ `external_contractors` (array, optional)
    + (object)
        + include (`External_contractors`, required)
+ `start_date`: `2017-04-20` (string, required) - contract start date 
+ `end_date`: `2017-04-20` (string, required) - contract end date
+ `id_form`: `PMD_1` (string, required) - type of contract {DICTIONARY CONTRACT_TYPE}
+ `contract_number`: `0000-9EAX-XT7X-3115` (string, optional) - number of existing VERIFIED contract


### `Contract_request_Request_reimbursement`
+ `contract_type`: `REIMBURSEMENT`(string, required)
+ `contractor_owner_id`: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, required) - person which represent legal entity
+ `contractor_base`: `на підставі закону про Медичне обслуговування населення` (string, required) - documents which allows to represent clinic
+ `contractor_payment_details` (object, required)
    + include (`Payment_details`, required)
+ `contractor_divisions` (array, required)
    + id: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required) - division ID
+ `start_date`: `2017-04-20` (string, required) - contract start date 
+ `end_date`: `2017-04-20` (string, required) - contract end date
+ `id_form`: `PMD_1` (string, required) - type of contract {DICTIONARY CONTRACT_TYPE}
+ `contract_number`: `0000-9EAX-XT7X-3115` (string, optional) - number of existing VERIFIED contract
+ `medical_program_id`: `3914a240-63db-404e-b730-09222bfeb2d0` (string, required) - id of a medical program that is a subject of reimbursment contract

### `Contract_request_list_capitation`
+ id: `09106b70-18b0-4726-b0ed-6bda1369fd52` (string, required) - contract_request ID
+ `contract_type`: `CAPITATION`(string, required)
+ `contractor_legal_entity_id`: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, required) - legal entity ID which make contract request
+ `contractor_owner_id`: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, required) - person which represent legal entity
+ `contractor_base`: `на підставі закону про Медичне обслуговування населення` (string, required) - documents which allows to represent clinic
+ status: `NEW` (string, required) - contract_request status
+ status_reason: `Не відповідає попереднім домовленостям`(string, optional) - reason of status theat is setted bu nhs
+ `nhs_signer_id`: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, optional) - person which represents nhs
+ `nhs_legal_entity_id`: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, optional) - nhs legal entity ID
+ `nhs_signer_base`: `на підставі наказу` (string, optional) - documents which allows to represent nhs
+ issue_city: `Київ` (string, optional) - place of contract request
+ `nhs_contract_price`: `50000` (number, optional) - contract price
+ `nhs_payment_method`: `prepayment` (enum, optional) - payment method for contract
+ contract_number: `0000-9EAX-XT7X-3115` (string, optional) - human readable number of contract request.
+ contract_id: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, optional) - contract id
+ `parent_contract_id`: `22e416c4-5747-41cd-9f73-c3a85cdee885` (string, optional) - parent contract id
+ `start_date`: `2017-04-20` (string, required) - contract start date 
+ `end_date`: `2017-04-20` (string, required) - contract end date



### `Contract_request_list_reimbursement`
+ id: `09106b70-18b0-4726-b0ed-6bda1369fd52` (string, required) - contract_request ID
+ `contract_type`: `REIMBURSEMENT`(string, required)
+ `contractor_legal_entity_id`: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, required) - legal entity ID which make contract request
+ `contractor_owner_id`: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, required) - person which represent legal entity
+ `contractor_base`: `на підставі закону про Медичне обслуговування населення` (string, required) - documents which allows to represent clinic
+ status: `NEW` (string, required) - contract_request status
+ status_reason: `Не відповідає попереднім домовленостям`(string, optional) - reason of status theat is setted bu nhs
+ `nhs_signer_id`: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, optional) - person which represents nhs
+ `nhs_legal_entity_id`: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, optional) - nhs legal entity ID
+ `nhs_signer_base`: `на підставі наказу` (string, optional) - documents which allows to represent nhs
+ issue_city: `Київ` (string, optional) - place of contract request

+ `nhs_payment_method`: `prepayment` (enum, optional) - payment method for contract
+ contract_number: `0000-9EAX-XT7X-3115` (string, optional) - human readable number of contract request.
+ contract_id: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, optional) - contract id
+ `parent_contract_id`: `22e416c4-5747-41cd-9f73-c3a85cdee885` (string, optional) - parent contract id
+ `start_date`: `2017-04-20` (string, required) - contract start date 
+ `end_date`: `2017-04-20` (string, required) - contract end date
+ `medical_program_id`: `12e416c4-5747-41cd-9f73-c3a85cdee885` (string, optional) - id of a medical program that is a subject for reimbursement contract

### `Contract_request_Update`
+ `contract_type`: `CAPITATION`
+ `nhs_signer_id`: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, optional) - id of signer from nhs side 
+ `nhs_signer_base`: `на підставі наказу` (string, optional) - documents which allows to represent nhs
+ `nhs_contract_price`: `50000` (number, optional) - contract price
+ `nhs_payment_method`: `prepayment` (enum, optional) - payment method for contract
+ `issue_city`: `Київ` (string, optional) - place of contract request
+ `miscellaneous`: `Жодна зі сторін не має права передавати права і зобов’язання за цим контрактом третій стороні без письмової на те згоди іншої сторони` (string, optional) - miscellaneous of a contract

### `Contract_request_Details_Capitation`
+ id: `09106b70-18b0-4726-b0ed-6bda1369fd52` (string, required) - contract_request ID 
+ `contract_type`: `CAPITATION`(string,required)
+ `contractor_legal_entity`(object, required)
    + include (`contract_legal_entity_details`)
+ `contractor_owner` (object, required)
    + include (`Person_Minimal_Contract`)
+ `contractor_base`: `на підставі закону про Медичне обслуговування населення` (string, required) - documents which allows to represent clinic
+ `contractor_payment_details` (object, required)
    + include (`Payment_details`, required)
+ `contractor_rmsp_amount`: `50000` (number, required) - the amount of population which were served by this MSP
+ `contractor_divisions` (array, fixed, required)
    + (object)
        + include `Contractor_divisions`
+ `contractor_employee_divisions` (array, fixed, optional)
    + (object)
        + include `Employee_divisions_response`
+ `external_contractor_flag`: true (boolean, optional) - the existence of second appendix
+ `external_contractors` (array, optional)
    + (object)
        + include (`External_contractors_response`, required)
+ `start_date`: `2017-04-20` (string, required) - contract start date 
+ `end_date`: `2017-04-20` (string, required) - contract end date
+ `id_form`: `PMD_1` (string, required) - type of contract {DICTIONARY CONTRACT_TYPE}
+ `nhs_signer` (object, optional) 
    + include (`Person_Minimal_Contract`)
+ `nhs_legal_entity` (object)
    + include (`contract_legal_entity_details`)
+ `nhs_signer_base`: `на підставі наказу` (string, optional) - documents which allows to represent nhs
+ `nhs_contract_price`: `50000` (number, optional) - contract price
+ `nhs_payment_method`: `BACKWARD` (enum, optional) - payment method for contract
+ status: `NEW` (string, required) - contract_request status
+ status_reason: `Не відповідає попереднім домовленостям`(string, optional) - reason of status that was set
+ issue_city: `Київ` (string, optional) - place of contract request
+ contract_number: `0000-9EAX-XT7X-3115` (string, optional) - human readable number of contract request.
+ contract_id: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, optional) - contract id
+ `parent_contract_id`: `22e416c4-5747-41cd-9f73-c3a85cdee885` (string, optional) - parent contract id
+ `start_date`: `2017-04-20` (string, required) - contract start date 
+ `end_date`: `2017-04-20` (string, required) - contract end date
+ `printout_content`: `Contract request content` (optional) - HTML document for contract request, is shown only for requests in `APPROVED`, `PENDING_NHS_SIGN`, `NHS_SIGNED`, `SIGNED` statuses.
+ `previous_request_id`: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, optional) - changed contract request id
+ `assignee_id`: `22e416c4-5747-41cd-9f73-c3a85cdee885` (string, optional) - NHS employee which review contract request



### `Contract_request_Details_Reimbursement`
+ id: `09106b70-18b0-4726-b0ed-6bda1369fd52` (string, required) - contract_request ID 
+ `contract_type`: `REIMBURSEMENT`(string,required)
+ `contractor_legal_entity`(object, required)
    + include (`contract_legal_entity_details`)
+ `contractor_owner` (object, required)
    + include (`Person_Minimal_Contract`)
+ `contractor_base`: `на підставі закону про Медичне обслуговування населення` (string, required) - documents which allows to represent clinic
+ `contractor_payment_details` (object, required)
    + include (`Payment_details`, required)

+ `contractor_divisions` (array, fixed, required)
    + (object)
        + include `Contractor_divisions`


+ `start_date`: `2017-04-20` (string, required) - contract start date 
+ `end_date`: `2017-04-20` (string, required) - contract end date
+ `id_form`: `RMB-1` (string, required) - type of contract {DICTIONARY CONTRACT_TYPE}
+ `nhs_signer` (object, optional) 
    + include (`Person_Minimal_Contract`)
+ `nhs_legal_entity` (object)
    + include (`contract_legal_entity_details`)
+ `nhs_signer_base`: `на підставі наказу` (string, optional) - documents which allows to represent nhs
+ `nhs_contract_price`: `50000` (number, optional) - contract price
+ `nhs_payment_method`: `BACKWARD` (enum, optional) - payment method for contract
+ status: `NEW` (string, required) - contract_request status
+ status_reason: `Не відповідає попереднім домовленостям`(string, optional) - reason of status that was set
+ issue_city: `Київ` (string, optional) - place of contract request
+ contract_number: `0000-9EAX-XT7X-3115` (string, optional) - human readable number of contract request.
+ contract_id: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, optional) - contract id
+ `parent_contract_id`: `22e416c4-5747-41cd-9f73-c3a85cdee885` (string, optional) - parent contract id
+ `start_date`: `2017-04-20` (string, required) - contract start date 
+ `end_date`: `2017-04-20` (string, required) - contract end date
+ `printout_content`: `Contract request content` (optional) - HTML document for contract request, is shown only for requests in `APPROVED`, `PENDING_NHS_SIGN`, `NHS_SIGNED`, `SIGNED` statuses.
+ `previous_request_id`: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, optional) - changed contract request id
+ `assignee_id`: `22e416c4-5747-41cd-9f73-c3a85cdee885` (string, optional) - NHS employee which review contract request
+ `medical_program_id`: `12e416c4-5747-41cd-9f73-c3a85cdee885` (string, optional) - id of a medical program that is a subject for reimbursement contract

### `Contract_request_Details_Full`
+ include `Contract_request_Details_Capitation`

### `Contract_request_Docs`
+ id: `09106b70-18b0-4726-b0ed-6bda1369fd52` (string, required) - contract_request ID 
+ status: `NEW` (string, required) - contract_request status
+ statute: `www.url_1` (string, required) - link to statute document
+ `additional_document`: `www.url_2` (string, required) - link to report with additional document

### `contract_legal_entity_details`
+ id: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, required) - legal entity ID which make contract request
+ name: Клініка Ноунейм (string, required) - full official name of legal entity also the name to show on public sources [as map, portal etc]
+ edrpou: 32323454 (string, required) - Unified Register of Businesses and Organizations
+ addresses (array[Address], required) - The max items of array is 2: REGISTRATION - required, RESIDENCE - optional. DIVISION is exception: REGISTRATION - optional, RESIDENCE - required


### `Payment_details`
+ `bank_name`: `Банк номер 1` (string, required) - bank name
+ MFO: `351005` (string, required) - bank code
+ `payer_account`: `32009102701026` (string, required) - Номер банківського рахунку

### `External_contractors`
+ `legal_entity_id`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required) - external_contractor ID
+ `contract` (object,required)
  + `number`: `1234567`(string, required) - number of contract with sub contractor
  + `issued_at`: `2018-01-01` (string, required) - issue date of contract with sub contractor
  + `expires_at`: `2019-01-01` (string, required) - expiry date of contract with sub contractor
+ divisions (array, fixed, required)
    + (object)
      + id: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required)
      + `medical_service`: `Послуга ПМД` (string, required)

### `External_contractors_response`
+ `legal_entity` (object)
    + include (`Legal_Entity_Short_Cabinet`)
+ `contract` (object,required)
  + `number`: `1234567`(string, required) - number of contract with sub contractor
  + `issued_at`: `2018-01-01` (string, required) - issue date of contract with sub contractor
  + `expires_at`: `2019-01-01` (string, required) - expiry date of contract with sub contractor
+ divisions (array, fixed, required)
    + (object)
      + id: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required)
      + name: Бориспільське відділення Клініки Ноунейм (string, required) - the full name of division
      + `medical_service`: `Послуга ПМД` (string, required)

### `Employee_divisions`
+ `employee_id`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required) - employee ID
+ `staff_units`: `0.5` (number, required)
+ `declaration_limit`: `2000` (number, required) - declaration limit for current employee within the contract
+ `division_id`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required) - division ID

### `Employee_divisions_response`
+ `employee`
    + include (`Person_Minimal_Contract`)
    + include (DoctorNew_Short_Single)
+ `staff_units`: `0.5` (number, required)
+ `declaration_limit`: `2000` (number, required) - declaration limit for current employee within the contract
+ `division_id`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required) - division ID 

### `Contractor_divisions`
+ id: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required) - division ID
+ name: Бориспільське відділення Клініки Ноунейм (string, required) - the full name of division
+ addresses (array[Address], required)
+ phones (array[Phone], required)
+ email: email@example.com (string, required) - division's email
+ working_hours (`workinghours`) - optional field, business hours by each day weekly, doesn't make any influence on business process and will be shown on portal and map.
+ mountain_group: false (boolean, optional)

### `Contracts_list_capitation`
+ id: `09106b70-18b0-4726-b0ed-6bda1369fd52` (string, required) - contract ID 
+ `contract_type`: `CAPITATION` (string, required)
+ `contractor_legal_entity_id`: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, required) - legal entity ID which make contract request
+ `contractor_owner` (object, required)
    + include (`Person_Minimal_Contract`)
+ `contractor_base`: `на підставі закону про Медичне обслуговування населення` (string, required) - documents which allows to represent clinic
+ status: `VERIFIED` (string, required) - contract_request status
+ `contractor_divisions` (array, required, fixed)
    + (object)
        + id: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required) - division ID
        + name: Бориспільське відділення Клініки Ноунейм (string, required) - the full name of division
+ `external_contractor_flag`: true (boolean, optional) - true if exists appendix 2
+ `nhs_signer_id`: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, optional) - person which represents nhs
+ `nhs_legal_entity_id`: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, optional) - nhs legal entity ID
+ `nhs_signer_base`: `на підставі наказу` (string, optional) - documents which allows to represent nhs
+ `issue_city`: `Київ` (string, optional) - place of contract request
+ `nhs_contract_price`: `50000` (number, optional) - contract price
+ contract_number: `0000-9EAX-XT7X-3115` (string, optional) - human readable number of contract request.
+ contract_request_id: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, optional) - contract request id
+ `start_date`: `2017-04-20` (string, required) - contract start date
+ `end_date`: `2018-04-20` (string, required) - contract start date
+ is_suspended: false (string, required) - whether the contract is active or temporary suspended
+ id_form: `PMD` (string, required)
+ parent_contract_id: `09106b70-18b0-4726-b0ed-6bda1369fd52` (string, optional)
+ `assignee_id`: `22e416c4-5747-41cd-9f73-c3a85cdee885` (string, optional) - NHS employee which review contract request


### `Contracts_list_reimbursement`
+ id: `09106b70-18b0-4726-b0ed-6bda1369fd52` (string, required) - contract ID 
+ `contract_type`: `REIMBURSEMENT` (string, required)
+ `contractor_legal_entity_id`: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, required) - legal entity ID which make contract request
+ `contractor_owner` (object, required)
    + include (`Person_Minimal_Contract`)
+ `contractor_base`: `на підставі закону про Медичне обслуговування населення` (string, required) - documents which allows to represent clinic
+ status: `VERIFIED` (string, required) - contract_request status
+ `contractor_divisions` (array, required, fixed)
    + (object)
        + id: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required) - division ID
        + name: Бориспільське відділення Клініки Ноунейм (string, required) - the full name of division

+ `nhs_signer_id`: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, optional) - person which represents nhs
+ `nhs_legal_entity_id`: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, optional) - nhs legal entity ID
+ `nhs_signer_base`: `на підставі наказу` (string, optional) - documents which allows to represent nhs
+ `issue_city`: `Київ` (string, optional) - place of contract request
+ `nhs_contract_price`: `50000` (number, optional) - contract price
+ contract_number: `0000-9EAX-XT7X-3115` (string, optional) - human readable number of contract request.
+ contract_request_id: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, optional) - contract request id
+ `start_date`: `2017-04-20` (string, required) - contract start date
+ `end_date`: `2018-04-20` (string, required) - contract start date
+ is_suspended: false (string, required) - whether the contract is active or temporary suspended
+ id_form: `RMB` (string, required)
+ parent_contract_id: `09106b70-18b0-4726-b0ed-6bda1369fd52` (string, optional)
+ `assignee_id`: `22e416c4-5747-41cd-9f73-c3a85cdee885` (string, optional) - NHS employee which review contract request
+ `medical_program_id`: `22e416c4-5747-41cd-9f73-c3a85cdee885` (string, optional) - id of a medical program that is a subject of a reimbursement contract


### `Contract_Details_Capitation`
+ id: `09106b70-18b0-4726-b0ed-6bda1369fd52` (string, required) - contract ID 
+ `contract_type`: `CAPITATION` (string, required)
+ `start_date`: `2017-04-20` (string, required) - contract start date 
+ `end_date`: `2017-04-20` (string, required) - contract end date
+ `contractor_legal_entity`(object, required)
    + include (`contract_legal_entity_details`)
+ `contractor_owner` (object, required)
    + include (`Person_Minimal_Contract`)
+ `contractor_base`: `на підставі закону про Медичне обслуговування населення` (string, required) - documents which allows to represent clinic
+ `contractor_payment_details` (object, required)
    + include (`Payment_details`, required)
+ `contractor_rmsp_amount`: `50000` (number, required) - the amount of population which were served by this MSP
+ `contractor_divisions` (array, fixed, required)
    + (object)
        + include `Contractor_divisions`
+ `external_contractor_flag`: true (boolean, optional) - the existence of second appendix
+ `external_contractors` (array, optional)
    + (object)
        + include (`External_contractors_response`, required)
+ `contractor_employee_divisions` (array, fixed, required)
    + (object)
        + include `Employee_divisions_response`
+ `nhs_signer_base`: `на підставі наказу` (string, optional) - documents which allows to represent nhs
+ `nhs_contract_price`: `50000` (number, optional) - contract price
+ `nhs_payment_method`: `prepayment` (enum, optional) - payment method for contract
+ status: `VERIFIED` (string, required) - contract status
+ reason: `не було виконано умов контракту` (string, optional) - additional the reason of terminated status 
+ `status_reason`: `default` (string, optional) - the reason of terminated status
+ `nhs_signer` (object, optional) 
    + include (`Person_Minimal_Contract`)
+ `nhs_legal_entity` (object)
    + include (`contract_legal_entity_details`)
+ issue_city: `Київ` (string, optional) - place of contract request
+ contract_number: `0000-9EAX-XT7X-3115` (string, optional) - human readable number of contract request.
+ contract_request_id: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, required) - contract request id
+ is_suspended: false (boolean, required) - whether the contract is active or temporary suspended
+ `end_date`: `2017-04-20` (string, required) - contract end date
+ id_form: `PMD` (string, required)
+ parent_contract_id: `09106b70-18b0-4726-b0ed-6bda1369fd52` (string, optional)



### `Contract_Details_Reimbursement`
+ id: `09106b70-18b0-4726-b0ed-6bda1369fd52` (string, required) - contract ID 
+ `contract_type`: `REIMBURSEMENT` (string, required)
+ `start_date`: `2017-04-20` (string, required) - contract start date 
+ `end_date`: `2017-04-20` (string, required) - contract end date
+ `contractor_legal_entity`(object, required)
    + include (`contract_legal_entity_details`)
+ `contractor_owner` (object, required)
    + include (`Person_Minimal_Contract`)
+ `contractor_base`: `на підставі закону про Медичне обслуговування населення` (string, required) - documents which allows to represent clinic
+ `contractor_payment_details` (object, required)
    + include (`Payment_details`, required)

+ `contractor_divisions` (array, fixed, required)
    + (object)
        + include `Contractor_divisions`


+ `nhs_signer_base`: `на підставі наказу` (string, optional) - documents which allows to represent nhs

+ `nhs_payment_method`: `prepayment` (enum, optional) - payment method for contract
+ status: `VERIFIED` (string, required) - contract status
+ status_reason: `не було виконано умов контракту` (string, optional) - the reason of terminated status 
+ `nhs_signer` (object, optional) 
    + include (`Person_Minimal_Contract`)
+ `nhs_legal_entity` (object)
    + include (`contract_legal_entity_details`)
+ issue_city: `Київ` (string, optional) - place of contract request
+ contract_number: `0000-9EAX-XT7X-3115` (string, optional) - human readable number of contract request.
+ contract_request_id: `df9f70ee-4b12-4740-b0f5-bb5aea116863` (string, required) - contract request id
+ is_suspended: false (boolean, required) - whether the contract is active or temporary suspended
+ `end_date`: `2017-04-20` (string, required) - contract end date
+ id_form: `RMB` (string, required)
+ parent_contract_id: `09106b70-18b0-4726-b0ed-6bda1369fd52` (string, optional)
+ `medical_program_id`: `22e416c4-5747-41cd-9f73-c3a85cdee885` (string, optional) - id of a medical program that is a subject of a reimbursement contract

### `Capitation_report`
+ id: `09106b70-18b0-4726-b0ed-6bda1369fd52` (string, required) - Unique report id
+ billing_date: `2018-05-01` (string, required) - Report billing date
+ inserted_at: `2018-05-22` (string, required) - Date that shows when the report was generated

### `Capitation_report_detail`
+ id: `29000165-09106b70-18b0-4726-b0ed-6bda1369fd52` (string, required) - Synthetical record identifier
+ biling_date: `2017-04-20` (string, required) - report biling date
+ report_id: `09106b70-18b0-4726-b0ed-6bda1369fd52` (string, required) - Unique report id
+ legal_entity_id: `09106b70-18b0-4726-b0ed-6bda1369fd52` (string, required) - Legal entity id
+ edrpou: `29000165` (string, required) - Legal entity edrpou
+ legal_entity_name: `Поліклініка для Капітації` (string, required) - Legal entity name
+ capitation_contracts (array, required)
    + (object)
        + contract_id: `09106b70-18b0-4726-b0ed-6bda1369fd52` (string, required) - contract ID
        + contract_number: `0000-9EAX-XT7X-3115` (string, optional) - human readable number of contract request.
        + details (array, required)
            + (object)
                + mountain_group: true (boolean)
                + attributes (object, required)
                    + `0-5`: 17 (number, required)
                    + `6-17`: 7 (number, required)
                    + `18-39`: 9 (number, required)
                    + `40-65`: 12 (number, required)
                    + `65+`: 15 (number, required)
            + (object)
                + mountain_group: false (boolean)
                + attributes (object, required)
                    + `0-5`: 22 (number, required)
                    + `6-17`: 10 (number, required)
                    + `18-39`: 15 (number, required)
                    + `40-65`: 19 (number, required)
                    + `65+`: 21 (number, required)
        + total (object, required)
            + attributes (object, required)
                + `0-5`: 39 (number, required)
                + `6-17`: 17 (number, required)
                + `18-39`: 24 (number, required)
                + `40-65`: 31 (number, required)
                + `65+`: 36 (number, required)
